<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>U2.Data.Client</name>
  </assembly>
  <members>
    <member name="T:U2.Data.Client.U2Command">
      <summary>This class represents a SQL statement or subroutine to execute against U2 database. This class cannot be inherited. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.U2CommandBuilder">
      <summary>This class is used to automatically generate the single-table commands used to resolve any changes made to a DataSet and the associated database. This is not
an inheritable class. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.U2Connection">
      <summary>
        <para>The <strong>U2Connection</strong> class represents an open connection to the U2 database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2ConnectionStringBuilder">
      <summary>This class is used to create and manage the&amp;nbsp;connection string contents found&amp;nbsp;in the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2Connection.html"&gt;U2Connection&lt;/A&gt;. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.U2DataAdapter">
      <summary>
        <para>This class represents the set of data commands and database connections used to fill the <strong>DataSet</strong><font color="black">and update the
database.</font></para>
        <para></para>
        <para>
          <font color="black">
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2DataReader">
      <summary>This class is used when reading a forward-only stream of data rows from a database. This is not an inheritable class.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="T:U2.Data.Client.U2DataSourceEnumerator">
      <summary>
        <para>This class provides a mechanism for enumerating all available instances of the U2 databases.</para>
        <para>
          <span style="FONT-SIZE: 9pt; COLOR: rgb(0,0,0); DIRECTION: ltr" dir="ltr">
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</span>
        </para>
        <div id="imcontent" dir="ltr"></div>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2Error">
      <summary>
        <para>This class collects information relevant to a warning or error returned by the database. This class cannot be inherited.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2ErrorCollection">
      <summary>
        <para>This class contains all the U2Error objects create in response to a single provider-related failure.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2Exception">
      <summary>
        <para>This class is the exception that is generated when a warning or error is returned by a U2 database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2Factory">
      <summary>
        <para>This class represents a set of methods for creating instances of the System.Data.Common data source classes for the U2 Database Provider for .NET.</para>
        <para>
          <font color="black">
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2InfoMessageEventArgs">
      <summary>
        <para>This class provides data for the InfoMessage event. This class cannot be inherited.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2Parameter">
      <summary>
        <para>This class represents a U2Command parameter and optionally, it mapping to a DataColumn. This is not an inheritable class.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2ParameterCollection">
      <summary>
        <para class="shortdesc">Represents a collection of parameters relevant to a U2Command<font color="black">as well as their respective mappings to columns in a
<strong>DataSet</strong>.</font></para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2ParameterExtensions">
      <summary>
        <para>This class defines the extension methods for the U2Parameter class. It provides a set of static methods.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2Permission">
      <summary>
        <para>This class enables the U2 .Net Data Provider to ensure that a user has a security level adequate to access a U2 database. This class cannot be
inherited.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2PermissionAttribute">
      <summary>
        <para>This class associates a security action with a custom security attribute.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2RowUpdatedEventArgs">
      <summary>
        <para>This class provides data for the <strong>RowUpdated</strong> event. This class cannot be inherited.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2RowUpdatingEventArgs">
      <summary>
        <para>This class provides data for the <strong>RowUpdating</strong> event. This class cannot be inherited.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2ServerMarks">
      <summary>
        <para>The <strong>U2ServerMarks</strong> class is used to provide server-side marks such as FM, VM, and SVM through the U2Connection class.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2Transaction">
      <summary>This class represents an SQL transaction that will be made in a database.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="T:U2.Data.Client.U2XmlAdapter">
      <summary>
        <para>This class represents a means of retrieving from a database and filling an XPathDocument instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Command.#ctor">
      <summary>This constructor initializes a new U2Command instance. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2Command.#ctor(System.String)">
      <summary>This constructor initializes a new U2Command instance using the text from a query. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="cmdText">
        <para>Type: System.String</para>
        <para>The text from a query.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Command.#ctor(System.String,U2.Data.Client.U2Connection)">
      <summary>This constructor initializes a new U2Command instance using the text from a query and a U2Connection object. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para></para>
      </returns>
      <param name="cmdText">
        <para>Type: System.String</para>
        <para>The text from a query.</para>
      </param>
      <param name="connection">
        <para>Type: U2.Data.Client.U2Connection</para>
        <para>The U2Connection object representing the database connection.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Command.#ctor(System.String,U2.Data.Client.U2Connection,U2.Data.Client.U2Transaction)">
      <summary>This constructor initializes a new U2Command instance using the text from a query, a U2Connection object, and a U2Transaction. &lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="cmdText">
        <para>Type: System.String</para>
        <para>The text from a query.</para>
      </param>
      <param name="connection">
        <para>Type: U2.Data.Client.U2Connection</para>
        <para>The U2Connection object representing the database connection.</para>
      </param>
      <param name="transaction">
        <para>Type: U2.Data.Client.U2Transaction</para>
        <para>The transaction in which the U2Command executes.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Command.Cancel">
      <summary>This method is used to cancel a U2Command. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2Command.CreateDbParameter">
      <summary>This method creates a new DbParameter object. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>Type: System.Data.Common.DbParameter<br />
A DbParameter object.</returns>
    </member>
    <member name="M:U2.Data.Client.U2Command.CreateParameter">
      <summary>This method creates a new &lt;A href="U2.Data.Client~U2.Data.Client.U2Parameter.html"&gt;U2Parameter&lt;/A&gt; object. &lt;?xml:namespace prefix = innovasys ns
= "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.U2Command</para>
        <para>A new U2Parameter object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Command.ExecuteNonQuery">
      <summary>This method executes an SQL&lt;STRONG&gt; &lt;/STRONG&gt;statement against the connection and returns the number of rows affected. &lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="U2Exception Class" cref="U2.Data.Client~U2.Data.Client.U2Exception">If this method fails, it throws a U2Exception.</exception>
      <returns>
        <para>Type : System.Int32<br />
For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value
is -1.</para>
        <para></para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Command.ExecuteScalar">
      <summary>This method executes the query, returning only the first column from the first row in a data set. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="U2Exception Class" cref="U2.Data.Client~U2.Data.Client.U2Exception">If this method fails, it throws a U2Exception.</exception>
      <returns>
        <para>Type: System.Object</para>
        <para>The first column in the first row of a data set.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Command.ExecuteXmlReader">
      <summary>This method sends the &lt;A href="U2.Data.Client~U2.Data.Client.U2Command~CommandText.html"&gt;CommandText&lt;/A&gt; to the&lt;A
href="U2.Data.Client~U2.Data.Client.U2Connection.html"&gt;U2Connection&lt;/A&gt; and builds an XmlReader object. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="U2Exception Class" cref="U2.Data.Client~U2.Data.Client.U2Exception">If this method fails, it throws a U2Exception.</exception>
      <returns>
        <para>Type: System.Xml.XMLReader</para>
        <para>An XmlReader object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Command.Prepare">
      <summary>This method creates a compiled version of the command. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2Command.ResetCommandTimeout">
      <summary>This method sets the &lt;A href="U2.Data.Client~U2.Data.Client.U2Command~CommandTimeout.html"&gt;CommandTimeout&lt;/A&gt; property to its default value.
&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2Command.Dispose(System.Boolean)">
      <summary>This method releases the unmanaged resources used by the&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2Command.html"&gt;U2Command&lt;/A&gt; object and
can also be used to release the managed resources. &lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="disposing">If set to <strong>true</strong>, both managed and unmanaged resources are release. If set to <strong>false</strong>, only the unmanaged resources are released.</param>
    </member>
    <member name="M:U2.Data.Client.U2Command.ExecuteJson(System.Boolean)">
      <summary>
        <para>This method sends the CommandText to the U2 connection and builds a JSON string. The default value is <strong>false</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="U2Exception Class" cref="U2.Data.Client~U2.Data.Client.U2Exception">This exception occurs when the command is run against a locked row or when a timeout occurs during a streaming operation. </exception>
      <returns>
        <para>Type: System.String</para>
        <para>The Json data is returned as a string value.</para>
      </returns>
      <param name="Useflat">
        <para>Type:System.Boolean</para>
        <para>If this value is set to <strong>false</strong>, then no argument is passed and the Json string contains the multivalue as an array. If this value is set to
<strong>true</strong>, the JSON string contains flat data.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Command.ExecuteJson(System.Data.DataTable,System.String)">
      <summary>
        <para>This method sends the CommandText to the U2 connection and builds a JSON string. The default value is <strong>false</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="U2Exception Class" cref="U2.Data.Client~U2.Data.Client.U2Exception">This exception occurs when the command is run against a locked row or when a timeout occurs during a streaming operation. </exception>
      <returns>
        <para>Type: System.String</para>
        <para>The Json data is returned as a string value .</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Command.ExecuteReader">
      <summary>This method sends the data in a CommandText to the&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2Connection.html"&gt;U2Connection&lt;/A&gt;, and uses
this to build a&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2DataReader.html"&gt;U2DataReader&lt;/A&gt;. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="U2Exception Class" cref="U2.Data.Client~U2.Data.Client.U2Exception">If this method fails, it throws a U2Exception.
A U2Connection is required. If the connection is closed, an InvalidOperationException is thrown.</exception>
      <returns>
        <para>Type: U2.Data.Client.U2DataReader</para>
        <para>A U2DataReader object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Command.ExecuteReader(System.Data.CommandBehavior)">
      <summary>This method sends the &lt;A href="U2.Data.Client~U2.Data.Client.U2Command~CommandText.html"&gt;CommandText&lt;/A&gt; to the &lt;A
href="U2.Data.Client~U2.Data.Client.U2Connection.html"&gt;U2Connection&lt;/A&gt;, and builds a &lt;A
href="U2.Data.Client~U2.Data.Client.U2DataReader.html"&gt;U2DataReader&lt;/A&gt; using one of the CommandBehavior values . &lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="U2Exception Class" cref="U2.Data.Client~U2.Data.Client.U2Exception">If this method fails, it throws a U2Exception.A U2Connection is required. If the connection is closed, an InvalidOperationException is thrown.</exception>
      <returns>
        <para>Type: System.Data.Command.Behavior</para>
        <para>A U2DataReader object.</para>
      </returns>
      <param name="behavior">
        <para>Type: System.Data.CommandBehavior</para>
        <para>This parameter is one of the System.Data.CommandBehavior values.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2Command.CommandText">
      <summary>This property is used to get or set the SQL statement or&amp;nbsp;subroutine that you want to execute. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2Command.CommandTimeout">
      <summary>This property is used to set the amount of time between when a request is sent and when the request terminates and throws a Timeout error. &lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="" cref="System.ArgumentException">The assigned property value is less than 0.</exception>
    </member>
    <member name="P:U2.Data.Client.U2Command.CommandType">
      <summary>This property defines how the&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2Command~CommandText.html"&gt;CommandText&lt;/A&gt; property is interpreted.
&lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="" cref="System.ArgumentException">If the value is not a valid CommandType, an ArgumentException is thrown.</exception>
    </member>
    <member name="P:U2.Data.Client.U2Command.Connection">
      <summary>This property gets or sets the &lt;A href="U2.Data.Client~U2.Data.Client.U2Connection.html"&gt;U2Connection&lt;/A&gt;. &lt;?xml:namespace prefix = innovasys ns
= "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="" cref="System.InvalidOperationException">An InvalidOperationExcetption is thrown if the Connection property changes while a transaction is in progress. </exception>
    </member>
    <member name="P:U2.Data.Client.U2Command.DesignTimeVisible">
      <summary>This property gets or sets &lt;SPAN&gt;a value indicating whether the command object should be visible in a Windows Form Designer control. &lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/SPAN&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2Command.Parameters">
      <summary>This property gets the &lt;A href="U2.Data.Client~U2.Data.Client.U2ParameterCollection.html"&gt;U2ParameterCollection&lt;/A&gt;. &lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2Command.Transaction">
      <summary>This property gets or sets the&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2Transaction.html"&gt;U2Transaction&lt;/A&gt; value that is executed by the
&lt;A href="U2.Data.Client~U2.Data.Client.U2Command.html"&gt;U2Command&lt;/A&gt; class. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2Command.UpdatedRowSource">
      <summary>This property gets or sets a value that specifies how the &lt;B&gt;Update&lt;/B&gt; method should apply command results to the &lt;B&gt;DataRow&lt;/B&gt;.
&lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.#ctor">
      <summary>This constructor initializes a new U2CommandBuilder instance. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.#ctor(U2.Data.Client.U2DataAdapter)">
      <summary>This constructor initializes a new&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2CommandBuilder.html"&gt;U2CommandBuilder&lt;/A&gt; instance with the
associated&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2DataAdapter.html"&gt;U2DataAdapter&lt;/A&gt;. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="adapter">The U2DataAdapter associated with the U2CommandBuilder.</param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary>This method applies the parameter information specified in the&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2Command.html"&gt;U2Command&lt;/A&gt;.
&lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="p">
        <para>Type: System.Data.DbParameter</para>
        <para>The DbParameter to which you are applying a data type change.</para>
      </param>
      <param name="row">
        <para>Type: System.Data.DataRow</para>
        <para>The DataRow returned from the schema table supplied by the GetSchemaTable method.</para>
      </param>
      <param name="st">
        <para>Type: System.Data.StatementType</para>
        <para>The INSERT, UPDATE, or DELETE type being generated.</para>
      </param>
      <param name="whereClause">
        <para>Type: System.Boolean</para>
        <para>Set this value to <strong>true</strong> if the parameter is part of the update or delete WHERE clause; <strong>false</strong> if it is part of the insert or
update values.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.CreateObjRef(System.Type)">
      <summary>This method creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object. <font face="Verdana"><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</font></summary>
      <returns>Type: System.Runtime.Remoting.ObjRef<br />
Information required to generate a proxy.</returns>
      <param name="requestedType">
        <para>Type: System.Type</para>
        <para>The object Type that the new ObjRef will reference.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.DeriveParameters(U2.Data.Client.U2Command)">
      <summary>&lt;P&gt;This method retrieves parameter information from the subroutines specified in the &lt;A
href="U2.Data.Client~U2.Data.Client.U2Command.html"&gt;U2Command&lt;/A&gt; and populates the &lt;A
href="U2.Data.Client~U2.Data.Client.U2Parameter.html"&gt;U2Parameter&lt;/A&gt; collection of the specified &lt;A
href="U2.Data.Client~U2.Data.Client.U2Command.html"&gt;U2Command&lt;/A&gt; object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="" cref="System.InvalidOperationException">An InvalidOperationException is thrown if the command text is not a valid stored procedure name.</exception>
      <param name="command">The U2Command that references a subroutine, or the command text defining the parameter information. The parameter information is added to the U2Command
Parameters collection.</param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary>This method returns the placeholder for the parameter in the associated SQL statement. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>Type: System.String<br />
The name of the parameter with the specified number appended.</returns>
      <param name="paramOrdinal">Type: System.Int32<br />
The number to be included as part of the parameter's name.</param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.InitializeLifetimeService">
      <summary>This method obtains a lifetime service object to control the lifetime policy for this instance. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>Type: System.Object<br />
An object of type <strong>ILease</strong> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance
if one exists; otherwise, a new lifetime service object initialized to the value of the <strong>LifetimeServices.LeaseManagerPollTime</strong> property.</returns>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.QuoteIdentifier(System.String)">
      <summary>When given an unquoted identifier in the correct catalog case, this method returns the correct quoted form of that identifier. This includes correctly escaping
any embedded quotes in the identifier. &lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: System.String</para>
        <para>
          <span>
            <span>The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </para>
      </returns>
      <param name="unquotedIdentifier">
        <para>Type: System.String</para>
        <para>The original unquoted identifier.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.RefreshSchema">
      <summary>This method is used to refresh the schema information that is used to generate the DELETE, INSERT, or UPDATE statements. &lt;?xml:namespace prefix = innovasys
ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary>This method registers the &lt;STRONG&gt;DbCommandBuilder&lt;/STRONG&gt; to handle the &lt;STRONG&gt;RowUpdating&lt;/STRONG&gt; event for a
&lt;STRONG&gt;DbDataAdapter&lt;/STRONG&gt;. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="adapter">Type: System.Data.Common.DbDataAdapter<br />
The DbDataAdapter to be used for the update.<br /></param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly unescaping any embedded quotes in the identifier.
&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>Type: System.String<br />
The unquoted identifier, with embedded quotes properly unescaped.</returns>
      <param name="quotedIdentifier">
        <para>Type: System.String</para>
        <para>The identifier that will have its embedded quotes removed.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.Dispose(System.Boolean)">
      <summary>This method is used to dispose or release the&amp;nbsp;&lt;A href="U2.Data.Client~U2.Data.Client.U2CommandBuilder.html"&gt;U2CommandBuilder&lt;/A&gt;
resources. &lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="disposing">
        <para>Type: System.Boolean</para>
        <para>Set this value to <strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.GetDeleteCommand">
      <summary>This method gets the &lt;A href="U2.Data.Client~U2.Data.Client.U2Command.html"&gt;U2Command&lt;/A&gt; object that is used to perform DELETE actions against the
database. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.U2Command</para>
        <para>The U2Command object required to perform deletions. This object is generated automatically.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.GetInsertCommand">
      <summary>This method gets the &lt;A href="U2.Data.Client~U2.Data.Client.U2Command.html"&gt;U2Command&lt;/A&gt; object that is used to perform INSERT actions against the
database. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.U2Command</para>
        <para>The generated U2Command used to perform INSERT actions.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.GetParameterName(System.Int32)">
      <summary>This method returns the name of the specified parameter. Use when building a custom command builder. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: System.String</para>
        <para>The name of the parameter with the specified number appended as part of the parameter name.</para>
      </returns>
      <param name="paramOrdinal">
        <para>Type: System.Int32</para>
        <para>The number to be included as part of the parameter's name.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.GetParameterName(System.String)">
      <summary>&lt;P&gt;This method returns the full parameter name, given the partial parameter name.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: System.String</para>
        <para>The full parameter name corresponding to the partial parameter name requested.</para>
      </returns>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The partial name of the parameter.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2CommandBuilder.GetUpdateCommand">
      <summary>This method gets the U2Command object used to perform UPDATE actions against the database. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.U2Command</para>
        <para>The generated U2Command object required to perform updates.</para>
      </returns>
    </member>
    <member name="P:U2.Data.Client.U2CommandBuilder.CatalogLocation">
      <summary>This&amp;nbsp; property gets or sets the CatalogLocation. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2CommandBuilder.CatalogSeparator">
      <summary>This property gets or sets the string used as the catalog separator. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2CommandBuilder.ConflictOption">
      <summary>This property specifies which ConflictOption will be used by the U2CommandBuilder. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2CommandBuilder.DataAdapter">
      <summary>This property gets or sets the U2DataAdapter that is used by the &lt;A href="U2.Data.Client~U2.Data.Client.U2CommandBuilder.html"&gt;U2CommandBuilder&lt;/A&gt;
to generate SQL statements. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2CommandBuilder.QuotePrefix">
      <summary>This property gets or sets the first character of an object, if the existing name of the object begins with an illegal character, such as a space or reserved
word.&amp;nbsp; &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2CommandBuilder.QuoteSuffix">
      <summary>This property gets or sets the final character of an object, if the existing name of the object begins with an illegal character, such as a space or reserved
word.&amp;nbsp; &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2CommandBuilder.SchemaSeparator">
      <summary>This property gets or sets the character being used to separate the schema identifier from any other identifiers. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2CommandBuilder.Site">
      <summary>This property gets or sets the <strong>ISite</strong> of the component.</summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.#ctor">
      <summary>This constructor initializes a new instance of the U2Connection class.</summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.#ctor(System.String)">
      <summary>
        <para>This constructor initializes a new instance of the U2Connection class using a specified string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.BeginChain">
      <summary>This method identifies the start of a statement chain that will be sent to the U2 database.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>This method starts a transaction to the U2 database.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.ChangeDatabase(System.String)">
      <summary>
        <para>This method changes the database to which the U2Connection is associated.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.Close">
      <summary>
        <para>This method closes the U2Connection to the U2 database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.CreateCommand">
      <summary>
        <para>This method is used to create and return the U2Command object linked to the U2Connection object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Data.U2Client.U2Command</para>
        <para>A U2Command object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Connection.CreateDbCommand">
      <summary>This method is used to create and return the U2Command object linked to the U2Connection object.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.EndChain">
      <summary>This method identifies the end of a statement chain that will be sent to the U2 database.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>
        <para>This method is not currently supported by U2 Toolkit for .NET.</para>
        <para>This method enlists in the specified transaction as a distributed transaction.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>
        <para>This method is not currently supported by U2 Toolkit for .NET.</para>
        <para>This method enlists in the specified transaction as a distributed transaction.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="txn">
        <para>Type: System.Transactions.Transaction</para>
        <para>A reference to an existing <strong>Transaction</strong> in which to enlist.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Connection.Finalize">
      <summary>This method releases any unmanaged resources and performs other cleanup actions.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.GetSslProtocol">
      <summary>The GetSslProtocol method is used to get the negotiated protocol in the U2 SSL connection.</summary>
      <returns>The return value will be one of the following string values: "None", "Default", "Ssl2", "Ssl3", "Tls", "Tls11", "Tls12".</returns>
    </member>
    <member name="M:U2.Data.Client.U2Connection.Open">
      <summary>
        <para>This method opens a connection to a database using the U2ConnetionString property settings.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.ReleaseObjectPool">
      <summary>
        <para>This method is used to release the resources in a connection pool when the connection itself is released.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.SetConnectionString(U2.Data.Client.U2Connection)">
      <summary>
        <para>This method is used to set the connection string.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Connection.BeginTransaction">
      <summary>
        <para>This method starts a transaction to the U2 database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Data.U2Client.U2Transaction</para>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Connection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para>This method starts a database transaction with the specified isolation level.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Data.U2Client.U2Transaction</para>
        <para>An object representing the new transaction.</para>
      </returns>
      <param name="isolevel">
        <para>Type: System.Data.IsolationLevel</para>
        <para>The isolation level under which the transaction should run.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Connection.Dispose(System.Boolean)">
      <summary>
        <para>This method is used to dispose or delete the U2Connection object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="disposing">
        <para>Type: System.Boolean</para>
        <para>This method holds the value of <strong>true</strong> to release both managed and unmanaged resources; this method is <strong>false</strong> to release only
unmanaged resources.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Connection.GetSchema">
      <summary>This method the schema information related to the U2Connection data source.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>
        <para>Type: System.Data.DataTable</para>
        <para>A <strong>DataTable</strong> that contains schema information.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Connection.GetSchema(System.String)">
      <summary>
        <para>This method returns the schema information for the data source of this U2Connection using the specified string for the schema name.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Data.DataTable</para>
        <para>A <strong>DataTable</strong> that contains schema information.</para>
      </returns>
      <param name="collectionName">
        <para>Type: System.String</para>
        <para>Specifies the name of the schema to return.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Connection.GetSchema(System.String,System.String[])">
      <summary>
        <para>This method returns schema information for the data source of this U2Connection using the specified string for the schema name and the specified array for
the restriction values.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Data.DataTable</para>
        <para>A DataTable that contains schema information.</para>
      </returns>
      <param name="collectionName">
        <para>Type: Systsem.String</para>
        <para>Specifies the name of the schema to return.</para>
      </param>
      <param name="restrictionValues">
        <para>Type: System.String</para>
        <para>A set of restriction values for the requested schema.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2Connection.Chaining">
      <summary>
        <para>This property gets a Boolean value that indicates whether chaining is active.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.ConnectionString">
      <summary>
        <para>This property gets or sets the string used to open a connection to a database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.ConnectionTimeout">
      <summary>
        <para>This property is used to set the amount of time between when a request is sent and when the request terminates and throws a Timeout error.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.Database">
      <summary>
        <para>This property returns the name of the U2 database or account to which you are connecting.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.DataSource">
      <summary>
        <para>This property returns the name of the U2 account to which you are connecting.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.DbProviderFactory">
      <summary>
        <para>This property returns the <strong>DbFactory</strong> for this U2Connection.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.IsOpen">
      <summary>
        <para>This property gets a Boolean value indicating whether the connection is open.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.ServerType">
      <summary>
        <para>This property gets a string that contains the server type to which the client is connected.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.ServerVersion">
      <summary>
        <para>This property gets a string that contains the version of the server to which the client is connected.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.State">
      <summary>
        <para>This property gets the state of the U2Connection.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.U2ServerMarks">
      <summary>
        <para>This property gets or sets the U2ServerMarks object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.UniSession">
      <summary>
        <para>This property returns a UniSession object for native access.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Connection.UserId">
      <summary>
        <para>This property gets or sets the user ID to be used when connecting to U2 database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="E:U2.Data.Client.U2Connection.StateChange">
      <summary>
        <para>This event occurs when the state of the event changes.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2ConnectionStringBuilder.#ctor">
      <summary>This constructor initializes a new instance of the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2ConnectionStringBuilder.html"&gt;U2ConnectionStringBuilder&lt;/A&gt; class. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2ConnectionStringBuilder.#ctor(System.String)">
      <summary>This constructor initializes a new instance of the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2ConnectionStringBuilder.html"&gt;U2ConnectionStringBuilder&lt;/A&gt; class using&amp;nbsp;an existing
&lt;EM&gt;ConnectionString.&lt;/EM&gt; &lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="connectionString">
        <para>Type: System.String</para>
        <para>A connection string to be inserted into the U2ConnectionStringBuilder.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ConnectionStringBuilder.Clear">
      <summary>This method clears the contents of the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2ConnectionStringBuilder.html"&gt;U2ConnectionStringBuilder&lt;/A&gt;. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2ConnectionStringBuilder.ContainsKey(System.String)">
      <summary>This method determines if a specific key is contained in the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2ConnectionStringBuilder.html"&gt;U2ConnectionStringBuilder&lt;/A&gt;. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: System.Boolean</para>
        <para>This method returns a value of <strong>true</strong> if the key is contained in the U2ConnectionStringBuilder; otherwise, a value of <strong>false</strong>
is returned.</para>
      </returns>
      <param name="keyword">
        <para>Type: System.String</para>
        <para>The key name.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ConnectionStringBuilder.Remove(System.String)">
      <summary>This method removes a specific key from the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2ConnectionStringBuilder.html"&gt;U2ConnectionStringBuilder&lt;/A&gt;. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: System.Boolean</para>
        <para>This method returns a value of <strong>true</strong><span><span><font color="black">if the key existed within the connection string and was removed;
<strong>false</strong> if the key did not exist.</font></span></span></para>
      </returns>
      <param name="keyword">
        <para>Type. System.String</para>
        <para>The key being removed from the U2ConnectionStringBuilder.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>This method determines if a specific key exists in the U2ConnectionStringBuilder.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>
        <para>Type: System.Boolean</para>
        <para>This method returns a value of <strong>true</strong> if the U2ConnectionStringBuilder contains an entry with the specified key; otherwise,
<strong>false</strong>.<br /></para>
      </returns>
      <param name="keyword">
        <para>Type: System.Type</para>
        <para>The key to locate in the U2ConnectionStringBuilder.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ConnectionStringBuilder.ToString">
      <summary>This method returns a string representing the current object. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>Type: System.String<br />
A string that represents the current object.</returns>
    </member>
    <member name="M:U2.Data.Client.U2ConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>This method returns a value that corresponds to the key supplied to the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2ConnectionStringBuilder.html"&gt;U2ConnectionStringBuilder&lt;/A&gt;. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>Type: System.Boolean<br />
Returns a value of <strong>true</strong> if <em>keyword</em> was found within the connection string, <strong>false</strong> otherwise.</returns>
      <param name="keyword">
        <para>Type: System.String<br />
The key of the item to retrieve.</para>
      </param>
      <param name="value">
        <para>Type: System.Object</para>
        <para></para>
        <para>
          <span>
            <span>The value corresponding to the <span class="parameter">key</span>.</span>
          </span>
        </para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.AccessMode">
      <summary>This property gets or sets the AccessMode to be used when connecting to a U2 database. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.AllowNonExistentID">
      <summary>This property allows users to check files for invalid record IDs. If set to <strong>False</strong>, U2 Toolkit will throw an exception when invalid record IDs
are found.</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.AppendParameterMarker">
      <summary>
        <span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'; LINE-HEIGHT: 107%; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
This property is useful if the generated code ignores the “@” variable for the parameter. The default value is false.</span>This property allows you to append
append the "@" character in the parameter name. For Example, if parameter name is ‘p1’ then it changes to "@p1" if this property is set <strong>True</strong>.</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.CacheMetaDataOnConnection">
      <summary>
        <para>This property gets or sets a value indicating whether metadata, such as schema or tables, should be cached when connecting to a U2 database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.ClientCertificatePath">
      <summary>This property gets or sets the path to the certificate. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.CodePage">
      <summary>This property gets or sets the code page identifier of the current encoding. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Connect_Timeout">
      <summary>This property is used to set the amount of time (in seconds) between when a request is sent and when the request terminates and throws a Timeout error.
&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.ConnectionLifeTime">
      <summary>This property specifies how long a connection&amp;nbsp;stays active in the connection pool before it is&amp;nbsp;ended&amp;nbsp;and then created again.
&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.ConnectionReset">
      <summary>This property gets or sets a Boolean value that indicates whether the connection is reset when drawn from the connection pool. &lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Database">
      <summary>This property gets or sets the name of the database associated with the connection. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Enlist">
      <summary>This&amp;nbsp;property gets or sets a Boolean value that determines&amp;nbsp;whether automatic enlistment in the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2Connection.html"&gt;U2Connection&lt;/A&gt; pool is&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;enabled. &lt;?xml:namespace
prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.ExecuteSQLTAB">
      <summary>
        <strong>UniVerse only</strong>. This property gets or sets the ExecuteSQLTAB statement to be used when determining which U2 database connection metadata or
accounts metadata to use. If this property is set to <strong>false</strong>, then UniVerse does not retieve the connection metadata information. By default,
this property is set to <strong>true</strong>.</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.ExpandMultiValueRows">
      <summary>
        <para>This property gets or sets a value that indicates whether to expand multivalued rows.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.FirstNormalForm">
      <summary>This property allows you to turn off/on the First Normal Form property of a U2 database. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.IsFixedSize">
      <summary>This property gets a value indicating whether a fixed size is set for the&amp;nbsp;&lt;A
href="U2.Data.Client~U2.Data.Client.U2CommandBuilder.html"&gt;U2ConnectionStringBuilder&lt;/A&gt;. &lt;?xml:namespace prefix = "innovasys" ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.IsolationLevel">
      <summary>This property &lt;SPAN&gt;specifies&lt;/SPAN&gt; the transaction locking behavior for the connection. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.IsTerminalServer">
      <summary>
        <para>This property allows users to determine the real client IP address for systems hosted on a Terminal/Citrix server. When enabled, the actual client IP
address is used for device licensing, instead of the the Terminal/Citrix server address. By default, this property is set to <strong>false</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Item(System.String)">
      <summary>This method (called Indexer in C#) gets or sets the value associated with a specified key. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&amp;nbsp;</summary>
      <param name="keyword">
        <para>Type: System.String</para>
        <para>The item key.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Keys">
      <summary>This property returns an iCollection object that holds the &lt;A
href="U2.Data.Client~U2.Data.Client.U2ConnectionStringBuilder.html"&gt;U2ConnectionStringBuilder&lt;/A&gt; keys. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.MaxFetchBuff">
      <summary>&lt;P&gt;This property gets and sets the maximum buffer size. It controls the maximum buffer size on the server to hold data rows.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.MaxFetchCols">
      <summary>&lt;P&gt;This property gets and sets the maximum number of columns. It controls the maximum number of column values the server can put in the buffer before
sending data to the client.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.MaxPoolSize">
      <summary>This property gets or sets the maximum number of connections in the connection pool. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.MinPoolSize">
      <summary>This property gets or sets the minimum number of connections in the connection pool. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.NamedParameters">
      <summary>
        <para>This parameter gets or sets a value that indicates whether to treat arguments as named parameters. For example, if set to <strong>true</strong>, then the
argument @ARG is treated as a function parameter. If set to <strong>false</strong>, then @ARG will not be treated as a function parameter.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.NativeFetch">
      <summary>
        <para>This property is used to get data in chunks in order to improve performance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.NLSLocaleName">
      <summary>This property sets the name of a specific set of conventions in various categories that represent the language, character set, and data formatting conventions
used by a group of people.</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.NLSMapName">
      <summary>This property sets the name of the map that defines how a character set is mapped between the internal and external character sets.</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Password">
      <summary>This property gets or sets the password connected to your U2 database account. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="" cref="System.ArgumentNullException">If this property fails, it throws a Windows ArgumentNullException.</exception>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.PersistSecurityInfo">
      <summary>This property gets or sets a Boolean value that defines whether security-sensitive information is returned as part of the connection. &lt;?xml:namespace prefix
= innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Pooling">
      <summary>&lt;P&gt;This property gets or sets a Boolean value indicating whether a connection pool is used for the connection.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.QueryTimeout">
      <summary>
        <para>This property gets or sets the QueryTimeout keyword value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.RpcServiceType">
      <summary>
        <para>This property gets or sets the value of the RPC service type. By default, in for native access (UniObjects/UO.NET API or Native Visual Studio Integration),
the UniVerse value is <strong>uvcs</strong> and the value for UniData is <strong>udcs</strong>. In SQL AccessMode, the UniVerse value is
<strong>uvserver</strong> and the value for UniData is <strong>udserver</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Server">
      <summary>This property gets or sets the value that specifies the host and port number to which you want to connect. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.ServerType">
      <summary>This property gets or sets database type. It indicates whether the connection is to be made to a UniData or UniVerse database. &lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.SessionIDAsIPAddress">
      <summary>
        <para>This property converts the real client IP address to an arbitrary IP address (calculated using the session ID), when the Terminal/Citrix server for hosting.
When this property is enabled, an arbitrary IP address is used for device licensing instead of the Terminal/Citrix server. By default, this property is set to
<strong>false</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><strong>Assembly</strong>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.SleepAfterClose">
      <summary>This property gets or sets the length of time (in milliseconds) to wait after the connection is closed. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.SslCheckCertificateRevocation">
      <summary>
        <para align="left"></para>
        <para align="left">
          <font size="2">This property gets or sets the flag that indicates whether the certificate revocation list is checked during
authentication.</font>
        </para>
        <para>
          <font size="2">
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.SSLConnection">
      <summary>This property&amp;nbsp;is used to create a Secure Socket Layer&amp;nbsp;(SSL) connection. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.SslIgnoreCertificateNameMismatch">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the flag that indicates whether to ignore name mismatch errors on the server certificate
during authentication. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.SslIgnoreIncompleteCertificateChain">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the flag that indicates whether an incomplete chain error is ignored during
authentication.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.SslProtocols">
      <summary>This property allows users to define their required security protocols.</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.ThrowMismatchDataTypeException">
      <summary>
        <para>This property gets or sets the Boolean value used to hand the data type exception that occurs during the fetch process. The default value is
<strong>false</strong>.</para>
        <para></para>
        <para>
          <font color="black">
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.UseATSelect">
      <summary>
        <para>Use this property to filter out dictionary items defined in the "@" or "@SELECT" phrase.</para>
        <para>
          <font color="black">
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.UseFastGetRecordID">
      <summary>
        <para>This property allows users to get all record IDs in one server call. This value is <strong>true</strong> by default.</para>
        <para>
          <font color="black">
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.UseIPv6">
      <summary>
        <para>This property allows users to connect to servers using the IPv6 protocol.</para>
        <para>
          <font color="black">
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.UseMDM">
      <summary>&lt;P&gt;This property gets or sets a Boolean value that indicates how to retrieve metadata information.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.UserID">
      <summary>This property gets or sets the User ID being used to connect to the U2 database. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.UseSameSocketOnClose">
      <summary>This property gets or sets the criteria needed to reuse the socket after it closes. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.Values">
      <summary>This property gets or sets the iCollection holding the U2ConnectionStringBuilder values.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.WalletID">
      <summary>This property gets or sets encryption keys. &lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.U2ConnectionStringBuilder.WalletPwd">
      <summary>This property gets or sets the encryption password. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;338ac9a8-3cc4-4af1-82df-623619bb6db7&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.#ctor">
      <summary>
        <para>This constructor initializes a new instance of the U2DataAdapter class.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>When an instance of U2DataAdapter is created, the following read/write properties are set to the following initial values. You can change the value of any of
these properties through a separate call to the property.

<list type="table"><listheader><term height="15"><strong>Properties</strong></term><description height="15"><strong>Initial Value</strong></description></listheader><item><term>MissingMappingAction</term><description>MissingMappingAction.Passthrough</description></item><item><term>MissingSchemaAction</term><description>MissingSchemaAction.Add</description></item></list></returns>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.#ctor(U2.Data.Client.U2Command)">
      <summary>
        <para>Initializes a new instance of the U2DataAdapter class with the specified U2Command as the SelectCommand property.</para>
        <para></para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="selectCommand">
        <para>Type: U2.Data.Client.U2Command</para>
        <para>A U2Command that is a U2 SQL SELECT statement or subroutine and is set as the SelectCommand property of the U2DataAdapter.</para>
        <para></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.#ctor(System.String,U2.Data.Client.U2Connection)">
      <summary>
        <para>This constructor initializes a new instance of the U2DataAdapter class with a SelectCommand and a U2Connection object.</para>
        <para></para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="selectCommandText">
        <para>Type: U2.Data.Client.U2Command</para>
        <para></para>
        <para>A U2Command that is a Transact-SQL SELECT statement or stored procedure as the SelectCommand property of the U2DataAdapter.</para>
      </param>
      <param name="selectConnection">
        <para>Type: U2.Data.Client.U2Connection</para>
        <para></para>
        <para>A U2Connection that represents the connection.</para>
        <para></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.#ctor(System.String,System.String)">
      <summary>
        <para>This constructor initializes a new instance of the U2DataAdapter class with a SelectCommand and a connection string.</para>
        <para></para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="selectCommandText">
        <para>Type: U2. Data.Client.String</para>
        <para>A <strong>String</strong> that is a Transact-SQL SELECT statement or stored procedure to be used by the SelectCommand property of the U2DataAdapter.</para>
      </param>
      <param name="selectConnectionString">
        <para>Type: U2.Data.Client.String</para>
        <para>The connection string.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary>
        <para>This method adds a <strong>IDbCommand</strong> to the current batch.</para>
        <para></para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: System.Int32<br /><span><span>The number of commands in the batch before adding the IDbCommand.</span><br /></span></returns>
      <param name="command">
        <para>Type: System.Data.IDbCommand</para>
        <para>The IDbCommand to add to the batch.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.ClearBatch">
      <summary>
        <para>This method removes all <strong>IDbCommand</strong> objects from the batch.</para>
        <para></para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>This method initializes a new instance of the RowUpdatedEventArgs class, regardless of whether or not the update is successful.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A new instance of the <strong>System.Data.Common.RowUpdatedEventArgs</strong> class.</returns>
      <param name="dataRow">The <strong>DataRow</strong> used to update the database.</param>
      <param name="command">The U2Command executed during the update operation.</param>
      <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
      <param name="tableMapping">A <strong>DataTableMapping</strong> object.</param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>This method initializes a new instance of the RowUpdatingEventArgs class.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A new instance of the <strong>System.Data.Common.RowUpdatingEventArgs</strong> class.</returns>
      <param name="dataRow">The <strong>DataRow</strong> that updates the database.</param>
      <param name="command">The U2Command to execute during the update operation.</param>
      <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
      <param name="tableMapping">A <strong>DataTableMapping</strong> object</param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.CreateTableMappings">
      <summary>
        <para>This method creates a new <strong>DataTableMappingCollection</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: System.Data.DataTableMappingCollection<br /><span><span>A new table mapping collection.</span></span></returns>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.ExecuteBatch">
      <summary>
        <para>This method executes the current batch.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: System.Int32<br /><span><span>The return value from the last command in the batch.</span><br /></span></returns>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.FillWithTOXML(System.Data.DataSet)">
      <summary>
        <para>This method adds rows to the DataSet used by the TOXML syntax (“LIST CUSTOMER TOXML”).</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary>
        <para>This method returns a U2Parameter from one of the commands in the current batch.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: U2.Data.Client.U2Parameter</para>
        <para>
          <span>The U2DataParameter specified.</span>
          <br />
        </para>
      </returns>
      <param name="commandIdentifier">
        <para>Type: System.Int32</para>
        <para>The index of the command to retrieve the parameter from.</para>
      </param>
      <param name="parameterIndex">
        <para>Type: System.Int32<br />
The index of the parameter within the command.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.GetFillParameters">
      <summary>
        <para>This method gets the user-set parameters used when executing an SQL command.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: U2.Data.Client.U2Parameter<br /><span><span>An array of U2DataParameter objects that contains the parameters set by the user.</span><br /></span></returns>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.InitializeBatching">
      <summary>
        <para>This method initializes batching for the U2DataAdapter.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>
        <para>This method raises the <strong>RowUpdated</strong> event using a RowUpdatedEventArgs object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="value">
        <list type="termdef">
          <item>
            <description>A <b>System.Data.Common.RowUpdatedEventArgs</b> object that contains the event data.</description>
          </item>
        </list>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>
        <para>This method raises the <strong>RowUpdating</strong> event using a RowUpdatingEventArgs object, whether or not the update operation is successful.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="value">
        <list type="termdef">
          <item>
            <description>A <b>System.Data.Common.RowUpdatingEventArgs</b> object that contains the event data.</description>
          </item>
        </list>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.TerminateBatching">
      <summary>
        <para>This method ends batching for the U2DataAdapter.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.Dispose(System.Boolean)">
      <summary>
        <para>This method releases the unmanaged resources used by the U2DataAdapter and optionally releases the managed sources.</para>
        <para></para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="bDisposing">Type: System.Boolean<br />
This property returns the value of <span><span><span><span class="input"><strong>true</strong></span></span> to release both managed and unmanaged resources;
the property of the <span><span class="input"><strong>false</strong></span></span> value is to release only unmanaged resources.</span></span></param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.Fill(System.Data.DataSet)">
      <summary>
        <para>This method adds or refreshes rows in the data set used by the U2DataAdapter.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: System.Int32<br /><span><span>The number of rows successfully added to or refreshed in the <strong>DataSet</strong>. This does not include rows affected by statements that do
not return rows.</span><br /></span></returns>
      <param name="dataset">Type: System.Data.Dataset.

<para>A <strong>DataSet</strong> to fill with records and, if necessary, schema.</para></param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>
        <para>This method adds rows to the <strong>DataSet</strong> to match those in the data source using the <strong>DataSet</strong> and <strong>DataTable</strong>
names.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: System. Int32<br /><span><span>The number of rows successfully added to or refreshed in the <strong>DataSet</strong>. This does not include rows affected by statements that do
not return rows.</span></span></returns>
      <param name="dataset">
        <para>Type: System.Data.DataSet</para>
        <para></para>
        <para>A <strong>DataSet</strong> to fill with records.</para>
      </param>
      <param name="srcTable">Type: System.String

<para>A string indicating the name of the source table.</para></param>
      <param name="dataReader">Type: System.Data.U2DataReader<br /><para>An instance of U2DataReader.</para></param>
      <param name="startRecord">Type: System.Int32<br /><para>The zero-based index of the starting record.</para></param>
      <param name="maxRecords">Type: System.Int32<br /><para>An integer indicating the maximum number of records.</para></param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>
        <para>This method adds a <strong>DataTable</strong> to the specified DataSet and configures the schema to match that in the data source base on the specified
<strong>Schema Type.</strong></para>
        <para></para>
        <para>
          <strong>
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</strong>
        </para>
      </summary>
      <returns>Type: System.Data.DataTable<br /><span><span>A <strong>DataTable</strong> object that contains schema information returned from the data source.</span><br /></span></returns>
      <param name="dataset">
        <para>Type: System.Data.DataSet</para>
        <para>The <strong>DataSet</strong> to be filled with the schema from the data source.</para>
      </param>
      <param name="schematype">
        <para>Type: System.Data.SchemaType</para>
        <para>One of the <strong>SchemaType</strong> values.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataAdapter.Update(System.Data.DataSet)">
      <summary>
        <para>This method calls any associated DELETE, INSERT, or UPDATE statements for each corresponding row in the specified <strong>DataRow</strong> objects.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: System.Int32<br /><span><span>The number of rows successfully updated from the <strong>DataSet</strong>.</span><br /></span></returns>
      <param name="dataset">Type: System.Data.DataSet<br /><span><span>The <strong>DataSet</strong> used to update the data source.</span><br /></span></param>
    </member>
    <member name="P:U2.Data.Client.U2DataAdapter.DeleteCommand">
      <summary>
        <para>This property gets or sets the SQL command or subroutines used to delete information from the database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataAdapter.InsertCommand">
      <summary>
        <para>This property gets or sets the SQL command or subroutines used to insert information into the database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataAdapter.SelectCommand">
      <summary>
        <para>This property gets or sets the SQL command or subroutines used to select information in the database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataAdapter.TableMappings">
      <summary>
        <para>This property gets the collection used as the master mapping between the source table and the <strong>DataTable</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataAdapter.UpdateBatchSize">
      <summary>
        <para>This property gets or sets the number of rows processed.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataAdapter.UpdateCommand">
      <summary>
        <para>This property gets or sets the SQL command or subroutines used to update the information in the database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
        <para></para>
      </summary>
    </member>
    <member name="E:U2.Data.Client.U2DataAdapter.RowUpdated">
      <summary>
        <para>This event occurs during <strong>Update</strong> after a command is executed against the data source. The attempt to update is made, so the event fires.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="E:U2.Data.Client.U2DataAdapter.RowUpdating">
      <summary>
        <para>This event occurs during <strong>Update</strong> before a command is executed against the data source. The attempt to update is made, so the event
fires.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.Close">
      <summary>This method closes the U2DataReader object.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.Finalize">
      <summary>
        <para>This method allows an object to try to free resources and perform other cleanup before it is reclaimed by garbage collection.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetBoolean(System.Int32)">
      <summary>
        <para>This method gets a specified column as a Boolean value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Boolean</para>
        <para>The value of the column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetByte(System.Int32)">
      <summary>
        <para>This method gets a specified column as a byte value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Byte</para>
        <para>The value of the specified column as a byte.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para>This method reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Int64</para>
        <para>The maximum length to copy into the buffer.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
      <param name="dataIndex">
        <para>Type: System.Int64</para>
        <para>The index within the field from which to begin the read operation.</para>
      </param>
      <param name="buffer">
        <para>Type: System.Byte</para>
        <para>The buffer into which to read the stream of bytes.</para>
      </param>
      <param name="bufferIndex">
        <para>Type: System.Int32</para>
        <para>The index within the buffer where the write operation is to start.</para>
      </param>
      <param name="length">
        <para>Type: System.Int32</para>
        <para>The maximum length to copy into the buffer.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetChar(System.Int32)">
      <summary>
        <para>This method gets a specified column as a single string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Char</para>
        <para>The value of the specified column ordinal.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>This method reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Int64</para>
        <para>The numbers of characters read.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int323</para>
        <para>The zero-based column ordinal.</para>
      </param>
      <param name="dataIndex">
        <para>Type: System.Int64</para>
        <para>The index within the field from which to begin the read operation.</para>
      </param>
      <param name="buffer">
        <para>Type: System.Char</para>
        <para>The buffer into which to read the stream of bytes.</para>
      </param>
      <param name="bufferIndex">
        <para>Type: System.Int32</para>
        <para>The index within the buffer where the write operation is to start.</para>
      </param>
      <param name="length">
        <para>Type: System.Int32</para>
        <para>The maximum length to copy into the buffer.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetData(System.Int32)">
      <summary>
        <para>This method returns a U2DataReader object for the requested column ordinal.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: System.Data.U2DataReader</returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetDataTypeName(System.Int32)">
      <summary>
        <para>This method gets a string that represents the specified column data type.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>Type: System.String</returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based ordinal position of the column to find.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetDate(System.Int32)">
      <summary>This method gets the value of the <strong>Date</strong> object.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetDateTime(System.Int32)">
      <summary>
        <para>This method gets the value of the <strong>DateTime</strong> object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.DateTime</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetDecimal(System.Int32)">
      <summary>
        <para>This method gets a the value of the specified column as a decimal value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Decimal</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetDouble(System.Int32)">
      <summary>
        <para>This method gets the value of a specified column as a double-precision floating point value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Double</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetEnumerator">
      <summary>
        <para>This method returns an U2Enumerator that iterates through the U2DataReader.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Collections.U2Enumerator</para>
        <para>A U2Enumerator for the U2DataReader.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetFieldType(System.Int32)">
      <summary>
        <para>This method gets the <strong>Type</strong> that is the object’s data type.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Type</para>
        <para>The <strong>Type</strong> that is the data type of the object. If the type does not exist on the client, such as in the case of a user-defined type returned
from the database, <strong>GetFieldType</strong> returns null.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetFloat(System.Int32)">
      <summary>
        <para>This method gets a specified column as a <strong>Float</strong> value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Single</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetGuid(System.Int32)">
      <summary>
        <para>This method gets the specified column as a GUI (globally unique identifier) value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Guid</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetInt16(System.Int32)">
      <summary>
        <para>This method gets the specified column as a 16-bit integer value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Int16</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetInt32(System.Int32)">
      <summary>
        <para>This method gets the specified column as a 32-bit integer value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Int32</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: SystemInt32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetInt64(System.Int32)">
      <summary>
        <para>This method gets the specified column as a 64-bit integer value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Int64</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetName(System.Int32)">
      <summary>
        <para>This method gets a specified column name.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.String</para>
        <para>The name of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetOrdinal(System.String)">
      <summary>
        <para>This method gets the column ordinal when the column name is supplied.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetSchemaTable">
      <summary>
        <para>This method returns a <strong>DataTable</strong> describing the U2DataReader column metadata.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Data.DataTable</para>
        <para>A <strong>DataTable</strong> that describes the column metadata.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetString(System.Int32)">
      <summary>
        <para>This method gets the specified column as a string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.String</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetTime(System.Int32)">
      <summary>This method gets the value of the specified column as a <strong>TimeSpan</strong> object

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetTimeSpan(System.Int32)">
      <summary>
        <para>This method gets the value of the specified column as a <strong>TimeSpan</strong> object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.TimeSpan</para>
        <para>The value of the specified column.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetValue(System.Int32)">
      <summary>
        <para>This method gets the column ordinal of the specified column in its native format.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Object</para>
        <para>This method returns <strong>DBNull</strong> for null database columns.</para>
      </returns>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetValues(System.Object[])">
      <summary>
        <para>This method gets all of the attribute columns in a specified row.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Int32</para>
        <para>The number of instances of <strong>Object</strong> in the array.</para>
      </returns>
      <param name="values">
        <para>Type: System.Object</para>
        <para>An array of <strong>Object</strong> into which to copy the attribute columns.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.IsDBNull(System.Int32)">
      <summary>This method gets a value that specifies whether null values exist in the column.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>
        <para>Type: System.Boolean</para>
        <para>This method holds the value of <strong>true</strong> if the specified column value is equivalent to <strong>DBNull</strong>; otherwise, this method holds
the value of <strong>false</strong>.</para>
      </returns>
      <param name="i">
        <para>System: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.NextResult">
      <summary>
        <para>This method moves the U2DataReader to the next result when it is reading the results of an SQL statement or subroutine.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Boolean</para>
        <para>This method holds the <strong>true</strong> if there are more result sets; otherwise, this method holds the value of <strong>false</strong>.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.Read">
      <summary>
        <para>This method moves the U2DataReader to the next database record.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Boolean</para>
        <para>This method holds the value of <strong>true</strong> if there are more rows; otherwise, this method holds the value of <strong>false</strong>.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.Dispose(System.Boolean)">
      <summary>
        <para>This method releases the managed resources used by the U2DataReader and optionally releases the unmanaged resources.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="disposing">
        <para>Type: System.Boolean</para>
        <para>This parameter holds the value of <strong>True</strong> to release managed and unmanaged resources; the value of this parameter must be
<strong>False</strong> to release only unmanaged resources.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2DataReader.GetXmlReader(System.Int32)">
      <summary>
        <para>This method gets the value of the specified column as an XmlReader object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataReader.Depth">
      <summary>
        <para>This property gets a value that specifies the nesting depth of the current row.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataReader.FieldCount">
      <summary>
        <para>This property gets the column count for the current row.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataReader.HasRows">
      <summary>
        <para>This method gets the value that specifies whether a U2DataReader has any rows.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataReader.IsClosed">
      <summary>
        <para>This property gets a value that specifies whether a U2DataReader is closed.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2DataReader.Item(System.Int32)">
      <summary>
        <para>This property gets the value of the column in its native form.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="i">
        <para>Type: System.Int32</para>
        <para>The zero-based column ordinal.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2DataReader.RecordsAffected">
      <summary>
        <para>This property gets the number of all unhidden fields in the U2DataReader.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2DataSourceEnumerator.#ctor">
      <summary>This constructor creates the instance of the U2DataSourceEnumerator class.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2DataSourceEnumerator.GetDataSources">
      <summary>This method retrieves a <strong>DataTable</strong> containing information about all visible SQL Server instances.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2DataSourceEnumerator.GetDataSources(System.Boolean)">
      <summary>This method retrieves a DataTable containing information about the U2 databases.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2DataSourceEnumerator.GetDataSources(System.String,System.String,System.String,System.String)">
      <summary>This method retrieves a DataTable containing information about all visible U2 instances for the given server, port, user ID, and password.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="F:U2.Data.Client.U2DataSourceEnumerator.DATASOURCE_DBALIAS">
      <summary>The default value is <strong>DatabaseAlias</strong>.</summary>
    </member>
    <member name="F:U2.Data.Client.U2DataSourceEnumerator.DATASOURCE_DBLOCATION">
      <summary>The default value is <strong>DatabaseLocation</strong>.</summary>
    </member>
    <member name="F:U2.Data.Client.U2DataSourceEnumerator.DATASOURCE_DBNAME">
      <summary>The default value is <strong>DatabaseName</strong>.</summary>
    </member>
    <member name="F:U2.Data.Client.U2DataSourceEnumerator.DATASOURCE_INSTNAME">
      <summary>The default value is <strong>InstanceName</strong>.</summary>
    </member>
    <member name="F:U2.Data.Client.U2DataSourceEnumerator.DATASOURCE_SERVERNAME">
      <summary>The default value is <strong>ServiceName</strong>.</summary>
    </member>
    <member name="F:U2.Data.Client.U2DataSourceEnumerator.DATASOURCE_SERVICE">
      <summary>The default value is <strong>ServiceName</strong>.</summary>
    </member>
    <member name="F:U2.Data.Client.U2DataSourceEnumerator.DATASOURCE_TABLENAME">
      <summary>The default value is <strong>U2DataSources</strong>.</summary>
    </member>
    <member name="F:U2.Data.Client.U2DataSourceEnumerator.Instance">
      <summary>The Instance field gets an instance of the U2DataSourceEnumerator, which can be sued to retrieve information about the U2 databases.</summary>
    </member>
    <member name="M:U2.Data.Client.U2Error.ToString">
      <summary>
        <para>This method gets the complete text of the error message.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>The complete text of the error.</returns>
    </member>
    <member name="P:U2.Data.Client.U2Error.Message">
      <summary>
        <para>This property gets a short description of the error.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Error.NativeError">
      <summary>
        <para>This property gets the U2Error information.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Error.RowNumber">
      <summary>
        <para>This property gets and integer value indicating the number of the statement in the series of chained statements that caused the U2Error.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Error.Source">
      <summary>This property gets the name of the driver that generated the error.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Error.SQLState">
      <summary>
        <para>This property gets the error code that follows the U2 SQL standard for the database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2ErrorCollection.Clear">
      <summary>
        <para>This method removes all the U2Error objects from the U2ErrorCollection.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2ErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>This method copies the elements of the U2ErrorCollection into an array, starting at the given index within the array.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="array">The array into which to copy the elements.</param>
      <param name="i">The starting index of array.</param>
    </member>
    <member name="M:U2.Data.Client.U2ErrorCollection.GetEnumerator">
      <summary>
        <para>This method returns an enumerator that iterates through a collection.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ErrorCollection.Count">
      <summary>
        <para>This property gets the number of errors in a collection.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ErrorCollection.Item(System.Int32)">
      <summary>
        <para>This property gets the error at the specified index.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="i">The zero-based index of the error to retrieve.</param>
    </member>
    <member name="M:U2.Data.Client.U2Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>This method overrides <strong>System.Exception.GetObjectData.</strong></para>
        <para>
          <strong>
            <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</strong>
        </para>
      </summary>
      <param name="context">
        <para>Type: System.Runtime.Serialization.SerializationInfo</para>
        <para></para>
        <para>The <strong>StreamingContext</strong> that contains contextual information about the source or destination.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2Exception.Errors">
      <summary>
        <para>This property gets a collection of one or more U2Error objects that give detailed information about exceptions generated by the U2 Data Server Provider.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Exception.Message">
      <summary>
        <para>This property gets a message that describes the current exception.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2Exception.U2_ERROR_CODE">
      <summary>
        <para>This property provides the U2 database server error code.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Factory.CreateCommand">
      <summary>
        <para>This method returns a U2Command instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2Command instance, which can represent SQL statements or subroutines you run against a U2 database through the U2 Toolkit for .NET Provider.</returns>
    </member>
    <member name="M:U2.Data.Client.U2Factory.CreateCommandBuilder">
      <summary>
        <para>This method returns a U2CommandBuilder instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2CommandBuilder instance, which will an enable data exchange with a U2 database, though the U2 Toolkit for .NET Provider.</returns>
    </member>
    <member name="M:U2.Data.Client.U2Factory.CreateConnection">
      <summary>
        <para>This method returns a U2Connection instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2Connection instance, which will enable connections to a U2 database, though the U2 Toolkit for .NET Provider.</returns>
    </member>
    <member name="M:U2.Data.Client.U2Factory.CreateConnectionStringBuilder">
      <summary>
        <para>This method returns a U2ConnectionStringBuilder instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2ConnectionStringBuilder instance, which will facilitate the creation of connection strings for a U2 data server.</returns>
    </member>
    <member name="M:U2.Data.Client.U2Factory.CreateDataAdapter">
      <summary>
        <para>This method returns a U2DataAdapter instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2DataAdapter instance, which will enable data exchange with a U2 database, though the U2 Toolkit for .NET Provider.</returns>
    </member>
    <member name="M:U2.Data.Client.U2Factory.CreateDataSourceEnumerator">
      <summary>
        <para>This method returns a U2DataSourceEnumerator instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>A U2DataSourceEnumerator instance, which will enable you to find visible U2® family database server instances and databases on those instances. The
U2DataSourceEnumerator instance works through the U2® Data Server Provider for .NET.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.U2Factory.CreateParameter">
      <summary>
        <para>This method returns a U2Parameter instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2Parameter instance, which can can represent parameters to a U2Command instance.</returns>
    </member>
    <member name="M:U2.Data.Client.U2Factory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>
        <para>This method returns a System.Security.CodeAccessPermission instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A <strong>System.Security.CodeAccessPermission</strong> instance.</returns>
    </member>
    <member name="P:U2.Data.Client.U2Factory.CanCreateDataSourceEnumerator">
      <summary>
        <para>This property specifies whether the U2Factory supports the U2DataSourceEnumerator class.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="F:U2.Data.Client.U2Factory.Instance">
      <summary>
        <para>This field gets a U2Factory instance.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2InfoMessageEventArgs.Errors">
      <summary>
        <para>This property gets the collection of warnings sent from the database.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.#ctor">
      <summary>This constructor initializes a new instance of U2Parameter.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the U <span class="keyword apiname">2Parameter</span> class with the parameter name and an object holding a value to be passed as
a parameter.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="szName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="oValue">
        <para>Type: System.Object</para>
        <para>An object holding a value to be passed as a parameter.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.#ctor(System.String,U2.Data.Client.U2Type)">
      <summary>Initializes a new instance of the U2 <span class="keyword apiname">Parameter</span> class with the parameter name and data type.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="szName">
        <para>Type: System. String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="U2Type">
        <para>Type: U2.Data.Client.U2Type</para>
        <para>One of the U2Type enumeration values.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.#ctor(System.String,U2.Data.Client.U2Type,System.Int32)">
      <summary>Initializes a new instance of the U <span class="keyword apiname">2Parameter</span> class with the parameter name, data type, and width.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="szName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="U2Type">
        <para>Type: U2.Data.Client.U2Type</para>
        <para>One of the U2Type enumeration values.</para>
      </param>
      <param name="iSize">
        <para>Type: System.Int32</para>
        <para>The width of the parameter.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.#ctor(System.String,U2.Data.Client.U2Type,System.Int32,System.String)">
      <summary>
        <para class="shortdesc">Initializes a new instance of the U <span class="keyword apiname">2Parameter</span> class with the parameter name, data type, width, and
source column name.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="szName">
        <para>Type: System. String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="U2Type">
        <para>Type: U2.Data.Client.U2Type</para>
        <para>One of the U2Type enumeration values.</para>
      </param>
      <param name="iSize">
        <para>Type: System.Int32</para>
        <para>The width of the parameter.</para>
      </param>
      <param name="szSourceColumn">
        <para>Type: System. String</para>
        <para>The name of the source column.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.#ctor(System.String,U2.Data.Client.U2Type,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the U <span class="keyword apiname">2Parameter</span> class with the parameter name, data type, width, source column name,
parameter direction, numeric precision, and other properties.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="szName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="U2Type">
        <para>Type: U2.Data.Client.U2Type</para>
        <para>One of the u2Type enumeration values.</para>
      </param>
      <param name="iSize">
        <para>Type: System.Int32</para>
        <para>The width of the parameter.</para>
      </param>
      <param name="direction">
        <para>Type: System.Data.ParameterDirection</para>
        <para>One of the System.Data.ParameterDirection values.</para>
      </param>
      <param name="bNullable">
        <para>Type: System.Boolean</para>
        <para>This value is <strong>True</strong> if the value of the field can be null; otherwise, the value is <strong>False</strong>.</para>
      </param>
      <param name="iPrecision">
        <para>Type: System.Byte</para>
        <para>The total number of digits to the left and right of the decimal point to which the U2ParameterClassValue is resolved.</para>
      </param>
      <param name="iScale">
        <para>Type: System.Byte</para>
        <para>The total number of decimal places to which the U2ParameterClassValue is resolved.</para>
      </param>
      <param name="szSourceColumn">
        <para>Type: System.String</para>
        <para>The n ame of the source column.</para>
      </param>
      <param name="sourceVersion">
        <para>Type: System.Data.DataRowVersion</para>
        <para>One of the System.Data.DataRowVersion values.</para>
      </param>
      <param name="oValue">
        <para>Type: System.Object</para>
        <para>An object holding a value to be passed as a parameter.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.GetXmlReader">
      <summary>This method returns a U2XmlReader object.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.ResetDbType">
      <summary>This method resets the type linked to the U2Parameter.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.SetOptimisticConcurrencyError(System.Data.DataTable,System.Byte)">
      <summary>
        <para>This method sets the DataTable RowError property with an optimistic concurrency error.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="pDT">
        <para>Type: System.Data.DataTable</para>
        <para>The DataTable to be used.</para>
      </param>
      <param name="pNEW_OLD_SEP">
        <para>Type:System.Byte</para>
        <para>Specifies the separator to be used between the OLD value and the NEW value.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.ToString">
      <summary>This method gets a string containing the ParameterName.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.DataTable_To_MV(System.Data.DataTable,System.Boolean)">
      <summary>
        <para>This method converts a .NET DataTable object into a multivalued dynamic array.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="pDT">
        <para>Type: System.Data.DataTable</para>
        <para>The <strong>DataTable</strong> to be used.</para>
      </param>
      <param name="ThrowExceptionOnError">
        <para>Type: System.Boolean</para>
        <para>Optional. If the value is set to <strong>True</strong>, this function throws an exception when it encounters a data type mismatch. The default value is
<strong>False</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.DataTable_To_MV(System.Data.DataTable,System.Byte,System.Byte,System.Boolean)">
      <summary>
        <para>This method is used to convert information from a <strong>DataTable</strong> into multivalued data, including any field marks or value marks.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="pDT">
        <para>Type: System.Data.DataTable</para>
        <para>The <strong>DataTable</strong> to be used.</para>
      </param>
      <param name="pFieldMark">
        <para>Type: System.Byte</para>
        <para>Specifies the FieldMark used in the multivalued data.</para>
      </param>
      <param name="pValueMark">
        <para>Type: System.Byte</para>
        <para>Specifies the ValueMark used in the multivalued data.</para>
      </param>
      <param name="ThrowExceptionOnError">
        <para>Type: System.Boolean</para>
        <para>Optional. If the value is set to <strong>True</strong>, this function throws an exception when it encounters a data type mismatch. The default value is
<strong>False</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.DataTable_To_MV_OC(System.Data.DataTable,System.Byte,System.Byte,System.Byte,System.Boolean)">
      <summary>
        <para>This method converts the information in a specified <strong>DataTable</strong> into multivalued data with optimistic concurrency functionality and can
include FieldMarks and ValueMarks. This method extracts "modified", "deleted" and "created" rows from a specified <strong>DataTable</strong> and then converts
those rows into multivalued data. Before sending the multivalued data to the server, it adds a separator between the OLD and NEW values for optimistic
concurrency.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="pDT">
        <para>Type: System.Data.DataTable</para>
        <para>The DataTable to be used.</para>
      </param>
      <param name="pFieldMark">
        <para>Type: System.Byte</para>
        <para>Specifies the FieldMark used in multivalued data.</para>
      </param>
      <param name="pValueMark">
        <para>Type: System.Byte</para>
        <para>Specifies the ValueMark used in multivalued data.</para>
      </param>
      <param name="pNEW_OLD_SEP">
        <para>Type:System.Byte</para>
        <para>Specifies the separator to be used between the OLD value and the NEW value.</para>
      </param>
      <param name="ThrowExceptionOnError">
        <para>Type: System.Boolean</para>
        <para>Optional. If the value is set to <strong>True</strong>, this function throws an exception when it encounters a data type mismatch. The default value is
<strong>False</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.DataTable_To_MV_OC(System.Data.DataTable,System.Boolean)">
      <summary>
        <para>This method converts the information in a specified <strong>DataTable</strong> into multivalued data with optimistic concurrency functionality.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="pDT">
        <para>Type: System.Data.DataTable</para>
        <para>The DataTable to be used.</para>
      </param>
      <param name="ThrowExceptionOnError">
        <para>Type: System.Boolean</para>
        <para>Optional. If the value is set to <strong>True</strong>, this function throws an exception when it encounters a data type mismatch. The default value is
<strong>False</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.MV_To_DataTable(System.Data.DataTable,System.Boolean)">
      <summary>
        <para>This method converts a multivalued dynamic array into a specified .NET DataTable.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="pDT">
        <para>Type: System.Data.DataTable</para>
        <para>The <strong>DataTable</strong> to be filled.</para>
      </param>
      <param name="ThrowExceptionOnError">
        <para>Type: System.Boolean</para>
        <para>Optional. If the value is set to <strong>True</strong>, this function throws an exception when it encounters a data type mismatch. The default value is
<strong>False</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Parameter.MV_To_DataTable(System.Data.DataTable,System.Byte,System.Byte,System.Boolean)">
      <summary>
        <para>This method converts a multivalued dynamic array into a specified .NET DataTable, and can include FieldMarks and ValueMarks.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="pDT">
        <para>Type: System.Data.DataTable</para>
        <para>The <strong>DataTable</strong> to be filled.</para>
      </param>
      <param name="pFieldMark">
        <para>Type: System.Byte</para>
        <para>Specifies the FieldMark used in the multivalued data.</para>
      </param>
      <param name="pValueMark">
        <para>Type: System.Byte</para>
        <para>Specifies the ValueMark used in the multivalued data.</para>
      </param>
      <param name="ThrowExceptionOnError">
        <para>Type: System.Boolean</para>
        <para>Optional. If the value is set to <strong>True</strong>, this function throws an exception when it encounters a data type mismatch. The default value is
<strong>False</strong>.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.DbType">
      <summary>This property gets or sets the <strong>U2DbType</strong> of the parameter.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.Direction">
      <summary>This property gets or sets a value that specifies if a parameter is input-only, output-only, bi-directional, or a stored procedure return value.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.IsNullable">
      <summary>This property gets or sets a value that specifies if a parameter will accept null values.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.ParameterName">
      <summary>This property gets or sets the U2Parameter name.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.Precision">
      <summary>This property gets or sets the maximum number of digits that can be used to represent the Value property.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.Scale">
      <summary>This property gets or sets the number of decimal places to which the Value property can be resolved.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.Size">
      <summary>This property gets or sets the maximum byte size of the data stored within the column.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.SourceColumn">
      <summary>This property gets or sets the source column name that is mapped to the <strong>DataSet</strong>. This is used for returning the Value property.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.SourceColumnNullMapping">
      <summary>This property gets or sets a value used to specify whether a column is nullable.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.SourceVersion">
      <summary>This property gets or sets the <strong>DataRowVersion</strong> that you want to use when the Value property loads.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Parameter.Value">
      <summary>This property gets or sets the parameter value.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.AddRange(System.Array)">
      <summary>This method adds an array of values to the end of the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="values">
        <para>Type: System.Array</para>
        <para>The array of values to be appended to the U2ParameterCollection.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Clear">
      <summary>This method clears all of the U2Parameter objects from the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>This method copies the U2ParameterCollection objects from the collection to a specified array.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="array">
        <para>Type: System.Array</para>
        <para>The target array into which to copy the U2Parameter objects.</para>
      </param>
      <param name="index">
        <para>Type: System.Int32</para>
        <para>The starting index of the target array.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.GetEnumerator">
      <summary>This method returns an enumerator that iterates through the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Insert(System.Int32,System.Object)">
      <summary>This method inserts a U2Parameter into the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="index">
        <para>Type: System.Int32</para>
        <para>The zero-based index where the parameter is to be inserted within the collection.</para>
      </param>
      <param name="value">
        <para>Type: System.Object</para>
        <para>The U2Parameter to add to the collection.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Remove(System.Object)">
      <summary>This method removes a U2Parameter from the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="value">
        <para>Type: System.Object</para>
        <para>The U2Parameter object to remove from the collection.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Add(System.Object)">
      <summary>This method adds a specific U2Parameter to the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>An integer value representing the index of the specified U2Parameter object.</returns>
      <param name="value">
        <para>Type: System.Int32</para>
        <para>The U2Parameter to add to the U2Command.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Add(U2.Data.Client.U2Parameter)">
      <summary>This method adds a specific U2Parameter to the U2Command.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>The new U2Parameter object.</returns>
      <param name="value">
        <para>Type: U2Data.Client.U2Parameter.</para>
        <para>The U2Parameter to add to the collection.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Add(System.String,System.Object)">
      <summary>This method adds a specific U2Parameter to the U2Command given the parameter name and value.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>The new U2Parameter object.</returns>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="value">
        <para>Type: System.Object</para>
        <para>The U2ParameterValue of the U2Parameter to add to the collection.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Add(System.String,U2.Data.Client.U2Type)">
      <summary>This method adds a specific U2Parameter to the U2Command given the parameter name and data type.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>The new U2Parameter object.</returns>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="U2Type">
        <para>Type: U2.Data.Client.U2Type</para>
        <para>One of the U2Type enumeration values.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Add(System.String,U2.Data.Client.U2Type,System.Int32)">
      <summary>This method adds a specific U2Parameter to the U2Command given the parameter name, data type, and column width.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>A new U2Parameter object.</returns>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="U2Type">
        <para>Type: U2.Data.Client.U2Type</para>
        <para>One of the U2Type enumeration values.</para>
      </param>
      <param name="size">
        <para>Type: System.Int32</para>
        <para>The width of the column.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Add(System.String,U2.Data.Client.U2Type,System.Int32,System.String)">
      <summary>This method adds a specific U2Parameter to the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>The new U2Parameter object.</returns>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
      <param name="U2Type">
        <para>Type: U2.Data.Client.U2Type</para>
        <para>One of the U2Type enumeration values.</para>
      </param>
      <param name="size">
        <para>Type: System.Int32</para>
        <para>The width of the column.</para>
      </param>
      <param name="sourceColumn">
        <para>Type: System.String</para>
        <para>The name of the source column.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Contains(System.String)">
      <summary>This method determines if the U2ParamaterCollection contains the object specified.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>This method returns a value of <strong>True</strong> if the collection contains the parameter; otherwise, it returns a value of <strong>False</strong>.</returns>
      <param name="value">
        <para>Type: System.String</para>
        <para>The name of the U2Parameter object to find.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.Contains(System.Object)">
      <summary>This method determines if the U2ParamaterCollection contains the object specified.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>This method returns a value of <strong>True</strong> if the collection contains the parameter; otherwise, it returns a value of <strong>False</strong>.</returns>
      <param name="value">
        <para>Type: System.Object</para>
        <para>The value of the U2Parameter object to find.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.GetParameter(System.Int32)">
      <summary>
        <para>This method returns the U2Parameter object at the specified index in the <strong>U2ParameterCollection</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2Parameter instance representing the requested parameter.</returns>
      <param name="index">
        <para>Type: System.Int32</para>
        <para>The position of the parameter in the list of parameters.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.GetParameter(System.String)">
      <summary>
        <para>This method returns the U2Parameter object with the specified name in the <strong>U2ParameterCollection</strong>.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2Parameter instance representing the requested parameter.</returns>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.IndexOf(System.String)">
      <summary>This method gets the location of the specified U2Parameter.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>The zero-based location of the U2Parameter in this collection.</returns>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The name of the parameter to retrieve.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.IndexOf(System.Object)">
      <summary>This method gets the location of the specified U2Parameter.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <returns>The zero-based location of the U2Parameter in this collection.</returns>
      <param name="value">
        <para>Type: System.Object</para>
        <para>The U2Parameter object to find.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.RemoveAt(System.Int32)">
      <summary>This method removes a U2Parameter from the U2ParameterCollection at a specified index.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="index">
        <para>Type: System.Int32</para>
        <para>The zero-based index of the parameter to be removed.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.RemoveAt(System.String)">
      <summary>This method removes a U2Parameter from the U2ParameterCollection at a specified index.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary>
        <para>This method sets the U2Parameter at the specified index to the specified value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="index">
        <para>Type: System.Int32</para>
        <para>The position of the parameter in the zero-based index.</para>
      </param>
      <param name="value">
        <para>Type: System.Data.DbParameter</para>
        <para>The U2Parameter instance to be assigned at the specified index.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary>
        <para>This method sets the U2Parameter with the specified name to the specified value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>A string representing the name of the parameter to be added.</para>
      </param>
      <param name="value">
        <para>Type: System.Data.DbParameter</para>
        <para>The U2Parameter instance to be assigned at the specified index.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2ParameterCollection.Count">
      <summary>This parameter gets the number of U2Parameter objects in the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2ParameterCollection.IsFixedSize">
      <summary>This property returns a value indicating whether the collection is of a fixed size.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2ParameterCollection.IsReadOnly">
      <summary>This property returns a value indicating whether the collection is read-only.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2ParameterCollection.IsSynchronized">
      <summary>This property returns a value indicating whether the collection is synchronized.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2ParameterCollection.Item(System.Int32)">
      <summary>This property is the indexer for the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="index">
        <para>Type: System.Int32</para>
        <para>The zero-based index of the parameter to retrieve.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2ParameterCollection.SyncRoot">
      <summary>
        <para>This property the object you want to use when synchronizing access to the U2ParameterCollection.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ParameterCollection.Item(System.Int32)">
      <summary>This property is the indexer for the U2ParameterCollection.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
      <param name="index">
        <para>Type: System.Int32</para>
        <para>The zero-based index of the parameter to retrieve.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2ParameterCollection.Item(System.String)">
      <summary>This method gets or sets the U2Parameter with the specified name.<br /><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</summary>
      <param name="parameterName">
        <para>Type: System.String</para>
        <para>The name of the parameter.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterExtensions.MV_To_POCO``1(U2.Data.Client.U2Parameter,System.Byte,System.Byte,System.Boolean)">
      <summary>
        <para>This extension method is used to convert multivalued data into a collection of POCO objects.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>This method returns a collection of POCO objects.</returns>
      <typeparam name="T">Defines a POCO class. This serves as the schema of the multivalued data.</typeparam>
      <param name="pU2Parameter">
        <para>Type: U2.Data.Client.U2Parameter</para>
        <para>Specifies the U2Parameter class.</para>
      </param>
      <param name="pFieldMark">
        <para>Type: System.Byte</para>
        <para>Specifies the FieldMark.</para>
      </param>
      <param name="pValueMark">
        <para>Type: System.Byte</para>
        <para>Specifies the ValueMark.</para>
      </param>
      <param name="ThrowExceptionOnError">
        <para>Type: System.Boolean</para>
        <para>Optional. If the value is set to <strong>True</strong>, this function throws an exception when it encounters a data type mismatch. The default value is
<strong>False</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2ParameterExtensions.POCO_To_MV``1(U2.Data.Client.U2Parameter,System.Collections.Generic.List{``0},System.Byte,System.Byte,System.Boolean)">
      <summary>
        <para>This extension method is used to convert a collection of POCO objects into multivalued data.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <typeparam name="T">Defines a POCO class. This serves as the schema of the multivalued data.</typeparam>
      <param name="pU2Parameter">
        <para>Type: U2.Data.Client.U2Parameter</para>
        <para>Specifies the U2Parameter class.</para>
      </param>
      <param name="pList">
        <para>Type: System.Byte</para>
        <para>Specifies the collection of POCO objects to be used.</para>
      </param>
      <param name="pFieldMark">
        <para>Type: System.Byte</para>
        <para>Specifies the ValueMark.</para>
      </param>
      <param name="pValueMark">
        <para>Type: System.Byte</para>
        <para>Specifies the ValueMark</para>
      </param>
      <param name="ThrowExceptionOnError">
        <para>Type: System.Boolean</para>
        <para>Optional. If the value is set to <strong>True</strong>, this function throws an exception when it encounters a data type mismatch. The default value is
<strong>False</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2Permission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the U2Permission class.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="state">One of the <strong>System.Security.Permissions.PermissionState</strong> values.</param>
    </member>
    <member name="M:U2.Data.Client.U2Permission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>
        <para>This method adds access for the specified connection string to the existing state of the U2Permission.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="connectionString">The connection string for the database connection.</param>
      <param name="restrictions">The key restriction.</param>
      <param name="behavior">A <strong>KeyRestrictionBehavior</strong> enumeration.</param>
    </member>
    <member name="M:U2.Data.Client.U2Permission.Copy">
      <summary>
        <para>This method creates and returns an identical copy of the current permission object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Permission.FromXml(System.Security.SecurityElement)">
      <summary>
        <para>This method reconstructs a security object with a specified state from an XML encoding.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Permission.Intersect(System.Security.IPermission)">
      <summary>
        <para>This method returns a new permission object representing the intersection of the current permission object and the specified permission object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Permission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <para>This method returns a value indicating whether the current permission object is a subset of the specified permission object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Permission.ToXml">
      <summary>This method creates and XML encoding of the security object and its current state.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Permission.Union(System.Security.IPermission)">
      <summary>
        <para>This method returns a new permission object that is the union of the current and specified permission objects.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2PermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>This constructor initializes a new instance of the U2PermissionAttribute class with one of the <strong>SecurityAction</strong> values.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2PermissionAttribute object.</returns>
      <param name="action">One of the System.Security.Permissions.SecurityAction values representing an action that can be performed using declarative security.</param>
    </member>
    <member name="M:U2.Data.Client.U2PermissionAttribute.CreatePermission">
      <summary>
        <para>This method returns a U2Permission object that is configured according to the attribute properties.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>A U2Permission object.</returns>
    </member>
    <member name="M:U2.Data.Client.U2RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>This method initializes a new instance of the U2RowUpdatedEventArgs class.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="row">The <strong>DataRow</strong> sent through an update operation.</param>
      <param name="command">The U2Command executed when <strong>Update</strong> is called.</param>
      <param name="statementType">One of the <b>System.Data.StatementType</b> values that specifies the type of query executed.</param>
      <param name="tableMapping">The <b>System.Data.Common.DataTableMapping</b> sent through <b>Update</b>.</param>
    </member>
    <member name="P:U2.Data.Client.U2RowUpdatedEventArgs.Command">
      <summary>
        <para>This property gets the U2Command execute when <strong>Update</strong> is called.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>This constructor initializes a new instance of the U2RowUpdatingEventArgs class.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="row">
        <para>Type: System.DataRow</para>
        <para>The <strong>DataRow</strong> to update.</para>
      </param>
      <param name="command">
        <para>Type: U2.Data.Client.U2Command</para>
        <para>The U2Command to execute during the update operations.</para>
      </param>
      <param name="statementType">
        <para>Type: System.Data.StatementType</para>
        <para>One of the <b>System.Data.StatementType</b> values that specifies the type of query executed.</para>
      </param>
      <param name="tableMapping">
        <para>Type: System.Data.Common.DataTableMappingCollection</para>
        <para>The <b>DataTableMapping</b> sent through <b>Update</b>.</para>
      </param>
    </member>
    <member name="P:U2.Data.Client.U2RowUpdatingEventArgs.Command">
      <summary>
        <para>This property gets or sets the U2Command to execute when <strong>Update</strong> is called.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.FieldMark">
      <summary>
        <para>The <strong>FieldMark</strong> property gets the server-side field mark.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.FieldMarkAsString">
      <summary>
        <para>The <strong>FieldMarkAsString</strong> property gets a server-side field mark as a string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.ItemMark">
      <summary>
        <para>The <strong>ItemMark</strong> property gets the server-side item mark.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.ItemMarkAsString">
      <summary>
        <para>The <strong>ItemMarkAsString</strong> property gets the server-side item mark as a string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.SqlNul">
      <summary>
        <para>The <strong>SQLNul</strong> property gets the server-side SQL Null mark.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.SqlNulAsString">
      <summary>
        <para>The <strong>SQLNulAsString</strong> property gets the server-side SQL Null mark as a string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.SubValueMark">
      <summary>
        <para>The <strong>SubValueMark</strong> property gets the server-side subvalue mark.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.SubValueMarkAsString">
      <summary>
        <para>The <strong>SubValueMarkAsString</strong> property gets a server-side subvalue mark as a string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.TextMark">
      <summary>
        <para>The <strong>TextMark</strong> property gets a server-side text mark.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.TextMarkAsString">
      <summary>
        <para>The <strong>TextMarkAsString</strong> property gets a server-side text mark as a string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.ValueMark">
      <summary>
        <para>The <strong>ValueMark</strong> property gets the server-side value mark.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.U2ServerMarks.ValueMarkAsString">
      <summary>
        <para>The <strong>ValueMarkAsString</strong> property gets the server-side value mark as a string value.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.U2Transaction.Commit">
      <summary>This method is used to commit the database transaction.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Transaction.Rollback">
      <summary>This method rolls back a transaction from a pending state.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2Transaction.Dispose(System.Boolean)">
      <summary>This method releases all of the unmanaged resources used by U2</summary>
    </member>
    <member name="P:U2.Data.Client.U2Transaction.Connection">
      <summary>This property returns the U2Connection object associated with the transaction.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Transaction.DbConnection">
      <summary>This property specifies the DbConnection associated with the transaction.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="P:U2.Data.Client.U2Transaction.IsolationLevel">
      <summary>This property specifies the isolation level for the transaction.

<para><strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para></summary>
    </member>
    <member name="M:U2.Data.Client.U2XmlAdapter.#ctor(U2.Data.Client.U2Connection)">
      <summary>
        <para>This constructor initializes a new instance of the <strong>U2XmlAdapter</strong> class with a U2Connection object.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <param name="conn">
        <para>Type: U2.Data.Client.U2Connection</para>
        <para>A U2Connection object that represents an open connection to a database.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.U2XmlAdapter.FillSQL(System.String)">
      <summary>
        <para>This method adds or refreshes data in an <strong>XPathDocument</strong> to match data in the database, using an SQL statement.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para tabindex="47" id="vcc_sp_p_83" class="p">An <span tabindex="48" id="vcc_sp_span_84" class="keyword apiname"><strong>XPathDocument</strong></span>
object.</para>
      </returns>
      <param name="command">
        <list type="termdef">
          <item>
            <description tabindex="44" id="vcc_sp_dd_80" class="dd">Type: System.String</description>
          </item>
          <item>
            <description tabindex="44" class="dd">The SQL query used to request data from the database.</description>
          </item>
        </list>
      </param>
    </member>
    <member name="T:U2.Data.Client.U2InfoMessageEventHandler">
      <summary>
        <para>This class represents the method that will handle the <strong>InfoMessage</strong> event of a U2Connection.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.U2RowsCopiedEventHandler">
      <summary>This class represents the method that will handle the RowsCopied event of a <strong>U2BulkCopy</strong> operation.</summary>
    </member>
    <member name="T:U2.Data.Client.U2RowUpdatedEventHandler">
      <summary>
        <para>This class represents the method that will handle the <strong>RowUpdated</strong> event of a U2DataAdapter.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>The handler is not required perform any action, and your code should avoid generating exceptions or allowing exceptions to propagate to the calling method.
Any exceptions that do reach the caller are ignored.</para>
        <para>When you create a U2UpdatedEventArgs delegate, you identify the method that will handle the event. To associate the event with your event handler, add an
instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate.</para>
        <para>Beginning at version 2.1.0, U2 Toolkit for .NET supports Native Visual Studio Integration. To use this functionality, set the U2ConnectionStringBuilder
<strong>AccessMode</strong>property to <strong>Native</strong> to make a native connection.</para>
      </returns>
    </member>
    <member name="T:U2.Data.Client.U2RowUpdatingEventHandler">
      <summary>
        <para>This class represents the method that will handle the <strong>RowUpdating</strong> event of a U2DataAdapter.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <returns>An <strong>Object</strong> representing the column value in its native format.</returns>
    </member>
    <member name="T:U2.Data.Client.UO.UniCommand">
      <summary>The UniCommand class controls execution of database commands on the server. With it, users can run UniData or UniVerse commands or stored procedures on the
server. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniDataSet">
      <summary>&lt;P align=left&gt;&lt;/P&gt;&lt;FONT size=2&gt; &lt;P&gt;UniDataSet &lt;/FONT&gt;&lt;FONT size=2 face="NJABO N+ Palatino,Palatino"&gt;&lt;FONT size=2
face="NJABO N+ Palatino,Palatino"&gt;is a collection class. It provides a collection interface for sets of &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT class=Courier
size=2&gt;UniRecord &lt;/FONT&gt;&lt;FONT size=2 face="NJABO N+ Palatino,Palatino"&gt;&lt;FONT size=2 face="NJABO N+ Palatino,Palatino"&gt;objects, which can
then be used to perform bulk or batch operations with one network operation.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniDictionary">
      <summary>&lt;FONT size=2&gt; &lt;P&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniDictionary &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;class controls access to UniData and UniVerse dictionary files. It is an
extension of the UniFile class with properties and methods specific to dictionary files.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniDynArray">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniDynArray&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;object lets you manipulate fields, values, and subvalues in a dynamic array such
as a database record or a select list. &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniDynArray&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;objects are used in:&lt;/FONT&gt;&lt;/P&gt; &lt;UL&gt; &lt;LI&gt; &lt;DIV
align=left&gt;Data in records of the &lt;SPAN class=Courier&gt;UniFile &lt;/SPAN&gt;and &lt;SPAN class=Courier&gt;UniDictionary
&lt;/SPAN&gt;objects&lt;/DIV&gt; &lt;LI&gt; &lt;DIV align=left&gt;The &lt;SPAN class=Courier&gt;readList &lt;/SPAN&gt;method of the &lt;SPAN
class=Courier&gt;UniSelectList &lt;/SPAN&gt;object&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;FONT size=2&gt; &lt;P align=left&gt;It handles database strings that
contain field marks, value marks, and subvalue marks.&lt;/P&gt; &lt;P&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;UniDynArray &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;class converts an input string into a series of subobjects, each of
which is inserted into a .NET ARRAYLIST object. Because of this, the dynamic array needs to be parsed only once, and ARRAYLIST operations can easily manipulate
the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDynArray
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniFile">
      <summary>The &lt;SPAN class=Courier&gt;UniFile &lt;/SPAN&gt;class defines and manages a data file on the server. You define the &lt;SPAN class=Courier&gt;UniFile
&lt;/SPAN&gt;object through the &lt;SPAN class=Courier&gt;UniSession.CreateUniFile() &lt;/SPAN&gt;method. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniNLSLocale">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniNLSLocale &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object applies only to UniVerse systems.&lt;/P&gt; &lt;P&gt;On UniVerse systems,
the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniNLSLocale
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object defines and manages the National Language Support conventions in use. The five conventions are Time,
Numeric, Monetary, Ctype, and Collate. The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniNLSLocale &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object allows these five names to be supplied as a single &lt;/FONT&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDynArray &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object,
with five fields containing the relevant locale name. Locale names are derived from the client system and a defaultable locale identifier. &lt;/P&gt; &lt;P
align=left&gt;&lt;/P&gt;&lt;FONT size=2&gt; &lt;P&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniNLSLocale &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object is available from the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniSession &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object via the
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniSession.CreateNLSLocale()
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;method. If NLS is disabled on the server, the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniNLSLocale &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object is not available, and
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;CreateNLSLocale()
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;throws an exception.&lt;/P&gt;&lt;/FONT&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniNLSMap">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniNLSMap &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;class applies only to UniVerse systems. &lt;/FONT&gt;&lt;/P&gt; &lt;P
align=left&gt;&lt;FONT size=2&gt;&lt;SPAN class=Courier&gt;&lt;FONT size=2&gt;UniNLSMap&lt;/FONT&gt;&lt;/SPAN&gt; controls NLS map settings. The UniVerse
server uses NLS maps to determine which map to use for a client’s string data.&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;/P&gt; &lt;P&gt;The &lt;/FONT&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniNLSMap &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object is
available from the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniSession
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object. The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniNLSMap &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object is available only if NLS is enabled on the server
uniConnection.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniRecord">
      <summary>&lt;P align=left&gt;&lt;/P&gt;&lt;FONT size=2&gt; &lt;P&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniRecord &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object controls database record interaction. It contains the &lt;/FONT&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDynArray &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object
and RecordID.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniSelectList">
      <summary>The &lt;SPAN class=Courier&gt;UniSelectList&lt;/SPAN&gt; object allows you to manipulate a select list on the server. &lt;?xml:namespace prefix = innovasys ns
= "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniSequentialFile">
      <summary>&lt;P align=left&gt;&lt;/P&gt;&lt;FONT size=2&gt; &lt;P&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniSequentialFile&lt;/FONT&gt;&lt;/FONT&gt; object &lt;FONT size=2&gt;defines and manages files that are processed sequentially. A
sequential file is an operating system file on the server containing text or binary data used in your application. In UniVerse, sequential files are defined as
type 1 or type 19 files.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniSession">
      <summary>
        <para>The UniSession object defines and manages a database session on the server. It is the central object for any database session, controlling access to all
objects dependent on it.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniSubroutine">
      <summary>The &lt;SPAN class=Courier&gt;UniSubroutine&lt;/SPAN&gt; class allows users to run a cataloged BASIC subroutine on the server. &lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniTransaction">
      <summary>&lt;P align=left&gt;&lt;/P&gt;&lt;FONT size=2&gt; &lt;P&gt;The &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniTransaction &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object is available from the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniSession &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object. The
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniTransaction
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;class provides methods to start, commit, and roll back transactions for a session. If a session closes while
transactions are active, the server rolls them back. For any &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniSession &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object, only one transaction can be active at a time.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="T:U2.Data.Client.UO.UniXML">
      <summary>&lt;P align=left&gt;&lt;/P&gt; &lt;P&gt;The UniXML class represents an XML representation of UniData data. Using this class, you can create XML documents and
XML Schema documents from UniQuery or UniData SQL, or directly from a data file. UniData also provides functions to generate new data, modify data, or generate
XML from the UniData database using the XMAP file.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniCommand.Cancel">
      <summary>This method cancels all outstanding output from the executing command. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniCommandException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniCommandException">If this method fails, it throws a UniCommandException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniCommand.Execute">
      <summary>This method executes the command set up by the Command property. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniCommandException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniCommandException">If this method fails, it throws a UniCommandException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniCommand.NextBlock">
      <summary>This method gets the next block of data from the command response if the command response exceeds the block size established by theCommandBlockSize property.
&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniCommandException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniCommandException">If this method fails, it throws a UniCommandException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniCommand.Reply(System.String)">
      <summary>This method replies to a command execution that is currently in the UVS_REPLY state. Many commands require a user response. Use the Reply() method to issue the
correct response to a command. Call this method whenever the CommandStatus property returns UVS_REPLY. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniCommandException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniCommandException">If this method fails, it throws a UniCommandException.</exception>
      <param name="aReplyString">T <font size="2">he string to send to the server as a response.</font></param>
    </member>
    <member name="P:U2.Data.Client.UO.UniCommand.Command">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the command string to be executed on the server. &lt;/FONT&gt;&lt;FONT
size=2&gt;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniCommand.CommandAtSelected">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the value of the &lt;SPAN class=Courier&gt;@SELECTED&lt;/SPAN&gt; variable from the server when the
command has completed successfully. &lt;/FONT&gt;&lt;FONT size=2&gt;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniCommand.CommandBlockSize">
      <summary>&lt;P&gt;This property gets or sets the block size, in bytes, of the buffer used to hold the contents of the &lt;SPAN class=Courier&gt;Response
&lt;/SPAN&gt;property in server communications. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniCommand.CommandStatus">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the status of the command object execution. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniCommand.EncryptionType">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the default encryption type to be used for client-server communications in all
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniCommand
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object operations.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniCommand.Response">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the output from the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;Execute()&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;and &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;Reply()&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;methods. This is the output
generated by the command on the server.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniCommand.SystemReturnCode">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the value of the @SYSTEM.RETURN.CODE returned by the command on the server.
&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.#ctor(U2.Data.Client.UO.UniSession)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This constructor initializes a new instance of the &lt;/FONT&gt;&lt;SPAN class=Courier&gt;UniDataSet
&lt;/SPAN&gt;&lt;FONT size=2&gt;class, specifying a&lt;/FONT&gt;&amp;nbsp; &lt;SPAN class=Courier&gt;UniSession &lt;/SPAN&gt;&lt;FONT
size=2&gt;object&lt;/FONT&gt;.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="pSession">A <span class="Courier">UniSession</span> object.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.#ctor(U2.Data.Client.UO.UniSession,System.String[],System.Byte[],System.Byte[],System.Byte[],System.Int32)">
      <summary>This constructor initializes a new instance of the &lt;SPAN class=Courier&gt;UniDataSet &lt;/SPAN&gt;class. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Absolute(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method specifies the absolute position in the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDataSet&lt;/FONT&gt;&lt;/FONT&gt; to &lt;FONT size=2&gt;which the cursor should
point. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: System.Boolean</para>
        <para>
          <font size="2">
            <span class="Courier">
              <font size="2">true</font>
            </span>
          </font>
          <font size="2">if the operation was successful; otherwise, <span class="Courier">false</span></font>.</para>
      </returns>
      <param name="rowNum">An <font size="2">integer specifying the absolute position.</font></param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Clear">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method removes all elements from the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;UniDataSet&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;collection object.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.GetDelimitedByteArrayRecord">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns a byte array object that represents all records, delimited by record
marks.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <returns>
        <para>Type: System.Byte[ ]</para>
        <para>A byte array object that represents all records, delimited by record marks.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.GetDelimitedByteArrayRecordID">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns a byte array object that represents all record IDs, delimited by record
marks.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: System.Byte[ ]</para>
        <para>A byte array object that represents all record IDs, delimited by record marks.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.GetEnumerator">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns an enumerator that can iterate through the &lt;SPAN
class=Courier&gt;UniDataSet&lt;/SPAN&gt;.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: System.Collections.IEnumerator</para>
        <para>An enumerator object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Relative(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method positions the data set cursor to a position &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;numRow&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;s away from the current position. For
example, if the cursor is already set to the third row and &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniDataSet.relative(5)&lt;FONT face="Segoe UI"&gt; is referenced, the cursor is set to the eighth position in the data
set&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt; &lt;P
align=left&gt;&lt;/FONT&gt;&amp;nbsp;&lt;/P&gt;</summary>
      <returns>
        <para align="left">Type: System.Boolean</para>
        <para align="left">
          <font size="2">If the operation succeeds, this method returns</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">true</font>
          </font>
          <font size="2">. If the operation attempts to move the cursor past the end or before the beginning of the data
set, it returns</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">false</font>
          </font>
          <font size="2">and sets
the cursor to the last row or first row, respectively.</font>
        </para>
      </returns>
      <param name="numRows">
        <para align="left">
          <font size="2">An integer representing the number of rows to move the cursor.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Remove(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method removes the element with the specified record ID from the &lt;FONT face="Courier
New"&gt;UniDataSet&lt;/FONT&gt;&lt;FONT size=3&gt; &lt;/FONT&gt;collection object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="pUniRecID">
        <para align="left">
          <font size="2">The record ID of the element to be removed from the dataset.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.ToString">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns a string that represents the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDataSet&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;collection object. This method
overrides the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;ToString
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;method of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;Object &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;class.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: System.String</para>
        <para>A string representing the <font size="2" face="Courier New">UniDataSet</font> collection object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Add(System.String)">
      <summary>&lt;FONT size=2 face="NJABO N+ Palatino,Palatino"&gt;&lt;FONT size=2 face="NJABO N+ Palatino,Palatino"&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method
adds a row of a &lt;SPAN class=Courier&gt;UniRecord &lt;/SPAN&gt;object &lt;/FONT&gt;&lt;FONT size=2&gt;to the end of the &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDataSet&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT
size=2&gt;&lt;FONT size=2 face="NJABO N+ Palatino,Palatino"&gt;&lt;FONT size=2 face="NJABO N+ Palatino,Palatino"&gt;collection
object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pUniRecID">
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">The record ID of the row to be
added.</font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Add(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method adds a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniRecord&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;object to the end of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDataSet&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;collection object. The syntax
specifies a &lt;SPAN class=Courier&gt;UniDynArray&lt;/SPAN&gt; to be converted to the &lt;SPAN class=Courier&gt;UniRecord
&lt;/SPAN&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pUniRecID">T <font size="2">he record ID of the row to be added.</font></param>
      <param name="pUniRecord">T <font size="2">he <span class="Courier">UniDynArray</span> to be converted to a</font><font size="2" face="NJADE B+ Courier,Courier"><font size="2" face="NJADE B+ Courier,Courier">UniRecord</font></font><font size="2">object.</font></param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Add(System.String,U2.Data.Client.UO.UniRecord)">
      <summary>&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method adds a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;UniRecord &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object to the end of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDataSet&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT
size=2&gt;collection object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=2&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pUniRecID">
        <para align="left">
          <font size="2">The record ID of the row to be added.</font>
        </para>
      </param>
      <param name="pUniRec">
        <para align="left">
          <font size="2">The</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniRecord</font>
          </font>
          <font size="2">object to be added.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Add(System.String,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method adds a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniRecord&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;object to the end of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDataSet&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;collection object. The syntax
specifies&amp;nbsp;&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;a string to be converted to the &lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniRecord&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=3&gt; &lt;/FONT&gt;&lt;FONT
size=2&gt;&lt;FONT size=2&gt;object&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pUniRecID">
        <para align="left">
          <font size="2">The</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniRecord</font>
          </font>
          <font size="2">object to be added.</font>
        </para>
      </param>
      <param name="pRecord">
        <para align="left">
          <font size="2">
            <font size="2">The string to be converted to the <span class="Courier">UniRecord</span></font>
            <font size="2" face="NJABO N+ Palatino,Palatino">
              <font size="2" face="NJABO N+ Palatino,Palatino">object.</font>
            </font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.GetRecord(System.String)">
      <summary>&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method gets the value associated with the&amp;nbsp;specified record
ID.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniRecord</para>
        <para>The value associated with the record ID.</para>
      </returns>
      <param name="pUniRecID">
        <para align="left">
          <font size="2">The record ID of the record whose value is to be retrieved.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.GetRecord(System.Int32)">
      <summary>&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method gets the value associated with the specified index position.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniRecord</para>
        <para>The value associated with the index position.</para>
      </returns>
      <param name="nIndex">
        <font size="2">The index position whose value is to be retrieved.</font>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.GetRecordStatus(System.String)">
      <summary>&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method gets the &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;status of the
&lt;FONT face="Courier New"&gt;UniRecord&lt;/FONT&gt; object in the&amp;nbsp;specified record ID.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The status of the <font face="Courier New">UniRecord</font> object.</para>
      </returns>
      <param name="pUniRecID">
        <para align="left">T <font size="2" face="NJABO N+ Palatino,Palatino"><font size="2" face="NJABO N+ Palatino,Palatino">he record ID of
the</font></font><font size="2"><font face="Courier New">UniRecord</font></font><font size="2" face="NJABO N+ Palatino,Palatino"><font size="2" face="NJABO N+ Palatino,Palatino">object whose status is to be retrieved.</font></font></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.GetRecordStatus(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method gets the &lt;/FONT&gt;&lt;FONT size=2&gt;status of the &amp;nbsp;&lt;FONT face="Courier
New"&gt;UniRecord&lt;/FONT&gt;&lt;FONT size=3&gt; &lt;/FONT&gt;object at the specified index position.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The status of the <font size="2" face="Courier New">UniRecord</font><font size="2">object</font>.</para>
      </returns>
      <param name="nIndex">
        <para align="left">
          <font size="2">The index position of the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniRecord</font>
          </font>
          <font size="2">object whose status is to be retrieved.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Insert(System.Int32,System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P&gt;This method inserts a new row into the data set at the specified index location. This syntax calls out the UniDynArray&amp;nbsp;to be converted to a
&lt;A href="U2.Data.Client~U2.Data.Client.UO.UniRecord.html"&gt;UniRecord&lt;/A&gt; object before being inserted. &lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pIndexLoc">
        <para align="left">
          <font size="2">The location at which the row is to be inserted in the data set.</font>
        </para>
      </param>
      <param name="pUniRecID">
        <para align="left">
          <font size="2">The record ID of the row to be inserted.</font>
        </para>
      </param>
      <param name="pUniRecord">
        <para align="left">
          <font size="2">The UniDynArray <font face="Segoe UI">to be converted to a</font></font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniRecord</font>
          </font>
          <font size="2">object before being inserted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Insert(System.Int32,System.String,System.String)">
      <summary>&lt;P&gt;This method inserts a new row into the data set at the specified index location. This syntax calls out the string to be converted to a &lt;A
href="U2.Data.Client~U2.Data.Client.UO.UniRecord.html"&gt;UniRecord&lt;/A&gt; object before being inserted. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns
= "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt; &lt;P&gt;&lt;/P&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pIndexLoc">The location at which the row is to be inserted in the data set.</param>
      <param name="pRecID">The record ID of the row to be inserted.</param>
      <param name="pRecord">The string to be converted to a <span class="Courier">UniRecord</span> object before being inserted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Insert(System.Int32,System.String,U2.Data.Client.UO.UniRecord)">
      <summary>This method inserts a new row into the data set at the specified index location. This syntax calls out the UniRecord to be converted to a &lt;A
href="U2.Data.Client~U2.Data.Client.UO.UniRecord.html"&gt;UniRecord&lt;/A&gt; object&amp;nbsp;before being inserted. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pIndexLoc">The location at which the row is to be inserted in the data set.</param>
      <param name="pRecID">The record ID of the row to be inserted.</param>
      <param name="pRecord">The UniRecord to be converted to a <span class="Courier">UniRecord</span> object before being inserted.<br /></param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Insert(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>This method inserts a new row into the data set at the specified cursor position. This syntax calls out the UniDynArray&amp;nbsp;to be converted to a &lt;A
href="U2.Data.Client~U2.Data.Client.UO.UniRecord.html"&gt;UniRecord&lt;/A&gt; object before being inserted. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pUniRecID">The record ID of the row to be inserted.</param>
      <param name="pUniRecord">The UniDynArray to be converted to a <span class="Courier">UniRecord</span> object before being inserted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Insert(System.String)">
      <summary>This method inserts a new row into the data set at the specified cursor position. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pUniRecID">The record ID of the row to be inserted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Insert(System.String,System.String)">
      <summary>This method inserts a new row into the data set at the specified cursor position. This syntax calls out the string to be converted to a &lt;A
href="U2.Data.Client~U2.Data.Client.UO.UniRecord.html"&gt;UniRecord&lt;/A&gt; object before being inserted. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pUniRecID">The record ID of the row to be inserted.</param>
      <param name="pRecord">The string to be converted to a <span class="Courier">UniRecord</span> object before being inserted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDataSet.Insert(System.String,U2.Data.Client.UO.UniRecord)">
      <summary>This method inserts a new row into the data set at the specified cursor position. This syntax calls out the UniRecord to be converted to a &lt;A
href="U2.Data.Client~U2.Data.Client.UO.UniRecord.html"&gt;UniRecord&lt;/A&gt; object before being inserted. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this method fails, it throws a UniDataSetException.</exception>
      <param name="pUniRecID">The record ID of the row to be inserted.</param>
      <param name="pRecord">The UniRecord to be converted to a <span class="Courier">UniRecord</span> object before being inserted.</param>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.AfterLast">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns a Boolean value indicating whether the cursor is positioned past the last row in the data set. Use
this property to determine when the list is exhausted.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.BeforeFirst">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns a Boolean value indicating whether the cursor is positioned before the first row in the data
set.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.CurrentRow">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the current index position within the &lt;SPAN class=Courier&gt;UniDataSet&lt;/SPAN&gt;
collection object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.DelimitedRecord">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns a string object that represents all records, delimited by record
marks.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.DelimitedRecordID">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns a string object that represents all record IDs, delimited by record
marks.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.First">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns a Boolean value indicating whether the cursor is positioned at the first row in the data
set.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.Item(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property is the indexer for the &lt;SPAN class=Courier&gt;UniDataSet&lt;/FONT&gt; &lt;/SPAN&gt;&lt;FONT
size=2&gt;class. It gets or sets the value associated with the specified index key or record ID key.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this property fails, it throws a UniDataSetException.</exception>
      <param name="RecID">
        <para align="left">
          <font size="2">The record ID key.</font>
        </para>
      </param>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.Last">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns a Boolean value indicating whether the cursor is positioned at the last row in the data
set.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.RowCount">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the number of UniRecord objects contained in the &lt;SPAN class=Courier&gt;UniDataSet
&lt;/SPAN&gt;collection object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.Item(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property is the indexer for the &lt;SPAN class=Courier&gt;UniDataSet&lt;/FONT&gt; &lt;/SPAN&gt;&lt;FONT
size=2&gt;class. It gets or sets the value associated with the specified index key or record ID key.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this property fails, it throws a UniDataSetException.</exception>
      <param name="RecID">
        <para align="left">
          <font size="2">The record ID key.</font>
        </para>
      </param>
    </member>
    <member name="P:U2.Data.Client.UO.UniDataSet.Item(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property is the indexer for the &lt;SPAN class=Courier&gt;UniDataSet &lt;/SPAN&gt;class. It gets or sets the value
associated with the specified index key.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDataSetException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDataSetException">If this property fails, it throws a UniDataSetException.</exception>
      <param name="nIndex">
        <para align="left">
          <font size="2">The index key.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetAssoc">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the ASSOC field (field 7) from the dictionary record set previously by the
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;RecordID &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=2&gt;property.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the ASSOC field.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetAssoc(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the ASSOC field (field 7) from the dictionary record set previously by the
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;RecordID &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=2&gt;property.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the ASSOC field.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetConv">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the CONV field (field 3) from a dictionary record.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the CONV field.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetConv(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the CONV field (field 3) from a dictionary record specified by record
ID.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the CONV field.</para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">record ID of the
dictionary record to be evaluated.</font>
          </font>
        </para>
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">If you do not
specify</font>
          </font>
          <font class="Courier" size="2">aRecordID</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">, the record is the one set previously by the</font>
          </font>
          <font class="Courier" size="2">RecordID</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">property.</font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetFieldType(System.String)">
      <summary>&lt;P&gt;This method returns the current TYPE field from the dictionary, including the record ID. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The current TYPE field from the dictionary.</para>
      </returns>
      <param name="aRecordID">
        <para>The record ID of the record in the specified field.</para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="MODNH C+ Courier,Courier">
            <font size="2" face="MODNH C+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record is the one set previously by the</font>
          <font size="2" face="MODNH C+ Courier,Courier">
            <font size="2" face="MODNH C+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetFieldType">
      <summary>&lt;P&gt;This method returns the current TYPE field from the dictionary. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The current TYPE field from the dictionary.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetFormat">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the FORMAT field (field 5) from a dictionary record.&lt;/P&gt;&lt;?xml:namespace prefix
= innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the FORMAT field.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetFormat(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the FORMAT field (field 5) from a dictionary record specified by record
ID.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para align="left">
          <font size="2">Type: U2.Data.Client.UO.UniDynArray</font>
        </para>
        <para align="left">
          <font size="2">The value in the FORMAT field.</font>
        </para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">The record ID of the record to be
evaluated.</font>
          </font>
        </para>
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">If you do not
specify</font>
          </font>
          <font class="Courier" size="2">aRecordID</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">, the record is the one set previously by the</font>
          </font>
          <font size="2">
            <span class="Courier">
              <font size="2">RecordID</font>
            </span>
          </font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">property.</font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetLoc">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the LOC field (field 2) from a dictionary record.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para align="left">
          <font size="2">Type: U2.Data.Client.UO.UniDynArray</font>
        </para>
        <para align="left">
          <font size="2">The value in the LOC field.</font>
        </para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetLoc(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the LOC field (field 2) from a dictionary record specified by record
ID.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the LOC field.</para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">ID of the
dictionary record to be evaluated.</font>
          </font>
        </para>
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">
              <font size="2">If you do not
specify</font>
              <font size="2" face="MODNH C+ Courier,Courier">
                <font size="2" face="MODNH C+ Courier,Courier">aRecordID</font>
              </font>
              <font size="2">, the record
is the one set previously by the</font>
              <font size="2" face="MODNH C+ Courier,Courier">
                <font size="2" face="MODNH C+ Courier,Courier">RecordID</font>
              </font>
              <font size="2">property.</font>
            </font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetName">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the NAME field (field 4) from a dictionary record.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the NAME field.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetName(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the NAME field (field 4) from a dictionary record specified by record
ID.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the NAME field.</para>
      </returns>
      <param name="aRecordID">
        <para align="left">The record ID of the record to be evaluated.</para>
        <para align="left">If you do not specify <span class="Courier">aRecordID</span>, the record is the one set previously by the <span class="Courier">RecordID</span>
property.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetSM">
      <summary>&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the SM field (field 6) from a dictionary record. The value in the
SM field indicates whether the dictionary record is defined as single-valued or multivalued.&lt;/P&gt;&lt;/FONT&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the SM field.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetSM(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the SM field (field 6) from a dictionary record specified by record ID. The value in
the SM field indicates whether the dictionary record is defined as single-valued or multivalued.&lt;/FONT&gt;&lt;/P&gt;&lt;?xml:namespace prefix = "innovasys"
ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;&lt;FONT size=2&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/FONT&gt;&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the SM field.</para>
      </returns>
      <param name="aRecordID">
        <para>T <font size="2">he record ID of the record to be evaluated.</font></para>
        <para>
          <font size="2">If you do not specify <font face="NJADE B+ Courier,Courier"><font face="NJADE B+ Courier,Courier">aRecordID</font></font>, the record is the
one set previously by the <font face="NJADE B+ Courier,Courier"><font face="NJADE B+ Courier,Courier">RecordID</font></font> property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetSQLType">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the SQLTYPE field from a dictionary record.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt; &lt;P align=left&gt;&lt;/FONT&gt;&lt;FONT
size=2 face="NJADC P+ Palatino,Palatino"&gt;&amp;nbsp;&lt;/P&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value in the SQLTYPE field.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.GetSQLType(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the value in the SQLTYPE field from a dictionary record specified by record
ID.&lt;/P&gt;&lt;/FONT&gt;&lt;FONT size=2 face="NJADC P+ Palatino,Palatino"&gt;&lt;FONT size=2 face="NJADC P+ Palatino,Palatino"&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para align="left">
          <font size="2">Type: U2.Data.Client.UO.UniDynArray</font>
        </para>
        <para align="left">
          <font size="2">The value in the SQLTYPE field.</font>
        </para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to be evaluated.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetAssoc(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value &lt;/FONT&gt;&lt;FONT size=2&gt;of the ASSOC field (field 7) of a dictionary record. The
value is specified as a &lt;SPAN class=Courier&gt;UniDynArray&lt;/SPAN&gt;&lt;FONT size=3&gt; &lt;/FONT&gt;&lt;FONT
size=2&gt;string.&lt;/FONT&gt;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the ASSOC field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetAssoc(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the ASSOC field (field 7) of a dictionary record specified by record ID. The value is
specified as a &lt;SPAN class=Courier&gt;UniDynArray&lt;/SPAN&gt;&lt;FONT size=3&gt; &lt;/FONT&gt;&lt;FONT
size=2&gt;string.&lt;/FONT&gt;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para>
          <font size="2">The record <font size="2">ID of the dictionary record to be modified.</font></font>
        </para>
        <para>
          <font size="2">
            <font size="2">If you do not specify</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
            </font>
            <font size="2">, the record is the one set previously by the</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
            </font>
            <font size="2">property.</font>
          </font>
        </para>
      </param>
      <param name="aString">
        <para align="left">The value to be written to the ASSOC field.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetConv(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the CONV field (field 3) of a dictionary record. The value is specified as a &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aString">T <font size="2">he value to write to the CONV field.</font></param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetConv(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the CONV field (field 3) of a dictionary record specified by record ID. The value is
specified as a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para align="left">
          <font size="2">
            <font size="2">The record ID of the dictionary record to be modified.</font>
          </font>
        </para>
        <para align="left">
          <font size="2">
            <font size="2">If you do not specify</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
            </font>
            <font size="2">, the record is the one set previously by the</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
            </font>
            <font size="2">property.</font>
          </font>
        </para>
      </param>
      <param name="aString">The value to write to the CONV field.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetFormat(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the FORMAT field (field 5) of a dictionary record. The value is specified as a &lt;SPAN
class=Courier&gt;UniDynArray&lt;/SPAN&gt; string.&lt;/FONT&gt;&lt;/P&gt;&lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block" name="source"&gt;&lt;FONT
size=2&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/FONT&gt;&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the FORMAT field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetFormat(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the FORMAT field (field 5) of a dictionary record specified by record ID. The value is
specified as a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the dictionary record to be modified.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aString">
        <para align="left">
          <font size="2">
            <font size="2">The value to be written to the FORMAT field.</font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetLoc(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the LOC field (field 2) of a dictionary record. The value is specified as a &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;string.&amp;nbsp;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the LOC field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetLoc(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the LOC field (field 2) of a dictionary record specified by record ID. The value is
specified as a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the dictionary record to be modified.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the LOC field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetName(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the NAME field (field 4) of a dictionary record. The value is specified as a &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;string.&amp;nbsp;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the NAME field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetName(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the NAME field (field 4) of a dictionary record specified by record ID.&amp;nbsp;The value
is specified as a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;string. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the dictionary record to be modified.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aString">
        <para align="left">
          <font size="2">
            <font size="2">The value to be written to the NAME field.</font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetSM(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the SM field (field 6) of a dictionary record. The value is specified as a &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;string. The value in the SM field indicates whether the dictionary record is defined as single-valued or
multivalued.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aString">
        <para align="left">
          <font size="2">The value to write to the SM field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetSM(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the SM field (field 6) of a dictionary record specified by record ID. The value is
specified as a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;string. The value in the SM field indicates whether the dictionary record is defined as
single-valued or multivalued.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to be modified.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record is specified by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aString">
        <para align="left">
          <font size="2">The value to write to the SM field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetSQLType(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the SQLTYPE field (field 8) of a dictionary record. The value is specified as a &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;string. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the SQLTYPE field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetSQLType(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the SQLTYPE field (field 8) of a dictionary record. The value is specified as a string.
&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the SQLTYPE field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetSQLType(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the SQLTYPE field (field 8) of a dictionary record specified by record ID. The value is
specified as a &lt;SPAN class=Courier&gt;UniDynArray&lt;/FONT&gt; &lt;/SPAN&gt;&lt;FONT size=2&gt;string.&amp;nbsp;&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">The record ID of the dictionary record to be
modified.</font>
          </font>
        </para>
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">If you do not
specify</font>
          </font>
          <font size="2">aRecordID</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">, the
record is the one set previously by the</font>
          </font>
          <font size="2">RecordID</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">property.</font>
          </font>
        </para>
      </param>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the SQLTYPE field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetSQLType(System.String,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the SQLTYPE field (field 8) of a dictionary record specified by record ID. The value is
specified as a string.&amp;nbsp;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">The record ID of the dictionary record to be
modified.</font>
          </font>
        </para>
        <para align="left">
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">If you do not
specify</font>
          </font>
          <font size="2">aRecordID</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">, the
record is the one set previously by the</font>
          </font>
          <font size="2">RecordID</font>
          <font size="2" face="NJABO N+ Palatino,Palatino">
            <font size="2" face="NJABO N+ Palatino,Palatino">property.</font>
          </font>
        </para>
      </param>
      <param name="aString">
        <para align="left">
          <font size="2">The value to be written to the SQLTYPE field.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetType(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the CODE field (field 1) of the dictionary record. The value is specified as a &lt;SPAN
class=Courier&gt;UniDynArray&lt;/FONT&gt; &lt;/SPAN&gt;&lt;FONT size=2&gt;string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aString">The value to be written to the CODE field. The first characters of the TYPE field indicate the type of field the dictionary record is defining. Valid types
are:

<list type="table"><listheader><term><strong>Value</strong></term><description><strong>Description</strong></description></listheader><item><term>D</term><description>D-descriptor</description></item><item><term>I</term><description>I-descriptor</description></item><item><term>V</term><description>(UniData only) V-descriptor</description></item><item><term>PH</term><description>Phrase</description></item><item><term>X</term><description>(UniVerse only) X-descriptor</description></item></list></param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDictionary.SetType(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method sets the value of the CODE field (field 1) of the dictionary record specified by record ID. The value is
specified as a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to be modified.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aString">The value to be written to the CODE field. The first characters of the TYPE field indicate the type of field the dictionary record is defining. Valid types
are:

<list type="table"><listheader><term><strong>Value</strong></term><description><strong>Description</strong></description></listheader><item><term>D</term><description>D-descriptor</description></item><item><term>I</term><description>I-descriptor</description></item><item><term>V</term><description>(UniData only) V-descriptor</description></item><item><term>PH</term><description>Phrase</description></item><item><term>X</term><description>(UniVerse only) X-descriptor</description></item></list></param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.#ctor(U2.Data.Client.UO.UniSession)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This is the default constructor for the class. It constructs a dynamic array with no characters in
it.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="aSession">
        <para align="left">
          <font size="2">A</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniSession</font>
          </font>
object <font size="2">.</font></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.#ctor(U2.Data.Client.UO.UniSession,System.Byte[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This syntax constructs a dynamic array containing the value of the byte array.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this constructor fails, it throws a UniDynArrayException.</exception>
      <param name="aSession">
        <para align="left">
          <font size="2">A</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniSession</font>
          </font>
object.</para>
      </param>
      <param name="pData">
        <para align="left">
          <font size="2">The byte array data to be converted to a dynamic array.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.#ctor(U2.Data.Client.UO.UniSession,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This syntax constructs a dynamic array containing the value of &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;pString&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;.&lt;/P&gt;&lt;?xml:namespace prefix
= innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para></para>
      </returns>
      <param name="aSession">
        <para align="left">A <font size="2" face="NJADE B+ Courier,Courier"><font size="2" face="NJADE B+ Courier,Courier">UniSession</font></font><font size="2">object.</font></para>
      </param>
      <param name="pString">
        <para align="left">
          <font size="2">The data to be converted to a dynamic array.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.PrintByteArray">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method prints each byte of the byte array to the console.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.ToByteArray">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method converts the &lt;SPAN class=Courier&gt;UniDynArray&lt;/FONT&gt; &lt;/SPAN&gt;&lt;FONT size=2&gt;object into
a byte array.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.Byte[ ]</para>
        <para>The object as a byte array.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.ToString">
      <summary>
        <para align="left">
          <font size="2">This method converts the specified</font>
          <font size="2" face="MODNH C+ Courier,Courier">
            <font size="2" face="MODNH C+ Courier,Courier">UniDynArray</font>
          </font>
          <font size="2">object into a base string.</font>
        </para>
      </summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.String</para>
        <para>The object as a base string.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.UniCodeStringToByteArray(System.Text.Encoding,System.String)">
      <summary>&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method converts a &lt;SPAN class=Courier&gt;UniCodeString&lt;/SPAN&gt; to a byte array using
the specified encoding.&lt;/P&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.Byte[ ]</para>
        <para>The object as a byte array.</para>
      </returns>
      <param name="pEnc">
        <para>The encoding to be used in this conversion.</para>
      </param>
      <param name="pStringVal">
        <para align="left">
          <font size="2">The string to be converted to a byte array.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Count(System.Int32,System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method counts t&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;he number of text marks in a specified subvalue of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniDynArray&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;object. &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The number of text marks in the subvalue.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The field whose text marks are to be counted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">
            <font size="2">The value whose text marks are to be counted.</font>
          </font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The subvalue whose text marks are to be counted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Count(System.Int32,System.Int32)">
      <summary>&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method counts the
&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;number of subvalue marks in a specified value of the &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDynArray&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=3&gt; &lt;/FONT&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;object.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;?xml:namespace prefix = innovasys ns
= "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The number of subvalue marks in the value.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The field whose subvalue marks are to be counted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The value whose subvalue marks are to be counted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Count(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method counts the&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt; number of value marks in a
specified field of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniDynArray&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;object.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The number of value marks in the field.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The field whose value marks are to be counted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Count">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method counts one of the following:&lt;/FONT&gt;&lt;/P&gt;&lt;FONT size=2&gt; &lt;UL&gt; &lt;LI&gt; &lt;DIV
align=left&gt;&lt;FONT size=2&gt;The number of field marks in the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE
B+ Courier,Courier"&gt;UniDynArray &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object&lt;/FONT&gt;&lt;/DIV&gt; &lt;LI&gt; &lt;DIV align=left&gt;&lt;FONT
size=2&gt;&lt;FONT size=2&gt;The number of value marks in a field of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;UniDynArray&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;object&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt; &lt;LI&gt; &lt;DIV align=left&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;&lt;FONT size=2&gt;The number of subvalue marks in a value of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;UniDynArray&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;&lt;FONT size=2&gt;object&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt; &lt;LI&gt; &lt;DIV align=left&gt;&lt;FONT
size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;The number of text marks in a subvalue of the &lt;/FONT&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniDynArray&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;object&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;FONT size=2&gt;&lt;FONT
size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;
&lt;P&gt;&lt;/P&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The number of field marks.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Dcount(System.Int32,System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method counts t&lt;/FONT&gt;he number of text values in a specified subvalue position of the dynamic array,
equivalent to &lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="Courier
New"&gt;Count()&lt;FONT size=3 face="Segoe UI"&gt; &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2&gt;+1.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <returns>
        <para>System: Int32</para>
        <para>The number of text values in the subvalue position.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The field whose text values are to be counted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The value whose text values are to be counted.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The subvalue whose text values are to be counted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Dcount(System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;This method counts the number of subvalues in a specified value position of the dynamic array, equivalent to &lt;SPAN
class=Courier&gt;Count(aFieldValue, aValue)&lt;/SPAN&gt; &lt;FONT size=2 face="Courier New"&gt;+1.&lt;/FONT&gt;&lt;/P&gt;&lt;?xml:namespace prefix = innovasys
ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <returns>
        <para>System: Int32</para>
        <para>The number of subvalue marks in the value position.</para>
        <para></para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The field whose subvalue marks are to be counted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The value whose subvalue marks are to be counted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Dcount(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method counts the &lt;/FONT&gt;&lt;FONT size=2&gt;&lt;FONT size=2&gt;number of values in a specified field position
of the dynamic array, equivalent to &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;Count(aField)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;+1.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <returns>
        <para>System: Int32</para>
        <para>The number of values in the field position.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The field whose values are to be counted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Dcount">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method counts one of the following:&lt;/FONT&gt;&lt;/P&gt; &lt;UL&gt; &lt;LI&gt; &lt;DIV align=left&gt;&lt;FONT
size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;The number of fields in the dynamic array&lt;/FONT&gt;&lt;FONT size=2&gt;, equivalent to
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;Count()&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;+1&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/FONT&gt;&lt;/DIV&gt; &lt;LI&gt; &lt;DIV align=left&gt;&lt;FONT size=2&gt;&lt;FONT
face="Courier New"&gt;&lt;/FONT&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;The number of values in a specified field position of the dynamic array, equivalent
to &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;Count(aField)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;+1&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/DIV&gt; &lt;LI&gt; &lt;DIV align=left&gt; &lt;P align=left&gt;The
number of subvalues in a specified field position/value position of the dynamic array, equivalent to &lt;SPAN class=Courier&gt;Count(aFieldValue,
aValue)&lt;/SPAN&gt; &lt;FONT size=2 face="Courier New"&gt;+1&lt;/FONT&gt;&lt;/P&gt;&lt;/DIV&gt; &lt;LI&gt; &lt;DIV align=left&gt; &lt;P align=left&gt;The
number of text values in a specified field position/value position/subvalue position of the dynamic array, equivalent to &lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="Courier New"&gt;Count()&lt;FONT size=3 face="Segoe UI"&gt;
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2&gt;+1&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="Courier New"&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>System: Int32</para>
        <para>The number of fields in the dynamic array.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Delete(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para align="left">
          <font size="2">This method deletes the specified subvalue from a dynamic array.</font>
        </para>
      </summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the subvalue to be deleted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value containing the subvalue to be deleted.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The number of the subvalue to be deleted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Delete(System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method deletes the specified value from a dynamic array.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the value to be deleted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value to be deleted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Delete(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method deletes the specified field from a dynamic array.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <param name="aField">The number of the field to be deleted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Extract(System.Int32,System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;This method extracts the subvalue in a specified position of a value in a field of the &lt;SPAN class=Courier&gt;UniDynArray
&lt;/SPAN&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <returns>
        <para>System: U2.Data.Client.UO.UniDynArray</para>
        <para>The subvalue, as a dynamic array.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the subvalue to be extracted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value containing the subvalue to be extracted.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The number of the subvalue to be extracted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Extract(System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;This method extracts the value in a specified position in a field of the &lt;SPAN class=Courier&gt;UniDynArray
&lt;/SPAN&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value of the specified position, as a dynamic array.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the value to be extracted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value to be extracted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Extract(System.Int32)">
      <summary>&lt;P align=left&gt;This method extracts&amp;nbsp;a field in a specified position of the &lt;SPAN class=Courier&gt;UniDynArray
&lt;/SPAN&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Data from the field, as a dynamic array.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field to be extracted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Insert(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>&lt;P align=left&gt;This method inserts a string object into a dynamic array at a specified subvalue position, moving subsequent subvalues
down.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field into which the subvalue is to be inserted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value into which the subvalue is to be inserted.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The number of the subvalue to be inserted.</font>
        </para>
      </param>
      <param name="insertString">
        <para align="left">
          <font size="2">The string representing the data to be inserted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Insert(System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>&lt;P align=left&gt;This method inserts a byte array object into a dynamic array at a specified subvalue position, moving subsequent subvalues
down.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field into which the subvalue is to be inserted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value into which the subvalue is to be inserted.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The number of the subvalue to be inserted.</font>
        </para>
      </param>
      <param name="pByteArray">The byte array representing the data to be inserted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Insert(System.Int32,System.Int32,System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;This method inserts a &lt;SPAN class=Courier&gt;UniDynArray&lt;/SPAN&gt; object into a dynamic array at a specified subvalue position,
moving subsequent subvalues down.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field into which the subvalue is to be inserted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value into which the subvalue is to be inserted.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The number of the subvalue to be inserted.</font>
        </para>
      </param>
      <param name="aUniDynArray">The <span class="Courier">UniDynArray</span> representing the data to be inserted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Insert(System.Int32,System.Int32,System.String)">
      <summary>&lt;P align=left&gt;This method inserts a string object into a dynamic array at a specified value position, moving subsequent values down.&lt;/P&gt;&lt;FONT
size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field into which the value is to be inserted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value to be inserted.</font>
        </para>
      </param>
      <param name="aString">
        <para align="left">
          <font size="2">The string representing the data to be inserted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Insert(System.Int32,System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;This method inserts a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;object into a dynamic array at a specified value position, moving
subsequent values down.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field into which the value is to be inserted.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value to be inserted.</font>
        </para>
      </param>
      <param name="aUniDynArray">The <span class="Courier">UniDynArray</span> representing the data to be inserted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Insert(System.Int32,System.String)">
      <summary>This method inserts a string object into a dynamic array at a specified field position, moving subsequent fields down. &lt;?xml:namespace prefix = innovasys ns
= "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field into which the value is to be inserted.</font>
        </para>
      </param>
      <param name="aString">
        <para align="left">
          <font size="2">The string representing the data to be inserted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Insert(System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;This method inserts a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;object into a dynamic array at a specified field position, moving
subsequent fields down.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field into which the value is to be inserted.</font>
        </para>
      </param>
      <param name="aUniDynArray">The <span class="Courier">UniDynArray</span> representing the data to be inserted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Length(System.Int32,System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;This method gets the length of a specified subvalue in a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;object.&lt;/P&gt;&lt;FONT
size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The length of the specified subvalue.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the subvalue whose length is to be retrieved.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">
            <font size="2">The number of the value containing the subvalue whose length is to be retrieved.</font>
          </font>
        </para>
      </param>
      <param name="aSubValue">The number of the subvalue whose length is to be retrieved.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Length(System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;This method gets the length of a specified value in a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;object.&lt;/P&gt;&lt;FONT
size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The length of the specified value.</para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the value whose length is to be retrieved.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value whose length is to be retrieved.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Length(System.Int32)">
      <summary>&lt;P align=left&gt;This method gets the length of a specified field, value in a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;object.&lt;/P&gt;&lt;FONT
size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.
</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The length of the specified field.</para>
      </returns>
      <param name="aField">The number of the field whose length is to be retrieved.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Remove(System.Int32,System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;This method deletes a subvalue from the &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;object, returning the subvalue as a new &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;object.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The subvalue as a <font size="2">new <font face="MODNH C+ Courier,Courier"><font face="MODNH C+ Courier,Courier">UniDynArray</font></font></font><font size="2">object.</font></para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the subvalue to be removed.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value containing the subvalue to be removed.</font>
        </para>
      </param>
      <param name="aSubValue">The number of the subvalue to be removed.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Remove(System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;This method deletes a value from the &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;object, returning the value as a new &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;object.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The value as a <font size="2">new <font face="MODNH C+ Courier,Courier"><font face="MODNH C+ Courier,Courier">UniDynArray</font></font> object.</font></para>
      </returns>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the value to be removed.</font>
        </para>
      </param>
      <param name="aValue">The number of the value to be removed.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Remove(System.Int32)">
      <summary>&lt;P align=left&gt;This method deletes a field from the &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;object, returning the field as a new &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;object.&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The field as a new UniDynArray object.</para>
      </returns>
      <param name="aField">The number of the field to be removed.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Replace(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>&lt;P align=left&gt;This method replaces a subvalue with a new subvalue specified by a string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value containing the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The number of the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="replaceString">The string representing the replacement subvalue.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Replace(System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>&lt;P&gt;This method replaces a subvalue with a new subvalue specified by a byte array.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value containing the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The number of the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="pByteArray">The byte array representing the replacement subvalue.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Replace(System.Int32,System.Int32,System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P&gt;This method replaces a subvalue with a new subvalue specified by a &lt;SPAN class=Courier&gt;UniDynArray&lt;/SPAN&gt;.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value containing the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="aSubValue">
        <para align="left">
          <font size="2">The number of the subvalue to be replaced.</font>
        </para>
      </param>
      <param name="aUniDynArray">The <span class="Courier">UniDynArray</span> representing the replacement subvalue.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Replace(System.Int32,System.Int32,System.String)">
      <summary>&lt;P&gt;This method replaces a value with a new value specified by a string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the value to be replaced.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value to be replaced.</font>
        </para>
      </param>
      <param name="aString">The string representing the replacement value.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Replace(System.Int32,System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P&gt;This method replaces a value with a new value specified by a &lt;SPAN class=Courier&gt;UniDynArray&lt;/SPAN&gt;.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field containing the value to be replaced.</font>
        </para>
      </param>
      <param name="aValue">
        <para align="left">
          <font size="2">The number of the value to be replaced.</font>
        </para>
      </param>
      <param name="aUniDynArray">The <span class="Courier">UniDynArray</span> representing the replacement value.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Replace(System.Int32,System.String)">
      <summary>&lt;P&gt;This method replaces a field with a new field specified by a string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field to be replaced.</font>
        </para>
      </param>
      <param name="aString">The string representing the replacement field.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniDynArray.Replace(System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P&gt;This method replaces a field with a new field specified by a &lt;SPAN class=Courier&gt;UniDynArray&lt;/SPAN&gt;.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniDynArrayException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniDynArrayException">If this method fails, it throws a UniDynArrayException.</exception>
      <param name="aField">
        <para align="left">
          <font size="2">The number of the field to be replaced.</font>
        </para>
      </param>
      <param name="aUniDynArray">The <span class="Courier">UniDynArray</span> representing the replacement field.</param>
    </member>
    <member name="P:U2.Data.Client.UO.UniDynArray.StringValue">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;Gets the value of a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;as a string object.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ClearFile">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method clears a file, deleting all its records. If the file is locked by another session or user, the current
blocking strategy (as returned by the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniFileBlockingStrategy &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;property) determines the action to be
taken.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.Close">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method closes a file and releases all file or record locks.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.GetAkInfo(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns information about the secondary key indexes in a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniFile &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object as a &lt;/FONT&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDynArray &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object.
Value marks separate elements of the dynamic array.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para align="left">Type: U2.Data.Client.UO.UniDynArray</para>
        <para align="left">
          <font size="2">Information about the secondary key indexes in a <font face="NJADE B+ Courier,Courier"><font face="NJADE B+ Courier,Courier">UniFile</font></font> object.</font>
        </para>
      </returns>
      <param name="akNameObj">
        <para align="left">
          <font size="2">The file name of the secondary index from which you want to get information.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.iType(System.String,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method evaluates the specified I-descriptor and returns the evaluated string. It applies no conversions to the
data.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>
          <font size="2">The evaluated string as a <span class="Courier">UniDynArray</span>.</font>
        </para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record supplied as data to the Itype facility.</font>
        </para>
      </param>
      <param name="aITypeID">
        <para align="left">
          <font size="2">The record ID of the I-descriptor to be evaluated.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.LockFile">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method locks the UniData or UniVerse file. It does not rely on any of the locking strategies such as those set by
the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniFileBlockingStrategy&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;, &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniFileLockStrategy&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;, or
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniFileReleaseStrategy
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;property.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt; &lt;P
align=left&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.Open">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method opens a data file.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If Open ( ) cannot open the file, it throws UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.UnlockFile">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method removes all file locks from a database file.&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.DeleteRecord">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method deletes a record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.DeleteRecord(U2.Data.Client.UO.UniDataSet)">
      <summary>&lt;P align=left&gt;This method deletes records identified by a &lt;SPAN class=Courier&gt;UniDataSet &lt;/SPAN&gt;collection.&lt;/P&gt;&lt;FONT
size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aDataSet">
        <para align="left">
          <font size="2">A <span class="Courier">UniDataSet</span></font>
          <font size="2">collection that identifies the record IDs to be
deleted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.DeleteRecord(System.String)">
      <summary>This method deletes a record identified by a string. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordIDObj">
        <para align="left">
          <font size="2">The record ID of the record to be deleted.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.IsRecordLocked">
      <summary>
        <para align="left">
          <font size="2">This method indicates whether a user or session has locked a specified record.</font>
        </para>
      </summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: System.Boolean</para>
        <para>
          <span class="Courier">true</span> if record is locked; otherwise, <span class="Courier">false</span>.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.IsRecordLocked(System.String)">
      <summary>
        <para align="left">This method indicates whether a user or session has locked a record specified by a string.</para>
      </summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException"> If this method fails, it throws a UniFileException. 

</exception>
      <returns>
        <para>Type: System.Boolean</para>
        <para>
          <span class="Courier">true</span> if record is locked; otherwise, <span class="Courier">false</span>.</para>
      </returns>
      <param name="aRecordIDObj">
        <para align="left">
          <font size="2">The ID of the record to be checked. If</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordIDObj</font>
          </font> is <font size="2">not specified, the value set by the</font><font size="2" face="NJADE B+ Courier,Courier"><font size="2" face="NJADE B+ Courier,Courier">RecordID</font></font><font size="2">property is used.</font></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.LockRecord(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method locks a record; it sets the type of lock specified by &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;aLockFlag&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;. Use this method to override the
current locking strategy.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aLockFlag">
        <para align="left">
          <font size="2">The token number for the lock flag value, as follows:</font>
        </para>
        <table>
          <thead>
            <tr>
              <th>
                <strong>Token Number</strong>
              </th>
              <th>
                <strong>Token</strong>
              </th>
              <th>
                <strong>Description</strong>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>1</td>
              <td>UniObjectsTokens.EXCLUSIVE_UPDATE</td>
              <td>Sets an exclusive update lock (READU).</td>
            </tr>
            <tr>
              <td>2</td>
              <td>UniObjectsTokens.SHARED_READ</td>
              <td>Sets a shared read lock (READL).</td>
            </tr>
          </tbody>
        </table>
        <para></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.LockRecord(System.String,System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method locks a record specified by a string; it sets the type of lock specified by &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;aLockFlag&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;. Use this method
to override the current locking strategy. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordID">
        <para align="left">
          <font size="2">A string specifying the record ID of a record to be locked.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify <font size="3">a</font></font>
          <font size="2">
            <font size="2">record ID, the record is the one set
previously by the</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
            </font>
            <font size="2">property.</font>
          </font>
        </para>
      </param>
      <param name="aLockFlag">
        <para align="left">
          <font size="2">The token number for the lock flag value, as follows:</font>
        </para>
        <table>
          <thead>
            <tr>
              <th>
                <strong>Token Number</strong>
              </th>
              <th>
                <strong>Token</strong>
              </th>
              <th>
                <strong>Description</strong>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>1</td>
              <td>UniObjectsTokens.EXCLUSIVE_UPDATE</td>
              <td>Sets an exclusive update lock (READU).</td>
            </tr>
            <tr>
              <td>2</td>
              <td>UniObjectsTokens.SHARED_READ</td>
              <td>Sets a shared read lock (READL).</td>
            </tr>
          </tbody>
        </table>
        <para></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.LockRecord(U2.Data.Client.UO.UniDataSet,System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method locks the records contained in a dataset; it sets the type of lock specified by &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;aLockFlag&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;. Use this method
to override the current locking strategy. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aDataSet">
        <para align="left">
          <font size="2">A dataset containing the records to be locked.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font> a dataset <font size="2"><font size="2">, the record is the one set previously by
the</font><font size="2" face="NJADE B+ Courier,Courier"><font size="2" face="NJADE B+ Courier,Courier">RecordID</font></font><font size="2">property.</font></font></para>
      </param>
      <param name="aLockFlag">
        <para align="left">
          <font size="2">The token number for the lock flag value, as follows:</font>
        </para>
        <table>
          <thead>
            <tr>
              <th>
                <strong>Token Number</strong>
              </th>
              <th>
                <strong>Token</strong>
              </th>
              <th>
                <strong>Description</strong>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>1</td>
              <td>UniObjectsTokens.EXCLUSIVE_UPDATE</td>
              <td>Sets an exclusive update lock (READU).</td>
            </tr>
            <tr>
              <td>2</td>
              <td>UniObjectsTokens.SHARED_READ</td>
              <td>Sets a shared read lock (READL).</td>
            </tr>
          </tbody>
        </table>
        <para></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.Read">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads a database record and returns the data as a &lt;SPAN class=Courier&gt;UniDynArray&lt;/FONT&gt;
&lt;/SPAN&gt;&lt;FONT size=2&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Data as a <font size="2"><span class="Courier">UniDynArray</span></font> object <font size="2">.</font></para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.Read(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads a database record specified by a string, and returns the data as a &lt;SPAN
class=Courier&gt;UniDynArray &lt;/SPAN&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>
          <font size="2">Data as a <span class="Courier">UniDynArray</span>.</font>
        </para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2">A string specifying the record ID of the record to be read.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify the <span class="Courier">aRecordID</span> parameter,</font>
          <font size="2">the record ID is the one set
previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font> property
<font size="2">.</font></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadField(System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads a field value from a database record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The field value from a database record, as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="aFieldNumber">
        <para align="left">
          <font size="2">The number of the field to read. Specify field 0 (the record ID) to check if a record exists.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadField(System.String,System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads a field value from a database record specified by a string.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The field value from a database record, as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record whose field value you want to read.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNumber">
        <para align="left">
          <font size="2">The number of the field to read. Specify field 0 (the record ID) to check if a record exists.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadFields(System.Int32[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads a specified array of fields from a UniData or UniVerse record.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Data from the fields, as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="aFieldNumberSet">
        <para align="left">
          <font size="2">The array of field numbers to be read.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadFields(System.String,System.Int32[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads a specified array of fields from a UniData or UniVerse record specified by record
ID.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Data from specified fields, as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record whose field values are to be read.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNumberSet">
        <para align="left">
          <font size="2">The array of field numbers to be read.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadNamedField(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads the value of a named field from a UniData or UniVerse record. It does this by extracting the field
number from the dictionary associated with this file, and then performing a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;ReadField &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;on that field.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Data from the named field, as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="aFieldName">
        <para align="left">
          <font size="2">The name of the field to be read. The field must be defined by a D-descriptor or an I-descriptor in the file
dictionary.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadNamedField(System.String,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads the value of a named field from a UniData or UniVerse record specified by record ID. It does this by
extracting the field number from the dictionary associated with this file, and then performing a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;ReadField &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;on that field.
&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Data from the named field, as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record containing the field to be read.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldName">
        <para align="left">
          <font size="2">The name of the field to be read. The field must be defined by a D-descriptor or an I-descriptor in the file
dictionary.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadNamedFields(System.String[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads an array of fields identified by the named fields in &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;pFieldNames&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;. It does this by extracting the
field numbers from the dictionary associated with this file, and then performing a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;ReadField&lt;/FONT&gt;&lt;/FONT&gt; on &lt;FONT size=2&gt;that field.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys
ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Data from the named fields, as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="pFieldNames">
        <para align="left">
          <font size="2">The name of the field to be read. The field must be defined by a D-descriptor or an I-descriptor in the file
dictionary</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadNamedFields(System.String,System.String[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads an array of fields identified by the named fields in &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;pFieldNames&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;from a UniData or UniVerse
record specified by record ID.&lt;/FONT&gt; &lt;FONT size=2&gt;It does this by extracting the field numbers from the dictionary associated with this file, and
then performing a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;ReadField
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;on that field.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Data from the named fields, as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="pRecordID">
        <para align="left">
          <font size="2">The record ID of the record containing the field to be read. If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by
the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="pFieldNames">
        <para align="left">
          <font size="2">The name of the field to be read. The field must be defined by a D-descriptor or an I-descriptor in the file
dictionary.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadRecords(System.String[],System.String[],System.Int32)">
      <summary>
        <para>This method reads a set of records from a UniData or UniVerse file. The records are passed in using a specified list of field names and record IDs.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDataSet</para>
        <para>The UniDataSet representing the data read.</para>
      </returns>
      <param name="aRecordIDSet">
        <para>Type: System.String[]</para>
        <para>A list of the record IDs from which this file will read.</para>
      </param>
      <param name="aFieldNameSet">
        <para>Type: System.String[]</para>
        <para>A list of field names.</para>
      </param>
      <param name="optionalRecordSeparator">
        <para>Type: System.Int32</para>
        <para>This is an optional parameter. If this parameter is greater than 0, then it will use embedded record separator, instead of Marks such as (þ) or 254. By
default, this value is set to <strong>0</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadRecords(System.String[],System.Int32[],System.Int32)">
      <summary>
        <para>This method reads a set of records from a UniData or UniVerse file. The records are passed in using an array of specified record IDs.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDataSet</para>
        <para>The UniDataSet representing the data read.</para>
      </returns>
      <param name="aRecordIDSet">
        <para>Type: System.String[]</para>
        <para>A list of the record IDs from which this file will read.</para>
      </param>
      <param name="aFieldNameSet">
        <para>Type: System.Int32</para>
        <para>An array of field names.</para>
      </param>
      <param name="optionalRecordSeparator">
        <para>Type: System.Int32</para>
        <para>This is an optional parameter. If this parameter is greater than 0, then it will use embedded record separator, instead of Marks such as (þ) or 254. By
default, this value is set to <strong>0</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadRecords(System.String[],System.Int32)">
      <summary>
        <para>This method reads a set of records from a UniData or UniVerse file. The records are passed in using an array of record IDs specified by a string.</para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client<br /><b>Assembly</b>: U2.Data.Client (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDataSet</para>
        <para>The UniDataSet representing the data read.</para>
      </returns>
      <param name="aRecordIDSet">
        <para>Type: System.String[]</para>
        <para>A list of the record IDs from which this file will read.</para>
      </param>
      <param name="optionalRecordSeparator">
        <para>Type: System.Int32</para>
        <para>This is an optional parameter. If this parameter is greater than 0, then it will use embedded record separator, instead of Marks such as (þ) or 254. By
default, this value is set to <strong>0</strong>.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadRecords2(System.String[],System.String[],System.Int32)">
      <summary>This method reads a set of records from a UniData or UniVerse file. The records are passed in using a specified list of field names and record IDs. Internally
it calls ReadRecords(String[],String[],Int32 ) for each record ID. It helps to read record if it is separated by other than default record separator @IM.

<para><b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para></summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDataSet</para>
        <para>The UniDataSet representing the data read.</para>
      </returns>
      <param name="aRecordIDSet">
        <para>Type: System. String[]</para>
        <para>A list of the record IDs from which this file will read.</para>
      </param>
      <param name="aFieldNameSet">
        <para>Type: System.String[]</para>
        <para>A list of field names.</para>
      </param>
      <param name="optionalRecordSeparator">
        <para>Type: System.Int31</para>
        <para>This is an optional parameter. If this parameter is greater than 0, then it will use embedded record separators, instead of Marks such as (þ) or 254. By
default, this value is set to 0.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadRecords2(System.String[],System.Int32[],System.Int32)">
      <summary>This method reads a set of records from a UniData or UniVerse file. The records are passed in using an array of specified record IDs. Internally it calls
ReadRecords(String[],Int32[],Int32 ) for each record ID. It helps to read record if it is separated by other than default record separator @IM.

<para><b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para></summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDataSet</para>
        <para>The UniDataSet representing the data read.</para>
      </returns>
      <param name="aRecordIDSet">
        <para>Type: System.String[]</para>
        <para>A list of the record IDs from which this file will read.</para>
      </param>
      <param name="aFieldNameSet">
        <para>Type: System.Int32</para>
        <para>An array of field names.</para>
      </param>
      <param name="optionalRecordSeparator">
        <para>Type: System.Int31</para>
        <para>This is an optional parameter. If this parameter is greater than 0, then it will use embedded record separators, instead of Marks such as (þ) or 254. By
default, this value is set to 0.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.ReadRecords2(System.String[],System.Int32)">
      <summary>This method reads a set of records from a UniData or UniVerse file. The records are passed in using an array of record IDs specified by a string. Internally it
calls ReadRecords(String[],Int32 ) for each record ID. It helps to read record if it is separated by other than default record separator @IM.

<para><b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para></summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method failts, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDataSet</para>
        <para>The UniDataSet representing the data read.</para>
      </returns>
      <param name="aRecordIDSet">
        <para>Type: System.String[]</para>
        <para>A list of the record IDs from which this file will read.</para>
      </param>
      <param name="optionalRecordSeparator">
        <para>Type: System.Int31</para>
        <para>This is an optional parameter. If this parameter is greater than 0, then it will use embedded record separators, instead of Marks such as (þ) or 254. By
default, this value is set to 0.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.UnlockRecord">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method unlocks a record (or records).&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.UnlockRecord(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method unlocks a specified&amp;nbsp;record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to be unlocked.</font>
        </para>
        <para align="left">
          <font size="2">
            <font size="2">If you do not specify</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
            </font>
            <font size="2">, the record ID is the one set previously by the</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
            </font>
            <font size="2">property.</font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.UnlockRecord(System.String[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method unlocks a set of records.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordIDSet">
        <para align="left">
          <font size="2">A set of record IDs to be unlocked.</font>
        </para>
        <para align="left">
          <font size="2">
            <font size="2">If you do not specify</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">aRecordIDSet</font>
            </font>
            <font size="2">, the record ID is the one set previously by the</font>
            <font size="2" face="NJADE B+ Courier,Courier">
              <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
            </font>
            <font size="2">property.</font>
          </font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.Write">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to a record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.Write(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a specified value to a record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to write to.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">method.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The value to write to the record.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordData</font>
          </font>
          <font size="2">, the value to write is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">Record</font>
          </font> property <font size="2">.</font></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.Write(System.String,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a specified value to a record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record to write to.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">method.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The value to write to the record.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordData</font>
          </font>
          <font size="2">, the value to write is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">Record</font>
          </font> property <font size="2">.</font></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteField(System.String,System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a value specified by a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;to a single field in a
record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to which the data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNumber">
        <para align="left">
          <font size="2">The number of the field to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aFieldNumber</font>
          </font>
          <font size="2">, this method writes to field 1.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The field value to be written to the record.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordData</font>
          </font>
          <font size="2">, the field value to be written is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">Record</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteField(System.String,System.Int32,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a value specified by a string to a single field in a record.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to which the data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNumber">
        <para align="left">
          <font size="2">The number of the field to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aFieldNumber</font>
          </font>
          <font size="2">, this method writes to field 1.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The field value to be written to the record.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordData</font>
          </font>
          <font size="2">, the field value to be written is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">Record</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteField(System.Int32,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a value specified by a string to a single field in a record.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aFieldNumber">
        <para align="left">
          <font size="2">The number of the field to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aFieldNumber</font>
          </font>
          <font size="2">, this method writes to field 1.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The field value to be written to the record.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordData</font>
          </font>
          <font size="2">, the field value to be written is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">Record</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteField(System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a value specified by a &lt;SPAN class=Courier&gt;UniDynArray&lt;/SPAN&gt; to a single field in a
record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aFieldNumber">
        <para align="left">
          <font size="2">The number of the field to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aFieldNumber</font>
          </font>
          <font size="2">, this method writes to field 1.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The field value to be written to the record.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordData</font>
          </font>
          <font size="2">, the field value to be written is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">Record</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteField(System.String,System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to a single field in a record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to which the data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNumber">
        <para align="left">
          <font size="2">The number of the field to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aFieldNumber</font>
          </font>
          <font size="2">, this method writes to field 1.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteFields(System.Int32[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to an array of fields specified by an integer in a record.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aFieldNumberSet">
        <para align="left">
          <font size="2">The array of fields to which data is to be written.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteFields(System.String,System.Int32[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to an array of fields specified by a string&amp;nbsp;in a record.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecID">
        <para align="left">
          <font size="2">The record ID of the record to which the data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNumberSet">
        <para align="left">
          <font size="2">The array of fields to which data is to be written.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteFields(System.String,System.Int32[],U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes values specified by a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;to an array of fields
specified by an integer in a record.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecID">
        <para align="left">
          <font size="2">The record ID of the record to which the data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNumberSet">
        <para align="left">
          <font size="2">The array of fields to which data is to be written.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The array of field values to be written to the record.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordData</font>
          </font>
          <font size="2">, the field value to be written is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">Record</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteNamedField(System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;FONT size=2&gt;This method writes the value specified by a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;to a named field in a record, performing any
input conversion defined in the file dictionary for the field. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aFieldName">
        <para align="left">
          <font size="2">The name of the field to which data is to be written, as defined in the file dictionary.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The field value to be written to the record.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteNamedField(System.String,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes the value specified by a string to a named field in a record, performing any input conversion defined
in the file dictionary for the field.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aFieldName">
        <para align="left">
          <font size="2">The name of the field to which data is to be written, as defined in the file dictionary.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The field value to be written to the record.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteNamedField(System.String,System.String,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;FONT size=2&gt;This method writes the value specified by a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;to a named field in a record, performing any
input conversion defined in the file dictionary for the field. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecordID">
        <para align="left">
          <font size="2">The record ID of the record to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldName">
        <para align="left">
          <font size="2">The name of the field to which data is to be written, as defined in the file dictionary.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The record ID of the record to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteNamedFields(System.String[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to a set of named fields specified by a string&amp;nbsp;in a record, performing any input
conversion defined in the file dictionary for the field.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aFieldNameSet">
        <para align="left">
          <font size="2">A set of field names to which data is to be written, as defined in the file dictionary.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteNamedFields(System.String,System.String[])">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to a set of named fields specified by a string&amp;nbsp;in a record specified by a string,
performing any input conversion defined in the file dictionary for the field.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecID">
        <para align="left">
          <font size="2">The record ID of the record to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNameSet">
        <para align="left">
          <font size="2">A set of field names to which data is to be written, as defined in the file dictionary.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteNamedFields(System.String,System.String[],U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes an array of field values specified by a UniDynArray to a set of named fields specified by a
string&amp;nbsp;in a record specified by a string, performing any input conversion defined in the file dictionary for the field.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aRecID">
        <para align="left">
          <font size="2">The record ID of the record to which data is to be written.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecID</font>
          </font>
          <font size="2">, the record ID is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
      <param name="aFieldNameSet">
        <para align="left">
          <font size="2">A set of field names to which data is to be written, as defined in the file dictionary.</font>
        </para>
      </param>
      <param name="aRecordData">
        <para align="left">
          <font size="2">The array of field values to be written to the record.</font>
        </para>
        <para align="left">
          <font size="2">If you do not specify</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRecordData</font>
          </font>
          <font size="2">, the field value to be written is the one set previously by the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">Record</font>
          </font>
          <font size="2">property.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteRecords(U2.Data.Client.UO.UniDataSet)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to records in a dataset in a UniData or UniVerse file.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aDataSet">
        <para align="left">
          <font size="2">A dataset containing the records to which data is to be written.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteRecords(System.String[],U2.Data.Client.UO.UniDataSet)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to a list of records&amp;nbsp;specified by a string&amp;nbsp;in a dataset&amp;nbsp;in a UniData
or UniVerse file.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aFieldNameSet">
        <para align="left">
          <font size="2">A list of record IDs to which data is to be written.</font>
        </para>
      </param>
      <param name="aDataSet">
        <para align="left">
          <font size="2">A dataset containing the records to which data is to be written.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniFile.WriteRecords(System.Int32[],U2.Data.Client.UO.UniDataSet)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes data to an array of fields in records contained in a dataset in a UniData or UniVerse
file.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <param name="aFieldNumberSet">
        <para align="left">
          <font size="2">The array of fields to which data is to be written.</font>
        </para>
      </param>
      <param name="aDataSet">
        <para align="left">
          <font size="2">A dataset containing the records to which data is to be written.</font>
        </para>
      </param>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.EncryptionType">
      <summary>This property gets or sets the type of encryption to use for all operations on &lt;SPAN class=Courier&gt;UniFile&lt;/SPAN&gt; objects. &lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.FileName">
      <summary>&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This property returns the name of the database file supplied by the &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniSession.CreateUniFile()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;
method.&lt;/P&gt;&lt;/FONT&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.FileStatus">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the status code of the last method performed on this object. Refer to each method for a description
of these status value.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.FileType">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns the file type of the current file.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.IsFileOpen">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property checks to see if a file is open.&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.Record">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the contents of the record that was last read as a &lt;SPAN
class=Courier&gt;UniDynArray&lt;/SPAN&gt;. It is updated whenever a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE
B+ Courier,Courier"&gt;Read()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;, &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;ReadField()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;, or &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;ReadNamedField() &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;method is called.
&lt;/P&gt; &lt;P&gt;This property also sets the data portion of the record, primarily to be used for subsequent &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;Write &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;methods.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.RecordID">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the record ID of the record that was last read. It is updated whenever a &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;Read()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;,
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;ReadField()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;, or &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;ReadNamedField() &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;method is called.&lt;/FONT&gt;&lt;/P&gt;&lt;FONT
size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This property also sets the record ID of the record to be read.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this property fails, it throws a UniFileException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.RecordString">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the contents of the record that was last read, as a string. It is updated every time a
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;Read()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=2&gt;, &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;ReadField()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;, or &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;ReadNamedField()&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;is performed.&lt;/FONT&gt;&lt;/P&gt; &lt;P
align=left&gt;&lt;FONT size=2&gt;This property also sets the data portion of the record, primarily to be used for subsequent &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;Write &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=2&gt;methods.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.UniFileBlockingStrategy">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the UniFile blocking strategy, which is the action taken when a record or file lock blocks a
database file operation.&lt;/P&gt; &lt;P align=left&gt;The initial value is inherited from the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniSession.BlockingStrategy &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;property. If
you do not specify a value with the UniFile&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;BlockingStrategy &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;property, the value of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniSession.BlockingStrategy &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;property is
used.&lt;/P&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this property fails, it throws a UniFileException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.UniFileLockStrategy">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the lock strategy, which controls the manner in which locks are set during
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;Read&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT
size=2&gt;operations on a file.&lt;/P&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this property fails, it throws a UniFileException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniFile.UniFileReleaseStrategy">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the UniFile release strategy for releasing locks set by the &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;read()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;,
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;readField()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;, and &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;readNamedField()&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;methods and calls to the &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;LockRecord()&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;method.
&lt;/P&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this property fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniNLSLocale.SetLocaleName(System.String,System.Int32)">
      <summary>This method sets the locale settings specified by a string for a specified category.&amp;nbsp; &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
      <param name="aName">
        <para>The string representing the new locale settings.</para>
      </param>
      <param name="anIndex">An integer representing the category for which the locale is to be set.<br /></param>
    </member>
    <member name="M:U2.Data.Client.UO.UniNLSLocale.SetLocaleName(U2.Data.Client.UO.UniDynArray,System.Int32)">
      <summary>&lt;P&gt;This method sets the locale settings specified by a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;for a specified category.
&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
      <param name="aName">
        <para>A <span class="Courier">UniDynArray</span> representing the new locale settings.</para>
      </param>
      <param name="anIndex">
        <para>An integer representing the category for which the locale is to be set.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniNLSLocale.SetLocaleName(System.String)">
      <summary>&lt;P&gt;This method sets the locale settings specified by a string&amp;nbsp;for all categories. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
      <param name="aName">Sets each category to the specified string value.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniNLSLocale.SetLocaleName(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P&gt;This method sets the locale settings specified by a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;for all categories.
&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
      <param name="localeName">Sets the UniDynArray representing the new locale settings.</param>
    </member>
    <member name="P:U2.Data.Client.UO.UniNLSLocale.ClientNames">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;of the locale names requested by the client.
This is the locale specification as the client sees it.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniNLSLocale.ServerNames">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns a UniDynArray of locale names as reported by the server. These can differ from the names returned
by the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;ClientNames
&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;property because of a difference between client and server naming styles.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniNLSMap.GetUniMarks">
      <summary>
        <para>This method gets marks from the server.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Byte[ ]</para>
        <para>A byte array representing the server-side marks.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniNLSMap.SetName(System.String)">
      <summary>This method sets the map to use on the server. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniNLSMapException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniNLSMapException">If this method fails, it throws a UniNLSMapException.</exception>
      <param name="pName">The name of the requested map. <font size="2">When the name has been changed successfully, the</font><font size="2" face="NJADE B+ Courier,Courier"><font size="2" face="NJADE B+ Courier,Courier">ServerMapName</font></font><font size="2">property and</font><font size="2" face="NJADE B+ Courier,Courier"><font size="2" face="NJADE B+ Courier,Courier">GetClientMapName()</font></font><font size="2">method return the corresponding value.</font></param>
    </member>
    <member name="P:U2.Data.Client.UO.UniNLSMap.ClientMapName">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns the name of the map requested by the client. On the server, it is mapped through the
NLS.CLIENT.MAPS file to the name reported by the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;ServerMapName &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;property.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniNLSMap.ServerMapName">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns the name of the map as reported by the server. This is the name that is loaded into the server
shared memory segment. This value may be different from the name requested via the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;GetClientMapName &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;method. because of client-server NLS map name
mapping.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniNLSMapException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniNLSMapException">If this property fails, it throws a UniNLSMapException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniRecord.#ctor">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This constructor creates an instance of the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;UniRecord &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;class with no data in it.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniRecord.ToString">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniRecord &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object as a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;string &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object. The record ID and the record’s data value are combined,
separated by an item mark.&lt;/P&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: <span>U2.Data.Client.UO.UniRecord</span></para>
        <para>
          <font size="2">The <font face="NJADE B+ Courier,Courier"><font face="NJADE B+ Courier,Courier">UniRecord</font></font> object as a <font face="NJADE B+ Courier,Courier"><font face="NJADE B+ Courier,Courier">string</font></font> object.</font>
        </para>
      </returns>
    </member>
    <member name="P:U2.Data.Client.UO.UniRecord.Record">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;UniRecord &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object’s data value as a &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDynArray &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=2&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniRecord.RecordID">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;UniRecord &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object’s record ID as a
string&amp;nbsp;&amp;nbsp;&lt;/FONT&gt;&lt;FONT size=2&gt;object.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniRecord.RecordReturnValue">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns an integer representing the&amp;nbsp;&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniRecord &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object's return
value.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniRecord.RecordStatus">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets an integer representing the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniRecord &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object’s
status.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.ClearList">
      <summary>This method clears a select list, emptying the contents and preparing for a new select list to be generated. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.GetList(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method activates the named select list from the &amp;amp;SAVEDLISTS&amp;amp; file on the
server.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="aListName">
        <para align="left">
          <font size="2">A string representing the name of the list to be activated.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.Next">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the next record ID in the select list. If the list is exhausted, &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;Next()&lt;/FONT&gt;&lt;/FONT&gt; returns &lt;FONT size=2&gt;a
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;null&lt;/FONT&gt;&lt;/FONT&gt; value&lt;FONT
size=2&gt;, and the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;LastRecordRead&lt;/FONT&gt;&lt;/FONT&gt; property &lt;FONT size=2&gt;returns &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;true&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <returns>
        <para>Type: System.String</para>
        <para>The next record ID in the select list.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.ReadList">
      <summary>&lt;FONT size=2&gt; &lt;P align=left&gt;&lt;FONT size=2&gt;This method reads the entire contents of a select list and returns it all at
once.&lt;/P&gt;&lt;/FONT&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.
</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>The contents of a select list, as a dynamic array.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.ReadListAsStringArray">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads the entire contents of a select list and returns it as a string array.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <returns>
        <para>Type: System.String</para>
        <para>The contents of the select list.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.SaveList(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method saves the currently active select list in the &amp;amp;SAVEDLISTS&amp;amp; file with the specified name on
the server.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="aListName">
        <para align="left">
          <font size="2">The file name of the list to be saved.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.FormList(System.String)">
      <summary>This method creates a select list from a delimited string containing a list of record IDs. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="pRecID">A delimited string containing a list of record IDs, separated by field marks ( <span class="Courier">UniTokens.AT_FM</span>).</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.FormList(System.String[])">
      <summary>This method creates a select list from a string array of record IDs. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="pRecIDSet">
        <para align="left">
          <font size="2">A string array of record IDs.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.Select(U2.Data.Client.UO.UniFile)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method creates a select list by selecting the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniFile&lt;/FONT&gt;&lt;/FONT&gt; object &lt;FONT size=2&gt;and generating a select list
of all record IDs from that database file. The new select list overwrites any previous select list and resets the select list pointer to the first record in
the list.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="uniFile">
        <para align="left">
          <font size="2">The</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniFile</font>
          </font>
          <font size="2">object to be selected.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.Select(U2.Data.Client.UO.UniDictionary)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method creates a select list by selecting the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDictionary&lt;/FONT&gt;&lt;/FONT&gt; object &lt;FONT size=2&gt;and generating a
select list of all record IDs from that database file. The new select list overwrites any previous select list and resets the select list pointer to the first
record in the list.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="uniFile">
        <para align="left">
          <font size="2">The</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniFile</font>
          </font>
          <font size="2">object to be selected.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.SelectAlternateKey(U2.Data.Client.UO.UniFile,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method creates a select list from a specified &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniFile &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;object from values in a specified
secondary index.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="uniFile">
        <para align="left">
          <font size="2">The</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniFile</font>
          </font>
object <font size="2">to be selected.</font></para>
      </param>
      <param name="aIndexName">
        <para align="left">
          <font size="2">The name of a secondary index as specified in a database CREATE.INDEX command.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.SelectAlternateKey(U2.Data.Client.UO.UniDictionary,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method creates a select list from a specified&lt;/FONT&gt; &lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniDictionary&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;or&lt;/FONT&gt; &lt;FONT
size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniFile&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;object from
values in a specified secondary index.&lt;/FONT&gt;&lt;/P&gt;&lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block" name="source"&gt;&lt;FONT
size=2&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/FONT&gt;&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="unid">
        <para align="left">
          <font size="2">The</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniDictionary</font>
          </font>
          <font size="2">object to be selected.</font>
        </para>
      </param>
      <param name="aIndexName">
        <para align="left">
          <font size="2">The name of a secondary index as specified in a database CREATE.INDEX command.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.SelectMatchingAK(U2.Data.Client.UO.UniFile,System.String,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method creates a select list from a specified UniData or UniVerse file from record IDs whose value matches that in
a named secondary index field. The select list contains record IDs.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="uniFile">
        <para align="left">
          <font size="2">The name of the UniData or UniVerse file for which the select list is to be created.</font>
        </para>
      </param>
      <param name="aIndexName">
        <para align="left">
          <font size="2">The name of a secondary index as specified in a database CREATE.INDEX command.</font>
        </para>
        <para align="left">
          <font size="2">If the index you specify does not exist, an empty select list is returned and the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">LastRecordRead</font>
          </font> property <font size="2">returns</font><font size="2" face="NJADE B+ Courier,Courier"><font size="2" face="NJADE B+ Courier,Courier">true</font></font><font size="2">.</font></para>
      </param>
      <param name="aIndexValue">
        <para align="left">
          <font size="2">A value from the secondary index. Records are selected when</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aIndexValue</font>
          </font> matches <font size="2">the value of the indexed field. It is equivalent to the following database
SELECT command:</font></para>
        <para>
          <font size="2">SELECT</font>
          <i>
            <font size="2" face="NJADC P+ Palatino,Palatino">
              <font size="2" face="NJADC P+ Palatino,Palatino">filename</font>
            </font>
          </i>
          <font size="2">WITH</font>
          <i>
            <font size="2" face="NJADC P+ Palatino,Palatino">
              <font size="2" face="NJADC P+ Palatino,Palatino">indexname</font>
            </font>
          </i>
          <font size="2">=</font>
          <i>
            <font size="2" face="NJADC P+ Palatino,Palatino">
              <font size="2" face="NJADC P+ Palatino,Palatino">indexvalue</font>
            </font>
          </i>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSelectList.SelectMatchingAK(U2.Data.Client.UO.UniDictionary,System.String,System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method creates a select list from a specified UniData or UniVerse dictionary file from record IDs whose value
matches that in a named secondary index field. The select list contains record IDs.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSelectListException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSelectListException">If this method fails, it throws a UniSelectListException.</exception>
      <param name="unid">
        <para align="left">
          <font size="2">The name of the UniData or UniVerse dictionary file for which the select list is to be created.</font>
        </para>
      </param>
      <param name="aIndexName">
        <para align="left">
          <font size="2">The name of a secondary index as specified in a database CREATE.INDEX command.</font>
        </para>
        <para align="left">
          <font size="2">If the index you specify does not exist, an empty select list is returned and the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">LastRecordRead</font>
          </font>
          <font size="2">property returns</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">true</font>
          </font>
          <font size="2">.</font>
        </para>
      </param>
      <param name="aIndexValue">
        <para align="left">
          <font size="2">A value from the secondary index. Records are selected when</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aIndexValue</font>
          </font> matches <font size="2">the value of the indexed field. It is equivalent to the following database
SELECT command:</font></para>
        <para>
          <font size="2">SELECT</font>
          <i>
            <font size="2" face="NJADC P+ Palatino,Palatino">
              <font size="2" face="NJADC P+ Palatino,Palatino">filename</font>
            </font>
          </i>
          <font size="2">WITH</font>
          <i>
            <font size="2" face="NJADC P+ Palatino,Palatino">
              <font size="2" face="NJADC P+ Palatino,Palatino">indexname</font>
            </font>
          </i>
          <font size="2">=</font>
          <i>
            <font size="2" face="NJADC P+ Palatino,Palatino">
              <font size="2" face="NJADC P+ Palatino,Palatino">indexvalue</font>
            </font>
          </i>
        </para>
      </param>
    </member>
    <member name="P:U2.Data.Client.UO.UniSelectList.LastRecordRead">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets the status of the last record read.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.Close">
      <summary>
        <para align="left">
          <font size="2">This method closes a sequential file.</font>
        </para>
      </summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.FileSeek(System.Int32,System.Int32)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method moves the sequential file pointer by an offset position specified in bytes relative to the current position,
to the beginning of the file, or to the end of the file.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
      <param name="aRelPos">
        <para align="left">
          <font size="2">The token number for the pointer's relative position in a file, as follows <font size="2">:</font></font>
        </para>
        <table>
          <thead>
            <tr>
              <th>
                <strong>Token Number</strong>
              </th>
              <th>
                <strong>Token</strong>
              </th>
              <th>
                <strong>Description</strong>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>0</td>
              <td>UniObjectsTokens.UniT_START</td>
              <td>The start of the file.</td>
            </tr>
            <tr>
              <td>1</td>
              <td>UniObjectsTokens.UniT_CURR</td>
              <td>The current position.</td>
            </tr>
            <tr>
              <td>2</td>
              <td>UniObjectsTokens.UniT_END</td>
              <td>The end of the file.</td>
            </tr>
          </tbody>
        </table>
        <para></para>
      </param>
      <param name="aOffset">
        <para align="left">
          <font size="2">The number of bytes before or after</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRelPos</font>
          </font>
          <font size="2">. A negative offset moves the pointer to a position before</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">aRelPos</font>
          </font>
          <font size="2">.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.Open">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method opens a server-side file for sequential processing, or creates a file if the CreateFlag is set and a file
does not exist.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.ReadBlk">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads a block of data from a sequential file. The size of the data block is specified by the
&lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;ReadSize &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=2&gt;property.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>A block of data.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.ReadLine">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method reads successive lines of data from the current position in a sequential file. The lines must be delimited
by an end-of-line character such as a carriage return.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Lines of data.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.WriteEOF">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes an end-of-file marker at the current position in the sequential file. This allows a file to be
truncated at a specified point when used with the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;FileSeek()&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;method.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.WriteBlk(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a block of data specified by a string at the current position in a sequential
file.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
      <param name="aString">
        <para align="left">
          <font size="2">The block of data to be written to the file.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.WriteBlk(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a block of data specified by a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;at the current
position in a sequential file.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include
Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
      <param name="aString">
        <para align="left">
          <font size="2">The block of data to be written to the file.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.WriteLine(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a line of data specified by a string at the current position in the sequential
file.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
      <param name="aString">
        <para align="left">
          <font size="2">A line of data to be written to the file.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSequentialFile.WriteLine(U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method writes a line of data&amp;nbsp;specified by a &lt;SPAN
class=Courier&gt;UniDynArray&lt;/FONT&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;FONT size=2&gt;at the current position in the sequential file.&lt;/P&gt;&lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this method fails, it throws a UniSequentialFileException.</exception>
      <param name="aString">
        <para align="left">
          <font size="2">A line of data to be written to the file.</font>
        </para>
      </param>
    </member>
    <member name="P:U2.Data.Client.UO.UniSequentialFile.EncryptionType">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the type of encryption to use for all operations on &lt;/FONT&gt;&lt;FONT size=2 face="NJADE
B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniSequentialFile&lt;/FONT&gt;&lt;/FONT&gt; objects&lt;FONT
size=2&gt;.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSequentialFile.IsFileOpen">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property checks to see if a file is open. It returns &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;true &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;if file is open, or false if the file
is closed.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSequentialFile.ReadSize">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the number of bytes to be read for each successive call to the &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;ReadBlk()&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT
size=2&gt;method.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSequentialFile.TimeOut">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the length of time before the session times out during &lt;/FONT&gt;&lt;FONT size=2
face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;ReadBlk()&lt;/FONT&gt;&lt;/FONT&gt; &lt;FONT size=2&gt;operations. The
remote procedure call (UniRPC) utility uses the timeout setting.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSequentialFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSequentialFileException">If this property fails, it throws a UniSequentialFileException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSequentialFile.UniSequentialStatus">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets the status code of the last method performed on a &lt;SPAN class=Courier&gt;UniSequentialFile
&lt;/SPAN&gt;object. Refer to each method for a description of these status values.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateSequentialFile(System.String,System.String,System.Boolean)">
      <summary>This method creates a file for sequential processing and returns a UniSequentialFile object. &lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.

</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniSequentialFile</para>
        <para>A <span class="Courier">UniSequentialFile</span></para>
      </returns>
      <param name="pFileName">The name of an existing type 1 or type 19 file.</param>
      <param name="pRecordID">A record in the file. If the record does not exist and if <span class="Courier">pCreateFlag</span> is true, this method creates a record.</param>
      <param name="pCreateFlag">A flag specifying that the record should or should not be created if it does not exist. If <span class="Courier">pCreateFlag</span> is true, this method
creates a record.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateTaskLock(System.Int32)">
      <summary>This method locks one of the database’s 64 task locks. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <param name="aLockNum">
        <para align="left">
          <font size="2">The number, 0 through 63, of the task lock to be set.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniCommand">
      <summary>
        <para>This method creates and returns a UniCommand object for the session.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniCommand</para>
        <para>A <span class="Courier">UniCommand</span> object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniDictionary(System.String)">
      <summary>
        <para>This method opens an existing UniData or UniVerse dictionary file and returns a <span class="Courier">UniDictionary</span> object, allowing access to the
file.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDictionary</para>
        <para>A <span class="Courier">UniDictionary</span> object.</para>
      </returns>
      <param name="pFileName">The name of the UniData or UniVerse dictionary file to be opened.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniFile(System.String)">
      <summary>
        <para>This method opens an existing UniData or UniVerse database file and creates and returns a <span class="Courier">UniFile</span> object, allowing access to
the file.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniFile</para>
        <para>A <span class="Courier">UniFile</span> object.</para>
      </returns>
      <param name="pFileName">The name of the database file to open.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniNLSLocale">
      <summary>
        <para>If NLS is enabled on the server machine, this method returns an active UniNLSLocale object, which can then be used to manipulate server-side NLS locale
settings. Use the NLSEnabled property to determine if NLS is enabled.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniNLSLocale</para>
        <para>A <span class="Courier">UniNLSLocale</span> object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniNLSMap">
      <summary>
        <para>If NLS is enabled on the server machine, this method returns an active UniNLSMap object, which can then be used to manipulate server-side NLS map settings.
The UniNLSMap object represents the state of the server-side NLS map. Use the NLSEnabled property to determine if NLS is enabled.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniNLSMap</para>
        <para>A <span class="Courier">UniNLSMap</span> object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniSelectList(System.Int32)">
      <summary>
        <para>The number, 0 through 10, of the select list to use. This method creates and returns a UniSelectList object representing one of the 11 UniVerse select
lists.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniSelectList</para>
        <para>A <span class="Courier">UniSelectList</span> object.</para>
      </returns>
      <param name="aSelectListNumber">The number, 0 through 10, of the select list to use.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniSubroutine(System.String,System.Int32)">
      <summary>
        <para>This method creates and returns a <span class="Courier">UniSubroutine</span> object.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniSubroutine</para>
        <para>A <span class="Courier">UniSubroutine</span> object.</para>
      </returns>
      <param name="aSubName">The name of the subroutine to be executed on the server.</param>
      <param name="aNumArgs">The number of arguments that the server subroutine uses.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniTransaction">
      <summary>This method creates and returns a UniTransaction object, which allows transaction control on the session and modification of the session’s transactional
behavior.</summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniTransaction</para>
        <para>A <span class="Courier">UniTransaction</span> object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniXML">
      <summary>This method creates and returns a UniXML object for the session.</summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniXML</para>
        <para>A <span class="Courier">UniXML</span> object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.Encrypt(System.String)">
      <summary>
        <para>This method is used to encrypt a specified string into an internal format that is understood by the server.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.String</para>
        <para>A string object.</para>
      </returns>
      <param name="aString">The string to be encrypted.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.GetAtVariable(System.Int32)">
      <summary>
        <para>This method returns the current value of the specified @variable.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>A <span class="Courier">UniDynArray</span> object.</para>
      </returns>
      <param name="aTokenVal">
        <para>The token number for the @variable whose value is to be retrieved, as follows:</para>
        <para>Token Number Token</para>
        <table>
          <thead>
            <tr>
              <th>Token Number</th>
              <th>Token</th>
              <th>BASIC @ Variables</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>1</td>
              <td width="232">UniObjectsTokens.AT_LOGNAME</td>
              <td>@LONGNAME</td>
            </tr>
            <tr>
              <td>2</td>
              <td width="232">UniObjectsTokens.AT_PATH</td>
              <td>@PATH</td>
            </tr>
            <tr>
              <td>3</td>
              <td width="232">UniObjectsTokens.AT_USERNO</td>
              <td>@USERNO</td>
            </tr>
            <tr>
              <td>4</td>
              <td width="232">UniObjectsTokens.AT_WHO</td>
              <td>@WHO</td>
            </tr>
            <tr>
              <td>5</td>
              <td width="232">UniObjectsTokens.AT_TRANSACTION</td>
              <td>@TRANSACTION</td>
            </tr>
            <tr>
              <td>6</td>
              <td width="232">UniObjectsTokens.AT_DATA_PENDING</td>
              <td>@DATA.PENDING</td>
            </tr>
            <tr>
              <td>7</td>
              <td width="232">UniObjectsTokens.AT_USER_RETURN_CODE</td>
              <td>@USER.RETURN.CODE</td>
            </tr>
            <tr>
              <td>8</td>
              <td width="232">UniObjectsTokens.AT_SYSTEM_RETURN_CODE</td>
              <td>@SYSTEM.RETURN.CODE</td>
            </tr>
            <tr>
              <td>9</td>
              <td width="232">UniObjectsTokens.AT_NULL_STR</td>
              <td>@NULL.STR</td>
            </tr>
            <tr>
              <td>10</td>
              <td width="232">UniObjectsTokens.AT_SCHEMA</td>
              <td>@SCHEMA</td>
            </tr>
          </tbody>
        </table>
        <para></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.GetMarkCharacter(System.Int32)">
      <summary>
        <para>This method returns the byte of the specified system delimiter mark. Call this method, especially with an NLS-enabled server, to determine the proper values
for each system delimiter.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Byte[ ]</para>
        <para>The byte of the specified system delimiter mark.</para>
      </returns>
      <param name="aMarkChar">
        <para>The token number for the system delimiter, as follows:</para>
        <list type="table">
          <listheader>
            <term>
              <strong>Token Number</strong>
            </term>
            <description>
              <strong>Description</strong>
            </description>
          </listheader>
          <item>
            <term>0</term>
            <description>Item mark</description>
          </item>
          <item>
            <term>1</term>
            <description>Field mark</description>
          </item>
          <item>
            <term>2</term>
            <description>Value mark</description>
          </item>
          <item>
            <term>3</term>
            <description>Subvalue mark</description>
          </item>
          <item>
            <term>4</term>
            <description>Text mark</description>
          </item>
          <item>
            <term>5</term>
            <description>SQL null mark</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.Iconv(System.String,System.String)">
      <summary>
        <para>This method converts an input string to an internal storage format defined by the conversion code. After using Iconv, you can use the Status property to
determine the status of this method.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: System.String</para>
        <para>A string.</para>
      </returns>
      <param name="aString">The string to convert.</param>
      <param name="aConvCode">Any BASIC ICONV conversion code.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.Oconv(System.String,System.String)">
      <summary>
        <para>This method converts an output string from internal storage format to an output storage format defined by a conversion code. After using Oconv, you can use
the <em>Status</em> property to determine the status of this method.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: System.String</para>
        <para>One of the following status values:</para>
        <list type="table">
          <listheader>
            <term>
              <strong>Value</strong>
            </term>
            <description>
              <strong>Description</strong>
            </description>
          </listheader>
          <item>
            <term>0</term>
            <description>The conversion was successful.</description>
          </item>
          <item>
            <term>1</term>
            <description>The string supplied was invalid.</description>
          </item>
          <item>
            <term>2</term>
            <description>The conversion code was invalid.</description>
          </item>
          <item>
            <term>3</term>
            <description>Conversion of possibly invalid data was successful.</description>
          </item>
        </list>
      </returns>
      <param name="aString">The string to convert.</param>
      <param name="aConvCode">Any BASIC ICONV conversion code.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.ReleaseTaskLock(System.Int32)">
      <summary>
        <para>This method releases one of the 64 UniVerse task locks set previously through the <span class="Courier">CreateTaskLock()</span> method.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <param name="pLockNum">The number, 0 through 63, of the task lock to release.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.SetAtVariable(System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>
        <para align="left">
          <font size="2">This method sets the specified BASIC @variable to the value passed.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <param name="aTokenVal">
        <para>T <font size="2">he token number for the @variable to be set.</font></para>
        <para></para>
        <table>
          <thead>
            <tr>
              <th>
                <strong>Token Number</strong>
              </th>
              <th>
                <strong>Token</strong>
              </th>
              <th>
                <strong>Description</strong>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>7</td>
              <td>UniObjectsTokens.AT_USER_RETURN_CODE</td>
              <td>@USER.RETURN.CODE</td>
            </tr>
          </tbody>
        </table>
        <para></para>
      </param>
      <param name="aAtVariable">T <font size="2">he UniDynArray value to which the @variable is to be set.</font></param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniDataSet">
      <summary>
        <para>This method creates and returns a <span class="Courier">UniDataSet</span> object attached to the <span class="Courier">UniSession</span> object.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDataSet</para>
        <para>A <span class="Courier">UniDataSet</span> object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniDynArray">
      <summary>
        <para>This method returns a new UniDynArray object either as a default string or as the string specified by the string object.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>A <span class="Courier">UniDynArray</span> object.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.CreateUniDynArray(System.String)">
      <summary>
        <para>This method returns a new UniDynArray object either as a default string or as the string specified by the string object, when string is the string object
that represents the data you want to converted into a dynamic array.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this method fails, it throws a UniSessionException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>A <span class="Courier">UniDynArray</span> object.</para>
      </returns>
      <param name="s">The string object that represents the data you want to converted into a dynamic array.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.Dispose(System.Boolean)">
      <summary>
        <para>This method releases unmanaged resources. It can also optionally release managed resources.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <param name="disposing">If the value is set to <strong>True</strong>, both managed and unmanaged resources are released. If the value is set to <strong>False</strong>, only the
unmanaged resources are released.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.GetDelimitedByteArrayRecordID(System.Int32[],System.Int32)">
      <summary>
        <para>This method creates and returns a delimited byte array of record IDs for the specified array of field numbers and delimiter.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Byte[ ]</para>
        <para>A byte array.</para>
      </returns>
      <param name="pFieldNumber">
        <para>An array of integers representing the recordIDs.</para>
      </param>
      <param name="pDelimeter">
        <para>The value of the delimiter specified in the array.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.GetDelimitedByteArrayRecordID(System.String[],System.Int32)">
      <summary>
        <para>This method creates and returns a delimited byte array of record IDs for the specified array of string and delimiter.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.Byte[ ]</para>
        <para>A delimited byte array of record IDs.</para>
      </returns>
      <param name="pRecordID">An array of strings representing the record IDs.</param>
      <param name="pDelimeter">The delimiter specified in the string.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.GetDelimitedString(System.String[],System.Int32)">
      <summary>
        <para>This method creates and returns a delimited string for the specified array of string values and delimiter.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.String</para>
        <para>A delimited string.</para>
      </returns>
      <param name="pRecordID">
        <para>The record ID specified in the array.</para>
      </param>
      <param name="pDelimeter">
        <para>The delimiter specified in the array.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.GetDelimitedString(System.Int32[],System.Int32)">
      <summary>
        <para>This method creates and returns a delimited string for the specified array of integers values and delimiter.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <returns>
        <para>Type: System.String</para>
        <para>A delimited string.</para>
      </returns>
      <param name="pFieldNumber">
        <para>The field number specified in the array.</para>
      </param>
      <param name="pDelimeter">
        <para>The delimiter specified in the array.</para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSession.NullSession">
      <summary>This function allows users to create a new UniDynArray object without an active U2 connection.</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.Account">
      <summary>
        <para>
          <font size="2">This property returns the account path, which is the name of the database account to which the session is connected.</font>
        </para>
        <para>
          <strong>Namespace</strong>: U2.Data.Client.UO<br /><strong>Assembly</strong>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.BlockingStrategy">
      <summary>
        <para align="left">
          <font size="2">This property gets or sets the default blocking strategy used in the session for all</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniFile</font>
          </font>
          <font size="2">and</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniDictionary</font>
          </font>
          <font size="2">objects.</font>
        </para>
        <para align="left">
          <strong>Namespace</strong>: U2.Data.Client.UO<br /><strong>Assembly</strong>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.CompressionEnabled">
      <summary>This property indicates whether Compression is enabled. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.CompressionThreshold">
      <summary>This property gets or sets the Compression threshold. &lt;?xml:namespace prefix = "innovasys" ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">This property throws a UniSessionException if the value is null or less than 0.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.CurrentOpenFiles">
      <summary>
        <para align="left">
          <font size="2">This property returns the number of files that are currently open.</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniFile</font>
          </font>
          <font size="2">and</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniDictionary</font>
          </font>
          <font size="2">objects.</font>
        </para>
        <para align="left">
          <strong>Namespace</strong>: U2.Data.Client.UO<br /><strong>Assembly</strong>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.EncryptionEnabled">
      <summary>
        <para>This property returns <span class="Courier">true</span> if encryption is enabled for this connection, otherwise <span class="Courier">false</span>.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.EncryptionType">
      <summary>
        <para>This property gets or sets the default encryption for the session.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.HostName">
      <summary>
        <para align="left">
          <font size="2">This property returns the name of the database server as specified by the <span class="Courier"><font size="2" face="NJADE B+ Courier,Courier"><font size="2" face="NJADE B+ Courier,Courier">HostName</font></font></span></font>
          <font size="2">property.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.HostPort">
      <summary>
        <para align="left">
          <font size="2">This property returns the port number on the host to use for the connection.</font>
        </para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.HostType">
      <summary>
        <para align="left">
          <font size="2">This property returns the type of host on which the UniData or UniVerse database server is running.</font>
        </para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.IPAddress">
      <summary>
        <para>This property returns the internet protocol (IP) address.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.IsActive">
      <summary>
        <para>This property gets or sets the value that indicates whether the session is active.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.IsSecure">
      <summary>
        <para>This property gets or sets the value that indicates whether the session is disposed.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.LastServerError">
      <summary>
        <para>The LastServerError property allows users to query the last server error. When an exception occurs, this property provides additional, meaningful
information</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">This exception is seen if there is no valid connection.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.LockStrategy">
      <summary>
        <para>This property gets or sets the default locking strategy used in this session for all UniFile and UniDictionary objects.</para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.MaxOpenFiles">
      <summary>
        <para align="left">
          <font size="2">This property returns the maximum number of files that can be open at the same time.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.NLSEnabled">
      <summary>
        <para align="left">
          <font size="2">This property gets the value of the NLS Map flag, which indicates whether the NLS map for the UniData or UniVerse database is
enabled.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.NLSLocalesEnabled">
      <summary>
        <para align="left">
          <font size="2">This property gets the value of the NLS Locales flag, which indicates whether NLS locales are enabled for the UniData or
UniVerse database.</font>
        </para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.Password">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns the password for the specified user.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.ReleaseStrategy">
      <summary>
        <para align="left">
          <font size="2">This property gets or sets the default release strategy used in the session for all</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniFile</font>
          </font>
          <font size="2">and</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">UniDictionary</font>
          </font>
          <font size="2">objects. Whenever the record ID is reset
with the</font>
          <font size="2" face="NJADE B+ Courier,Courier">
            <font size="2" face="NJADE B+ Courier,Courier">RecordID ( )</font>
          </font>
          <font size="2">property,
the release strategy reverts to the initial value.</font>
        </para>
        <para align="left">
          <font size="2">
            <font size="2">Altering the release strategy does not affect files or dictionaries that are already opened.</font>
          </font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.RpcServiceType">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns the service type: "udcs" for UniData or "uvcs" for UniVerse.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.ServerType">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property returns the service type: "udcs" for UniData or "uvcs" for UniVerse.&lt;/P&gt;&lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.ServerVersion">
      <summary>
        <para align="left">
          <font size="2">This property returns the version of the backend UniData or UniVerse database server. A value of less than 2 represents a
pre-Release 9.5 server.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.Status">
      <summary>This property gets a string containing the connection status.</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.Timeout">
      <summary>
        <para align="left">
          <font size="2">This property gets or sets the length of time before the session times out. The remote procedure call (UniRPC) utility uses the
timeout setting.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <exception caption="UniSessionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSessionException">If this property fails, it throws a UniSessionException.</exception>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.UOEncoding">
      <summary>
        <para align="left">
          <font size="2">This property gets or sets the encoding object.</font>
        </para>
        <para>
          <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</para>
      </summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSession.UserName">
      <summary>
        <para align="left">
          <font size="2">This property gets or sets the value representing the user name.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniSubroutine.Call">
      <summary>&lt;P&gt;This method executes the cataloged UniData or UniVerse subroutine identified by the &lt;SPAN class=Courier&gt;RoutineName &lt;/SPAN&gt;property, or
identified in the &lt;SPAN class=Courier&gt;UniSession.CreateUniSubroutine()&lt;/SPAN&gt; call. It uses the arguments established with the &lt;SPAN
class=Courier&gt;SetArg()&lt;/SPAN&gt; method.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniSubroutine.GetArg(System.Int32)">
      <summary>&lt;P&gt;This method retrieves argument values returned from the subroutine after the &lt;SPAN class=Courier&gt;Call()&lt;/SPAN&gt;method has executed
successfully.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>Argument values returned from the subroutine.</para>
      </returns>
      <param name="aArgNum">The number of the argument you are requesting. The first argument is 0.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSubroutine.GetArgDynArray(System.Int32)">
      <summary>&lt;P&gt;This method retrieves argument values returned from the subroutine as a &lt;SPAN class=Courier&gt;UniDynArray &lt;/SPAN&gt;after the &lt;SPAN
class=Courier&gt;Call()&lt;/SPAN&gt; method has executed successfully.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniFileException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniFileException">If this method fails, it throws a UniFileException.</exception>
      <returns>
        <para>Type: U2.Data.Client.UO.UniDynArray</para>
        <para>Argument values returned from the subroutine as a <span class="Courier">UniDynArray</span>.</para>
      </returns>
      <param name="aArgNum">The number of the argument you are requesting. The first argument is 0.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSubroutine.ResetArgs">
      <summary>This method resets the output argument array of the &lt;SPAN class=Courier&gt;UniSubroutine&lt;/SPAN&gt; object to empty values. &lt;?xml:namespace prefix =
innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniSubroutine.SetArg(System.Int32,U2.Data.Client.UO.UniDynArray)">
      <summary>&lt;P&gt;This method sets the value of an argument as a UniDynArray&amp;nbsp;to be passed to a cataloged subroutine.&lt;/P&gt; &lt;P&gt;The argument is passed
to the server before making the call. Any argument you do not specify with the &lt;SPAN class=Courier&gt;SetArg()&lt;/SPAN&gt; method is passed as an empty
string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSubroutineException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSubroutineException">If this method fails, it throws a UniSubroutineException.</exception>
      <param name="aArgNum">The number of the argument you are setting. The first argument is 0.</param>
      <param name="aArgVal">A <span class="Courier">UniDynArray</span> representing the value of the argument to pass to the server subroutine.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniSubroutine.SetArg(System.Int32,System.String)">
      <summary>&lt;P&gt;This method sets the value of an argument as a String to be passed to a cataloged subroutine.&lt;/P&gt; &lt;P&gt;The argument is passed to the server
before making the call. Any argument you do not specify with the &lt;SPAN class=Courier&gt;SetArg()&lt;/SPAN&gt; method is passed as an empty
string.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
      <exception caption="UniSubroutineException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniSubroutineException">If this method fails, it throws a UniSubroutineException.</exception>
      <param name="aArgNum">The number of the argument you are setting. The first argument is 0.</param>
      <param name="aArgVal">The value of the argument to pass to the server subroutine.</param>
    </member>
    <member name="P:U2.Data.Client.UO.UniSubroutine.ArgumentsNumber">
      <summary>This property gets the number of arguments this subroutine expects to use. &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniSubroutine.RoutineName">
      <summary>This property gets the name of the subroutine to call on the server.&amp;nbsp; &lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="M:U2.Data.Client.UO.UniTransaction.Begin">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method begins a new transaction. This transaction can be nested. If a transaction is already active, the nested
transaction becomes active and the transaction level is incremented.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniTransaction.Commit">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method commits an active transaction. If it is a nested transaction, the parent transaction becomes active and the
transaction level is decremented.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniTransaction.GetLevel">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method returns the current transaction level. It corresponds to the UniObjects &lt;/FONT&gt;&lt;B&gt;&lt;FONT
size=2 face="NJAGI G+ Palatino,Palatino"&gt;&lt;FONT size=2 face="NJAGI G+ Palatino,Palatino"&gt;Level &lt;/B&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT
size=2&gt;property.&lt;/FONT&gt;&lt;/P&gt;&lt;FONT size=2&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets"
/&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
      <returns>
        <para>Type: System.Int32</para>
        <para>The current transaction level.</para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniTransaction.IsActive">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method determines whether a transaction is currently active. It returns &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;true &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;if the transaction is active,
otherwise it returns &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;false&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;. A transaction is currently active if the &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniTransaction.Begin()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;method has been
called, but neither &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;UniTransaction.Commit()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;nor &lt;/FONT&gt;&lt;FONT size=2 face="NJADE B+
Courier,Courier"&gt;&lt;FONT size=2 face="NJADE B+ Courier,Courier"&gt;UniTransaction.Rollback()&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=2&gt;has been
called.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
      <returns>
        <para>Type: System.Boolean</para>
        <para>
          <font size="2">
            <font face="Courier New">true</font> if the transaction is active, otherwise, <font face="NJADE B+ Courier,Courier"><font face="NJADE B+ Courier,Courier">false</font></font>.</font>
        </para>
      </returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniTransaction.Rollback">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method rolls back an active transaction. If this is a nested transaction, the parent transaction becomes active and
the transaction level is decremented.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget
type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <exception caption="UniTransactionException Class" cref="U2.Data.Client~U2.Data.Client.UO.UniTransactionException">If this method fails, it throws a UniTransactionException.</exception>
    </member>
    <member name="M:U2.Data.Client.UO.UniXML.GenerateXMLUsingXmap(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method uses an existing XMAP file on the server to generate an XML document from UniData data. The relationship
between an XML document and a UniData file is described in the XMAP file. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="xmapname">Represents an XMAP file name.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniXML.GetDataSet">
      <summary>
        <para align="left">
          <font size="2">This method returns a DataSet using m_Xmlstr and m_Xsdstr if one exists.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <returns>This method returns a DataSet if one exists.</returns>
    </member>
    <member name="M:U2.Data.Client.UO.UniXML.GenerateXML(System.String)">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This method uses the UniQuery LIST command or the UniData SQL SELECT command to get an XML document from the UniData
server. &lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="cmd">Sets the option to an empty string, checks the result, and reports an error if one occurs.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniXML.GenerateXML(System.String,System.String)">
      <summary>&lt;FONT size=2&gt;This method uses the UniQuery LIST command or the UniData SELECT command to get an XML document from the UniData server. &lt;?xml:namespace
prefix = innovasys ns = "http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
      <param name="cmd">Sets the option to an empty string, checks the result, and reports an error if one occurs.</param>
      <param name="options">
        <para align="left">
          <font size="2">You can specify options separated by @FM, and option values separated by @VM.</font>
        </para>
      </param>
    </member>
    <member name="M:U2.Data.Client.UO.UniXML.UpdateDataUsingXmap(System.String)">
      <summary>
        <para align="left">
          <font size="2">This method writes to a UniData file residing on the server using an existing XMAP file and the m_Xmlstr residing on the client.
The XMAP file is stored in the UniData account in the _XML_ file.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <param name="xmapname">Represents an XMAP file name.</param>
    </member>
    <member name="M:U2.Data.Client.UO.UniXML.UpdateDataUsingXmap(System.String,System.String)">
      <summary>
        <para align="left">
          <font size="2">This method writes to a UniData file residing on the server using an existing XMAP file and the m_Xmlstr residing on the client.
The XMAP file is stored in the UniData account in the _XML_ file.</font>
        </para>
        <para>
          <font size="2">
            <b>Namespace</b>: U2.Data.Client.UO<br /><b>Assembly</b>: U2.Data.Client.UO (in U2.Data.Client.dll)</font>
        </para>
      </summary>
      <param name="xmapname">Represents an XMAP file name.</param>
      <param name="xmlname">Represents the XML to be written to the server side.</param>
    </member>
    <member name="P:U2.Data.Client.UO.UniXML.Errcode">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets a UniXML error code.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniXML.Errmsg">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets a UniXML error message.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniXML.XMLString">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets an XML document as a string type.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
    <member name="P:U2.Data.Client.UO.UniXML.XSDString">
      <summary>&lt;P align=left&gt;&lt;FONT size=2&gt;This property gets or sets an XML schema as a string type.&lt;/P&gt;&lt;?xml:namespace prefix = innovasys ns =
"http://www.innovasys.com/widgets" /&gt;&lt;innovasys:widget type="Include Topic" layout="block"&gt;&lt;innovasys:widgetproperty layout="block"
name="source"&gt;95ddc377-80d0-4ed3-8cb3-25b459724c6a&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;&lt;/FONT&gt;</summary>
    </member>
  </members>
</doc>