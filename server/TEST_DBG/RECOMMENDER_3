002D002E002F003000310032003400360039003A003B004700480049004B0051005200530054005B005F00600061006200640065006600670069006A006B006C006E006F00700071007300740075007600780079007A007C007D007F0080008200830085008C00900091009200930095009600970098009A009B009C009D009F00A000A100A300A400A600AD00B100B200B300B400B600B700B800B900BB00BC00BD00BE00C000C100C200C500CC00CE00CF00D000D200D300D400D600DD00DF00E000E100E200E400E600E700E800E900EB00F100F200F300F5
00000006000C00120018001E0024002A002C0048004F00570063006A00710073007F008B00AA00AC00B300BF00DF014301680174019401F8021D0229024902AD02D202DE02EA02F002FC030803140334033A03460372039E03CA03F60422044E047A04A604A804AF04BB04DB053F05640570057C0582058E059A05A605C605CC05D806040630065C0688068A0691069D06BD06DD0702070E071A0720072C073807440764076A077607A207CE07D007D707E307EF07F50801082D0859085B0862086E087A089A08BA08C008CC08F8092409500952095E096A0970
ıııııııııııııııııııııııııııııııııııııııııııııGoSub InitıGoSub ShouldBuildAndRecommendıGoSub ShouldAddAndRecommendıGoSub ShouldNotAddTwiceForSameClientıGoSub ShouldApplyWeightingıGoSub ShouldFilterMyChoicesııGoSub WrapUpııSTOPııInit:ı  Open 'U2_ORDERS' To U2_ORDERS Elseı     Error 'Cannot open U2_ORDERS'ı     STOPı  Endı  ıııı  ıııı  ıı  Cmd = 'PHANTOM RUNPY books.pysrc u2_recommender_v3'ı  Perform Cmdı  Wait 2ı  ı  ReturnıııııCallSub:ı  OutData = ''ı  ErrText = ''ı  Call u2_recommender_v3( Action, InData, OutData, ErrText)ıReturnıııııShouldBuildAndRecommend:ııAnnounce 'Should build and recommend'ııııOrderRec = ''ıOrderRec<1> = 1ıOrderRec<10> = 1:@VM:2:@VM:3ıWrite OrderRec On U2_ORDERS, 1ııOrderRec = ''ıOrderRec<1> = 2ıOrderRec<10> = 1:@VM:3:@VM:4ıWrite OrderRec On U2_ORDERS, 2ııOrderRec = ''ıOrderRec<1> = 3ıOrderRec<10> = 1:@VM:2:@VM:5ıWrite OrderRec On U2_ORDERS, 3ııAction = 1ıInData = ''ıGoSub CallSubıAssertEmpty "There should be no error", ErrTextııAction = 3ıInData = 1ıInData<4> = 1ıGoSub CallSubııAssertFull "Should have results", OutDataıAssertIs "Top should be 3", OutData<1,1>,3ıAssertIs '3 should have 2 counts', OutData<2,1>, 2ııAssertIs "Equal should be 2", OutData<1,2>,2ıAssertIs '2 should have 2 counts', OutData<2,2>, 2ııAssertIs "Should have 5", OutData<1,3>,5ıAssertIs '5 should have 1 count', OutData<2,3>, 1ııAssertIs "Should have 4", OutData<1,4>,4ıAssertIs '4 should have 1 count', OutData<2,4>, 1ııReturnıııııShouldAddAndRecommend:ııAnnounce 'Should add and recommend'ııııOrderRec = ''ıOrderRec<1> = 4ıOrderRec<10> = 1:@VM:2:@VM:3ıWrite OrderRec On U2_ORDERS, 4ııAction = 2ıInData = 4ıGoSub CallSubıAssertEmpty "There should be no error", ErrTextııAction = 3ıInData = 1ıInData<4> = 1ıGoSub CallSubııAssertFull "Should have results", OutDataıAssertIs "Top should be 3", OutData<1,1>,3ıAssertIs '3 should have 3 counts', OutData<2,1>, 3ııAssertIs "Equal should be 2", OutData<1,2>,2ıAssertIs '2 should have 3 counts', OutData<2,2>, 3ııReturnıııııShouldNotAddTwiceForSameClient:ııAnnounce 'Should not add twice for the same client'ııııOrderRec = ''ıOrderRec<1> = 4ıOrderRec<10> = 3ıWrite OrderRec On U2_ORDERS, 5ııAction = 2ıInData = 5ıGoSub CallSubıAssertEmpty "There should be no error", ErrTextııAction = 3ıInData = 1ıInData<4> = 1ıGoSub CallSubııAssertFull "Should have results", OutDataıAssertIs "Top should be 3", OutData<1,1>,3ıAssertIs '3 should still have 3 counts', OutData<2,1>, 3ıııReturnıııııShouldApplyWeighting:ııAnnounce 'Should apply weightings'ııAction = 3ıInData = 1ıGoSub CallSubııAssertFull "Should have results", OutDataıAssertIs "Top should now be 2", OutData<1,1>,2ıAssertIs '2 should have 9 counts', OutData<2,1>, 9ııReturnıııııShouldFilterMyChoices:ııAnnounce 'Should filter what I have bought'ııAction = 3ıInData = 1ıInData<2> = 3ıInData<4> = 1ııGoSub CallSubııAssertFull "Should have results", OutDataıAssertHasNot "Should not have 2", OutData<1>, 2ıAssertHasNot "Should not have 5", OutData<1>, 5ıAssertHas "Should still have 3", OutData<1>, 3ııReturnıııııWrapUp:ıAction = 9ı   InData = ''ı   GoSub CallSubı   ıReturnı
