$BASICTYPE "P"
SUBROUTINE u2_saveSalesOrder( SalesId, OrderRec, ErrText)
* ---------------------------------------------------------------------------
*  @@Name        : us_setSalesOrder
*  @@Description : Write a new or updated sales order
*  @@Version     : 1.0
* ---------------------------------------------------------------------------
*  Brief Description
*  -----------------
*  @@INFO{
*    The sales orders are here keyed on a combination of date, time and a
*    sequence number to disambiguate. This is not normal practice, but for
*    the demontration it overcomes the need to include counters with the data.
*}
* ---------------------------------------------------------------------------
*  Warnings
*  --------
*
* ---------------------------------------------------------------------------
*  Modification History
*  --------------------
*  @@Log
* ---------------------------------------------------------------------------
* Keywords
* --------
*
* --------------------------------------------------------------------------
* To Do List
* ----------
*
* --------------------------------------------------------------------------
$INCLUDE u2_common.h
$INCLUDE books.inc U2_CLIENT_ORDERS.h
$INCLUDE books.inc U2_ORDERS.h
ErrText = ''
OrigRec = ''
IF SalesId = '' THEN
Counter = 0
Key = DATE() :"*":INT(TIME())
Found = @FALSE
LOOP
Counter += 1
SalesId = Key : "*": Counter
READU Temp FROM F.ORDERS, SalesId LOCKED
Found = @FALSE
END THEN
Found = @FALSE
END ELSE
Found = @TRUE
END
UNTIL Found DO
RELEASE F.ORDERS, SalesId
REPEAT
END ELSE
READU OrigRec FROM F.ORDERS, SalesId ELSE
OrigRec = ''
END
END
* validate
! TBD
* write
WRITE OrderRec ON F.ORDERS, SalesId
GOSUB UpdateClientOrders
RETURN
*---------------------------------------------------------------------------
* UpdateClientOrders
*---------------------------------------------------------------------------
UpdateClientOrders:
* update client order index
ClientId = OrderRec<U2.ORDERS.CLIENT.ID>
READU ClientIndexRec FROM F.CLIENT.ORDERS, ClientId ELSE
ClientIndexRec = ''
END
LOCATE SalesId IN ClientIndexRec<U2.CLIENT.ORDERS.ORDER.IDS> SETTING Pos ELSE
INS SalesId BEFORE ClientIndexRec<U2.CLIENT.ORDERS.ORDER.IDS,Pos>
END
WRITE ClientIndexRec ON F.CLIENT.ORDERS, ClientId
IF OrigRec<U2.ORDERS.CLIENT.ID> = '' THEN
RETURN
END
IF OrigRec<U2.ORDERS.CLIENT.ID> = ClientId THEN
RETURN
END
ClientId = OrigRec<U2.ORDERS.CLIENT.ID>
READU ClientIndexRec FROM F.CLIENT.ORDERS, ClientId ELSE
ClientIndexRec = ''
END
LOCATE SalesId IN ClientIndexRec<U2.CLIENT.ORDERS.ORDER.IDS> SETTING Pos THEN
DEL ClientIndexRec<U2.CLIENT.ORDERS.ORDER.IDS,Pos>
END
WRITE ClientIndexRec ON F.CLIENT.ORDERS, ClientId
RETURN

